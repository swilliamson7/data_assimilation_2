┌ Warning: Using fallback BLAS replacements, performance may be degraded
└ @ Enzyme.Compiler ~/.julia/packages/GPUCompiler/U36Ed/src/utils.jl:59
warning: didn't implement memmove, using memcpy as fallback which can result in errors
warning: didn't implement memmove, using memcpy as fallback which can result in errors
params_adjoint2 = Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.001
  x: Array{Float64}((6,)) [1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
  u: Array{Float64}((6, 10001)) [0.053789363540378256 -0.034477948177364076 … -0.14986767532029263 0.20624645389996643; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  n: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  k: Float64 20.0
  r: Float64 0.5
  q: q_kf (function of type Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
  J: Float64 0.0
  data_steps: Array{Int64}((21,)) [3000, 3200, 3400, 3600, 3800, 4000, 4200, 4400, 4600, 4800  …  5200, 5400, 5600, 5800, 6000, 6200, 6400, 6600, 6800, 7000]
  data: Array{Float64}((6, 10001)) [0.99990874916679 1.153662067810838 … -0.9571195397042735 -1.100676445843749; -3.174525549058001e-5 1.9232965189829104e-5 … 0.7732345424757039 0.7719635416570036; … ; -0.0001260456441650153 0.020048621447258965 … -1.2843958254226309 -1.3063042728740202; -0.00012361397362475215 -8.813508269354106e-5 … 1.395158739478939 1.323931700479082]
  states: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  energy: Array{Float64}((3, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  A: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.001 0.0; … ; 0.02 -0.06 … 0.9995 0.0; 0.0 0.02 … 0.0 0.9995]
  B: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Gamma: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  E: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.0 0.0; … ; 0.0 0.0 … 1.0 0.0; 0.0 0.0 … 0.0 1.0]
  Q: Array{Float64}((6, 6)) [0.001653213969959386 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q_inv: Float64 0.0
  R: Array{Float64}((6, 6)) [1.0009134387242822e-8 0.0 … 0.0 0.0; 0.0 1.0009134387242822e-8 … 0.0 0.0; … ; 0.0 0.0 … 1.0009134387242822e-8 0.0; 0.0 0.0 … 0.0 1.0009134387242822e-8]
  R_inv: Array{Float64}((6, 6)) [9.990873948845702e7 0.0 … 0.0 0.0; 0.0 9.990873948845702e7 … 0.0 0.0; … ; 0.0 0.0 … 9.990873948845702e7 0.0; 0.0 0.0 … 0.0 9.990873948845702e7]
  K: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Kc: Array{Float64}((3, 3)) [-40.0 20.0 0.0; 20.0 -60.0 20.0; 0.0 20.0 -40.0]

y = Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 0
  t: Int64 0
  dt: Float64 0.0
  x: #undef
  u: #undef
  n: #undef
  k: Float64 0.0
  r: Float64 0.0
  q: #undef
  J: Float64 0.0
  data_steps: #undef
  data: #undef
  states: #undef
  energy: #undef
  A: #undef
  B: #undef
  Gamma: #undef
  E: #undef
  Q: #undef
  Q_inv: Float64 0.0
  R: #undef
  R_inv: #undef
  K: #undef
  Kc: #undef

#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
│       nothing::Nothing
└──     return prev
) => Int64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1218 within `make_zero`
define i64 @julia_make_zero_5770({}* noundef nonnull align 8 dereferenceable(24) %0, i64 signext %1) #0 {
top:
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220 within `make_zero`
  ret i64 %1
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
│       nothing::Nothing
└──     return prev
) => Int64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1218 within `make_zero`
define i64 @julia_make_zero_5774({}* noundef nonnull align 8 dereferenceable(24) %0, i64 signext %1) #0 {
top:
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220 within `make_zero`
  ret i64 %1
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
(i, xi, Core.Typeof(xi), seen) = (3, 0.001, Float64, IdDict{Any, Any}(Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.001
  x: Array{Float64}((6,)) [1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
  u: Array{Float64}((6, 10001)) [0.053789363540378256 -0.034477948177364076 … -0.14986767532029263 0.20624645389996643; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  n: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  k: Float64 20.0
  r: Float64 0.5
  q: q_kf (function of type Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
  J: Float64 0.0
  data_steps: Array{Int64}((21,)) [3000, 3200, 3400, 3600, 3800, 4000, 4200, 4400, 4600, 4800  …  5200, 5400, 5600, 5800, 6000, 6200, 6400, 6600, 6800, 7000]
  data: Array{Float64}((6, 10001)) [0.99990874916679 1.153662067810838 … -0.9571195397042735 -1.100676445843749; -3.174525549058001e-5 1.9232965189829104e-5 … 0.7732345424757039 0.7719635416570036; … ; -0.0001260456441650153 0.020048621447258965 … -1.2843958254226309 -1.3063042728740202; -0.00012361397362475215 -8.813508269354106e-5 … 1.395158739478939 1.323931700479082]
  states: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  energy: Array{Float64}((3, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  A: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.001 0.0; … ; 0.02 -0.06 … 0.9995 0.0; 0.0 0.02 … 0.0 0.9995]
  B: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Gamma: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  E: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.0 0.0; … ; 0.0 0.0 … 1.0 0.0; 0.0 0.0 … 0.0 1.0]
  Q: Array{Float64}((6, 6)) [0.001653213969959386 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q_inv: Float64 0.0
  R: Array{Float64}((6, 6)) [1.0009134387242822e-8 0.0 … 0.0 0.0; 0.0 1.0009134387242822e-8 … 0.0 0.0; … ; 0.0 0.0 … 1.0009134387242822e-8 0.0; 0.0 0.0 … 0.0 1.0009134387242822e-8]
  R_inv: Array{Float64}((6, 6)) [9.990873948845702e7 0.0 … 0.0 0.0; 0.0 9.990873948845702e7 … 0.0 0.0; … ; 0.0 0.0 … 9.990873948845702e7 0.0; 0.0 0.0 … 0.0 9.990873948845702e7]
  K: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Kc: Array{Float64}((3, 3)) [-40.0 20.0 0.0; 20.0 -60.0 20.0; 0.0 20.0 -40.0]
 => Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.0
  x: #undef
  u: #undef
  n: #undef
  k: Float64 0.0
  r: Float64 0.0
  q: #undef
  J: Float64 0.0
  data_steps: #undef
  data: #undef
  states: #undef
  energy: #undef
  A: #undef
  B: #undef
  Gamma: #undef
  E: #undef
  Q: #undef
  Q_inv: Float64 0.0
  R: #undef
  R_inv: #undef
  K: #undef
  Kc: #undef
))
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1272 within `make_zero`
define double @julia_make_zero_5807({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1273 within `make_zero`
  ret double 0.000000e+00
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
("res", i, xi, Core.Typeof(xi), seen) = ("res", 3, 0.0, Float64, IdDict{Any, Any}(Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.001
  x: Array{Float64}((6,)) [1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
  u: Array{Float64}((6, 10001)) [0.053789363540378256 -0.034477948177364076 … -0.14986767532029263 0.20624645389996643; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  n: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  k: Float64 20.0
  r: Float64 0.5
  q: q_kf (function of type Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
  J: Float64 0.0
  data_steps: Array{Int64}((21,)) [3000, 3200, 3400, 3600, 3800, 4000, 4200, 4400, 4600, 4800  …  5200, 5400, 5600, 5800, 6000, 6200, 6400, 6600, 6800, 7000]
  data: Array{Float64}((6, 10001)) [0.99990874916679 1.153662067810838 … -0.9571195397042735 -1.100676445843749; -3.174525549058001e-5 1.9232965189829104e-5 … 0.7732345424757039 0.7719635416570036; … ; -0.0001260456441650153 0.020048621447258965 … -1.2843958254226309 -1.3063042728740202; -0.00012361397362475215 -8.813508269354106e-5 … 1.395158739478939 1.323931700479082]
  states: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  energy: Array{Float64}((3, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  A: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.001 0.0; … ; 0.02 -0.06 … 0.9995 0.0; 0.0 0.02 … 0.0 0.9995]
  B: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Gamma: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  E: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.0 0.0; … ; 0.0 0.0 … 1.0 0.0; 0.0 0.0 … 0.0 1.0]
  Q: Array{Float64}((6, 6)) [0.001653213969959386 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q_inv: Float64 0.0
  R: Array{Float64}((6, 6)) [1.0009134387242822e-8 0.0 … 0.0 0.0; 0.0 1.0009134387242822e-8 … 0.0 0.0; … ; 0.0 0.0 … 1.0009134387242822e-8 0.0; 0.0 0.0 … 0.0 1.0009134387242822e-8]
  R_inv: Array{Float64}((6, 6)) [9.990873948845702e7 0.0 … 0.0 0.0; 0.0 9.990873948845702e7 … 0.0 0.0; … ; 0.0 0.0 … 9.990873948845702e7 0.0; 0.0 0.0 … 0.0 9.990873948845702e7]
  K: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Kc: Array{Float64}((3, 3)) [-40.0 20.0 0.0; 20.0 -60.0 20.0; 0.0 20.0 -40.0]
 => Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.0
  x: #undef
  u: #undef
  n: #undef
  k: Float64 0.0
  r: Float64 0.0
  q: #undef
  J: Float64 0.0
  data_steps: #undef
  data: #undef
  states: #undef
  energy: #undef
  A: #undef
  B: #undef
  Gamma: #undef
  E: #undef
  Q: #undef
  Q_inv: Float64 0.0
  R: #undef
  R_inv: #undef
  K: #undef
  Kc: #undef
))
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Vector{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Vector{Float64}, %15)::Vector{Float64}
13 ┄ %26 = φ (#11 => %15, #12 => %25)::Any
│    %27 = π (%26, Vector{Float64})
└───       return %27
14 ─ %29 = Base.arraysize(prev, 1)::Int64
│    %30 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Float64}, svec(Any, Int64), 0, :(:ccall), Vector{Float64}, :(%29), :(%29)))::Vector{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %30::Any, prev::Any)::Any
│    %32 = Base.arraysize(prev, 1)::Int64
│    %33 = Base.slt_int(%32, 0)::Bool
│    %34 = Core.ifelse(%33, 0, %32)::Int64
│    %35 = Base.slt_int(%34, 1)::Bool
└───       goto #16 if not %35
15 ─       goto #17
16 ─       goto #17
17 ┄ %39 = φ (#15 => true, #16 => false)::Bool
│    %40 = φ (#16 => 1)::Int64
│    %41 = φ (#16 => 1)::Int64
│    %42 = Base.not_int(%39)::Bool
└───       goto #30 if not %42
18 ┄ %44 = φ (#17 => %40, #29 => %75)::Int64
│    %45 = φ (#17 => %41, #29 => %76)::Int64
└───       goto #22 if not true
19 ─ %47 = Base.arraysize(prev, 1)::Int64
│    %48 = Base.slt_int(%47, 0)::Bool
│    %49 = Core.ifelse(%48, 0, %47)::Int64
│    %50 = Base.sub_int(%44, 1)::Int64
│    %51 = Base.bitcast(UInt64, %50)::UInt64
│    %52 = Base.bitcast(UInt64, %49)::UInt64
│    %53 = Base.ult_int(%51, %52)::Bool
└───       goto #21 if not %53
20 ─       goto #22
21 ─       goto #23
22 ┄ %57 = Base.sub_int(%44, 1)::Int64
│    %58 = Base.mul_int(%57, 1)::Int64
│    %59 = Base.add_int(1, %58)::Int64
│    %60 = Base.bitcast(UInt64, %59)::UInt64
│    %61 = Base.sub_int(%60, 0x0000000000000001)::UInt64
│    %62 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%61), :(%61)))::Int32
│    %63 = Core.sext_int(Core.Int64, %62)::Int64
│    %64 = (%63 === 1)::Bool
└───       goto #23
23 ┄ %66 = φ (#21 => false, #22 => %64)::Bool
└───       goto #25 if not %66
24 ─       Base.arrayref(true, prev, %44)::Float64
└───       Base.arrayset(false, %30, 0.0, %44)::Vector{Float64}
25 ┄ %70 = (%45 === %34)::Bool
└───       goto #27 if not %70
26 ─       goto #28
27 ─ %73 = Base.add_int(%45, 1)::Int64
└───       goto #28
28 ┄ %75 = φ (#27 => %73)::Int64
│    %76 = φ (#27 => %73)::Int64
│    %77 = φ (#26 => true, #27 => false)::Bool
│    %78 = Base.not_int(%77)::Bool
└───       goto #30 if not %78
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %30
) => Vector{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_5873({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe31 = alloca [3 x {}*], align 16
  %gcframe31.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe31, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe31 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe31, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe31.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe31, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L29, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not24 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not24, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4687794448 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4687794448 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  br label %common.ret

common.ret:                                       ; preds = %L70, %L29, %L25, %L22
  %common.ret.op = phi {}* [ %23, %L25 ], [ %15, %L22 ], [ %27, %L29 ], [ %27, %L70 ]
  %24 = load {}*, {}** %5, align 8
  %25 = bitcast {}*** %2 to {}**
  store {}* %24, {}** %25, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L29:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:191 within `size`
   %26 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
   %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %26, i64 0, i32 1
   %arraylen = load i64, i64* %arraylen_ptr, align 8
; └
; ┌ @ boot.jl:484 within `Array` @ boot.jl:475
   %27 = call nonnull {}* inttoptr (i64 4304360888 to {}* ({}*, i64)*)({}* inttoptr (i64 4687794448 to {}*), i64 %arraylen)
   store {}* %27, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %28 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %27, {}** %28, align 8
  %29 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %29, align 8
  %30 = call nonnull {}* @"j1_setindex!_5874"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:318 within `eachindex`
; │┌ @ abstractarray.jl:134 within `axes1`
; ││┌ @ abstractarray.jl:98 within `axes`
; │││┌ @ array.jl:191 within `size`
      %arraylen5 = load i64, i64* %arraylen_ptr, align 8
; └└└└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not25.not = icmp eq i64 %arraylen5, 0
; └└└└
  br i1 %.not25.not, label %common.ret, label %L44.preheader

L44.preheader:                                    ; preds = %L29
  %31 = bitcast {}* %27 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L44

L44:                                              ; preds = %L70, %L44.preheader
  %value_phi9 = phi i64 [ %33, %L70 ], [ 1, %L44.preheader ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %32 = add nsw i64 %value_phi9, -1
; │││└
; │││┌ @ int.jl:513 within `<`
      %.not26.not = icmp ult i64 %32, %arraylen5
; └└└└
  br i1 %.not26.not, label %idxend, label %L70

L70:                                              ; preds = %idxend, %L44
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not28.not = icmp eq i64 %value_phi9, %arraylen5
; │└
   %33 = add nuw nsw i64 %value_phi9, 1
; └
  br i1 %.not28.not, label %common.ret, label %L44

idxend:                                           ; preds = %L44
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr1827 = load double*, double** %31, align 8
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr1827, i64 %32
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
   br label %L70
; └
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_5876({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_5877"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_5879({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_5880"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1272 within `make_zero`
define double @julia_make_zero_5881({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
  ret double 0.000000e+00
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1272 within `make_zero`
define double @julia_make_zero_5883({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
  ret double 0.000000e+00
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─── %1   = Enzyme.Compiler.nothing::Nothing
└────        goto #3 if not true
2 ───        goto #4
3 ───        $(Expr(:throw_undef_if_not, :seen, false))::Any
4 ┄── %5   = ($(QuoteNode(Val{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}())) ∈ ())::Any
└────        goto #6 if not %5
5 ───        goto #39
6 ───        goto #8 if not true
7 ───        goto #9
8 ───        $(Expr(:throw_undef_if_not, :seen, false))::Any
9 ┄── %11  = Core._apply_iterate(Base.iterate, Core.tuple, (Val{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}(),), ())::Tuple{Val{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}, Vararg{Any}}
└────        goto #11 if not true
10 ──        goto #12
11 ──        $(Expr(:throw_undef_if_not, :seen, false))::Any
12 ┄─ %15  = Core.apply_type(Enzyme.Compiler.Merger, %11, Nothing, false, false)::Type{Enzyme.Compiler.Merger{_A, Nothing, false, false}} where _A
│     %16  = %new(%15, %1)::Enzyme.Compiler.Merger{_A, Nothing, false, false} where _A
│     %17  = (%16)(1)::Val
│     %18  = Enzyme.Compiler.forcefold::typeof(Enzyme.Compiler.forcefold)
│     %19  = (Core._compute_sparams)(forcefold(::Val{ty}, ::Val{sty}, C::Vararg{Any, N}) where {ty, sty, N} @ Enzyme.Compiler ~/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330, %18, $(QuoteNode(Val{Enzyme.Compiler.AnyState}())), %17)::Core.SimpleVector
│     %20  = (Core._svec_ref)(%19, 2)::Any
│     %21  = Enzyme.Compiler.:(==)::typeof(==)
│     %22  = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %23  = (isa)(%20, WeakRef)::Bool
└────        goto #14 if not %23
13 ── %25  = π (%20, WeakRef)
│     %26  = invoke %21(%25::WeakRef, %22::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #19
14 ── %28  = (isa)(%20, Missing)::Bool
└────        goto #16 if not %28
15 ──        goto #19
16 ──        goto #18 if not true
17 ── %32  = (%20 === %22)::Bool
└────        goto #19
18 ──        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
19 ┄─ %36  = φ (#13 => %26, #15 => $(QuoteNode(missing)), #17 => %32)::Union{Missing, Bool}
└────        goto #21 if not %36
20 ──        goto #31
21 ── %39  = (Core._svec_ref)(%19, 2)::Any
│     %40  = Enzyme.Compiler.:(==)::typeof(==)
│     %41  = (isa)(%39, WeakRef)::Bool
└────        goto #23 if not %41
22 ── %43  = π (%39, WeakRef)
│     %44  = invoke %40(%43::WeakRef, $(QuoteNode(Enzyme.Compiler.AnyState))::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #28
23 ── %46  = (isa)(%39, Missing)::Bool
└────        goto #25 if not %46
24 ──        goto #28
25 ──        goto #27 if not true
26 ── %50  = (%39 === $(QuoteNode(Enzyme.Compiler.AnyState)))::Bool
└────        goto #28
27 ──        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
28 ┄─ %54  = φ (#22 => %44, #24 => $(QuoteNode(missing)), #26 => %50)::Union{Missing, Bool}
└────        goto #30 if not %54
29 ──        goto #31
30 ── %57  = (Core._svec_ref)(%19, 2)::Any
│            Core.apply_type(Base.Val, %57)::Type{Val{_A}} where _A
└────        goto #32
31 ┄─        goto #32
32 ┄─ %61  = φ (#30 => %57, #31 => $(QuoteNode(Enzyme.Compiler.AnyState)))::Any
│     %62  = (%61 isa Enzyme.Compiler.ActivityState)::Bool
└────        goto #34 if not %62
33 ──        goto #38
34 ── %65  = (isa)(%61, Enzyme.Compiler.ActivityState)::Bool
└────        goto #36 if not %65
35 ── %67  = π (%61, Enzyme.Compiler.ActivityState)
└────        goto #37
36 ── %69  = Base.convert(Enzyme.Compiler.ActivityState, %61)::Enzyme.Compiler.ActivityState
└────        goto #37
37 ┄─ %71  = φ (#35 => %67, #36 => %69)::Enzyme.Compiler.ActivityState
38 ┄─ %72  = φ (#33 => %61, #37 => %71)::Any
│     %73  = π (%72, Enzyme.Compiler.ActivityState)
└────        goto #39
39 ┄─ %75  = φ (#5 => Enzyme.Compiler.MixedState, #38 => %73)::Enzyme.Compiler.ActivityState
└────        goto #40
40 ──        goto #41
41 ── %78  = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %79  = (%75 === %78)::Bool
└────        goto #42
42 ──        goto #44 if not %79
43 ──        nothing::Nothing
│            nothing::Nothing
└────        return prev
44 ── %85  = Base.secret_table_token::Symbol
│     %86  = Base.getfield(seen, :ht)::Vector{Any}
│     %87  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%86), Core.Argument(4), :(%85)))::Any
│     %88  = (%87 === %85)::Bool
└────        goto #46 if not %88
45 ──        goto #47
46 ──        goto #47
47 ┄─ %92  = φ (#45 => %85, #46 => %87)::Any
│     %93  = (%92 === Base.secret_table_token)::Bool
│     %94  = Core.Intrinsics.not_int(%93)::Bool
└────        goto #48
48 ──        goto #49
49 ──        goto #60 if not %94
50 ── %98  = Base.getfield(seen, :ht)::Vector{Any}
│     %99  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%98), Core.Argument(4), :(Base.secret_table_token)))::Any
│     %100 = (%99 === Base.secret_table_token)::Bool
└────        goto #52 if not %100
51 ── %102 = Base.KeyError(prev)::Any
│            Base.throw(%102)::Union{}
└────        unreachable
52 ──        goto #53
53 ── %106 = (%99 isa Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})::Bool
└────        goto #55 if not %106
54 ──        goto #59
55 ── %109 = (isa)(%99, Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})::Bool
└────        goto #57 if not %109
56 ── %111 = π (%99, Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
└────        goto #58
57 ── %113 = Base.convert(Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}, %99)::Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}
└────        goto #58
58 ┄─ %115 = φ (#56 => %111, #57 => %113)::Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}
59 ┄─ %116 = φ (#54 => %99, #58 => %115)::Any
│     %117 = π (%116, Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
└────        return %117
60 ──        nothing::Nothing
│            nothing::Nothing
│            nothing::Nothing
│            nothing::Nothing
│     %123 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Any}, svec(Any, Int64), 0, :(:ccall), Vector{Any}, 1, 1))::Vector{Any}
└────        goto #240 if not true
61 ── %125 = Enzyme.Compiler.getfield(prev, 1)::Main.ThreeMassSpring.var"#q_true#35"
│     %126 = Enzyme.Compiler.nothing::Nothing
└────        goto #63 if not true
62 ──        goto #64
63 ──        $(Expr(:throw_undef_if_not, :seen, false))::Any
64 ┄─ %130 = ($(QuoteNode(Val{Main.ThreeMassSpring.var"#q_true#35"}())) ∈ ())::Any
└────        goto #66 if not %130
65 ──        goto #99
66 ──        goto #68 if not true
67 ──        goto #69
68 ──        $(Expr(:throw_undef_if_not, :seen, false))::Any
69 ┄─ %136 = Core._apply_iterate(Base.iterate, Core.tuple, (Val{Main.ThreeMassSpring.var"#q_true#35"}(),), ())::Tuple{Val{Main.ThreeMassSpring.var"#q_true#35"}, Vararg{Any}}
└────        goto #71 if not true
70 ──        goto #72
71 ──        $(Expr(:throw_undef_if_not, :seen, false))::Any
72 ┄─ %140 = Core.apply_type(Enzyme.Compiler.Merger, %136, Nothing, false, false)::Type{Enzyme.Compiler.Merger{_A, Nothing, false, false}} where _A
│     %141 = %new(%140, %126)::Enzyme.Compiler.Merger{_A, Nothing, false, false} where _A
│     %142 = (%141)(1)::Val
│     %143 = Enzyme.Compiler.forcefold::typeof(Enzyme.Compiler.forcefold)
│     %144 = (Core._compute_sparams)(forcefold(::Val{ty}, ::Val{sty}, C::Vararg{Any, N}) where {ty, sty, N} @ Enzyme.Compiler ~/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330, %143, $(QuoteNode(Val{Enzyme.Compiler.AnyState}())), %142)::Core.SimpleVector
│     %145 = (Core._svec_ref)(%144, 2)::Any
│     %146 = Enzyme.Compiler.:(==)::typeof(==)
│     %147 = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %148 = (isa)(%145, WeakRef)::Bool
└────        goto #74 if not %148
73 ── %150 = π (%145, WeakRef)
│     %151 = invoke %146(%150::WeakRef, %147::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #79
74 ── %153 = (isa)(%145, Missing)::Bool
└────        goto #76 if not %153
75 ──        goto #79
76 ──        goto #78 if not true
77 ── %157 = (%145 === %147)::Bool
└────        goto #79
78 ──        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
79 ┄─ %161 = φ (#73 => %151, #75 => $(QuoteNode(missing)), #77 => %157)::Union{Missing, Bool}
└────        goto #81 if not %161
80 ──        goto #91
81 ── %164 = (Core._svec_ref)(%144, 2)::Any
│     %165 = Enzyme.Compiler.:(==)::typeof(==)
│     %166 = (isa)(%164, WeakRef)::Bool
└────        goto #83 if not %166
82 ── %168 = π (%164, WeakRef)
│     %169 = invoke %165(%168::WeakRef, $(QuoteNode(Enzyme.Compiler.AnyState))::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #88
83 ── %171 = (isa)(%164, Missing)::Bool
└────        goto #85 if not %171
84 ──        goto #88
85 ──        goto #87 if not true
86 ── %175 = (%164 === $(QuoteNode(Enzyme.Compiler.AnyState)))::Bool
└────        goto #88
87 ──        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
88 ┄─ %179 = φ (#82 => %169, #84 => $(QuoteNode(missing)), #86 => %175)::Union{Missing, Bool}
└────        goto #90 if not %179
89 ──        goto #91
90 ── %182 = (Core._svec_ref)(%144, 2)::Any
│            Core.apply_type(Base.Val, %182)::Type{Val{_A}} where _A
└────        goto #92
91 ┄─        goto #92
92 ┄─ %186 = φ (#90 => %182, #91 => $(QuoteNode(Enzyme.Compiler.AnyState)))::Any
│     %187 = (%186 isa Enzyme.Compiler.ActivityState)::Bool
└────        goto #94 if not %187
93 ──        goto #98
94 ── %190 = (isa)(%186, Enzyme.Compiler.ActivityState)::Bool
└────        goto #96 if not %190
95 ── %192 = π (%186, Enzyme.Compiler.ActivityState)
└────        goto #97
96 ── %194 = Base.convert(Enzyme.Compiler.ActivityState, %186)::Enzyme.Compiler.ActivityState
└────        goto #97
97 ┄─ %196 = φ (#95 => %192, #96 => %194)::Enzyme.Compiler.ActivityState
98 ┄─ %197 = φ (#93 => %186, #97 => %196)::Any
│     %198 = π (%197, Enzyme.Compiler.ActivityState)
└────        goto #99
99 ┄─ %200 = φ (#65 => Enzyme.Compiler.MixedState, #98 => %198)::Enzyme.Compiler.ActivityState
└────        goto #100
100 ─        goto #101
101 ─ %203 = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %204 = (%200 === %203)::Bool
└────        goto #102
102 ─        goto #104 if not %204
103 ─        goto #239
104 ─ %208 = Base.secret_table_token::Symbol
│     %209 = Base.getfield(seen, :ht)::Vector{Any}
│     %210 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%209), :(%125), :(%208)))::Any
│     %211 = (%210 === %208)::Bool
└────        goto #106 if not %211
105 ─        goto #107
106 ─        goto #107
107 ┄ %215 = φ (#105 => %208, #106 => %210)::Any
│     %216 = (%215 === Base.secret_table_token)::Bool
│     %217 = Core.Intrinsics.not_int(%216)::Bool
└────        goto #108
108 ─        goto #109
109 ─        goto #120 if not %217
110 ─ %221 = Base.getfield(seen, :ht)::Vector{Any}
│     %222 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%221), :(%125), :(Base.secret_table_token)))::Any
│     %223 = (%222 === Base.secret_table_token)::Bool
└────        goto #112 if not %223
111 ─ %225 = Base.KeyError(%125)::Any
│            Base.throw(%225)::Union{}
└────        unreachable
112 ─        goto #113
113 ─ %229 = (%222 isa Main.ThreeMassSpring.var"#q_true#35")::Bool
└────        goto #115 if not %229
114 ─        goto #119
115 ─ %232 = (isa)(%222, Main.ThreeMassSpring.var"#q_true#35")::Bool
└────        goto #117 if not %232
116 ─ %234 = π (%222, Main.ThreeMassSpring.var"#q_true#35")
└────        goto #118
117 ─ %236 = Base.convert(Main.ThreeMassSpring.var"#q_true#35", %222)::Main.ThreeMassSpring.var"#q_true#35"
└────        goto #118
118 ┄ %238 = φ (#116 => %234, #117 => %236)::Main.ThreeMassSpring.var"#q_true#35"
119 ┄ %239 = φ (#114 => %222, #118 => %238)::Any
│     %240 = π (%239, Main.ThreeMassSpring.var"#q_true#35")
└────        goto #239
120 ─ %242 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Any}, svec(Any, Int64), 0, :(:ccall), Vector{Any}, 1, 1))::Vector{Any}
└────        goto #232 if not true
121 ─ %244 = Enzyme.Compiler.getfield(%125, 1)::Core.Box
│     %245 = Enzyme.Compiler.nothing::Nothing
└────        goto #123 if not true
122 ─        nothing::Nothing
123 ┄        goto #125 if not true
124 ─        goto #126
125 ─        $(Expr(:throw_undef_if_not, :seen, false))::Any
126 ┄ %251 = ($(QuoteNode(Val{Core.Box}())) ∈ ())::Any
└────        goto #128 if not %251
127 ─        goto #161
128 ─        goto #130 if not true
129 ─        goto #131
130 ─        $(Expr(:throw_undef_if_not, :seen, false))::Any
131 ┄ %257 = Core._apply_iterate(Base.iterate, Core.tuple, (Val{Core.Box}(),), ())::Tuple{Val{Core.Box}, Vararg{Any}}
└────        goto #133 if not true
132 ─        goto #134
133 ─        $(Expr(:throw_undef_if_not, :seen, false))::Any
134 ┄ %261 = Core.apply_type(Enzyme.Compiler.Merger, %257, Nothing, false, false)::Type{Enzyme.Compiler.Merger{_A, Nothing, false, false}} where _A
│     %262 = %new(%261, %245)::Enzyme.Compiler.Merger{_A, Nothing, false, false} where _A
│     %263 = (%262)(1)::Val
│     %264 = Enzyme.Compiler.forcefold::typeof(Enzyme.Compiler.forcefold)
│     %265 = (Core._compute_sparams)(forcefold(::Val{ty}, ::Val{sty}, C::Vararg{Any, N}) where {ty, sty, N} @ Enzyme.Compiler ~/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330, %264, $(QuoteNode(Val{Enzyme.Compiler.AnyState}())), %263)::Core.SimpleVector
│     %266 = (Core._svec_ref)(%265, 2)::Any
│     %267 = Enzyme.Compiler.:(==)::typeof(==)
│     %268 = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %269 = (isa)(%266, WeakRef)::Bool
└────        goto #136 if not %269
135 ─ %271 = π (%266, WeakRef)
│     %272 = invoke %267(%271::WeakRef, %268::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #141
136 ─ %274 = (isa)(%266, Missing)::Bool
└────        goto #138 if not %274
137 ─        goto #141
138 ─        goto #140 if not true
139 ─ %278 = (%266 === %268)::Bool
└────        goto #141
140 ─        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
141 ┄ %282 = φ (#135 => %272, #137 => $(QuoteNode(missing)), #139 => %278)::Union{Missing, Bool}
└────        goto #143 if not %282
142 ─        goto #153
143 ─ %285 = (Core._svec_ref)(%265, 2)::Any
│     %286 = Enzyme.Compiler.:(==)::typeof(==)
│     %287 = (isa)(%285, WeakRef)::Bool
└────        goto #145 if not %287
144 ─ %289 = π (%285, WeakRef)
│     %290 = invoke %286(%289::WeakRef, $(QuoteNode(Enzyme.Compiler.AnyState))::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #150
145 ─ %292 = (isa)(%285, Missing)::Bool
└────        goto #147 if not %292
146 ─        goto #150
147 ─        goto #149 if not true
148 ─ %296 = (%285 === $(QuoteNode(Enzyme.Compiler.AnyState)))::Bool
└────        goto #150
149 ─        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
150 ┄ %300 = φ (#144 => %290, #146 => $(QuoteNode(missing)), #148 => %296)::Union{Missing, Bool}
└────        goto #152 if not %300
151 ─        goto #153
152 ─ %303 = (Core._svec_ref)(%265, 2)::Any
│            Core.apply_type(Base.Val, %303)::Type{Val{_A}} where _A
└────        goto #154
153 ┄        goto #154
154 ┄ %307 = φ (#152 => %303, #153 => $(QuoteNode(Enzyme.Compiler.AnyState)))::Any
│     %308 = (%307 isa Enzyme.Compiler.ActivityState)::Bool
└────        goto #156 if not %308
155 ─        goto #160
156 ─ %311 = (isa)(%307, Enzyme.Compiler.ActivityState)::Bool
└────        goto #158 if not %311
157 ─ %313 = π (%307, Enzyme.Compiler.ActivityState)
└────        goto #159
158 ─ %315 = Base.convert(Enzyme.Compiler.ActivityState, %307)::Enzyme.Compiler.ActivityState
└────        goto #159
159 ┄ %317 = φ (#157 => %313, #158 => %315)::Enzyme.Compiler.ActivityState
160 ┄ %318 = φ (#155 => %307, #159 => %317)::Any
│     %319 = π (%318, Enzyme.Compiler.ActivityState)
└────        goto #161
161 ┄ %321 = φ (#127 => Enzyme.Compiler.MixedState, #160 => %319)::Enzyme.Compiler.ActivityState
└────        goto #162
162 ─        goto #163
163 ─ %324 = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %325 = (%321 === %324)::Bool
└────        goto #164
164 ─        goto #166 if not %325
165 ─        goto #231
166 ─ %329 = Base.secret_table_token::Symbol
│     %330 = Base.getfield(seen, :ht)::Vector{Any}
│     %331 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%330), :(%244), :(%329)))::Any
│     %332 = (%331 === %329)::Bool
└────        goto #168 if not %332
167 ─        goto #169
168 ─        goto #169
169 ┄ %336 = φ (#167 => %329, #168 => %331)::Any
│     %337 = (%336 === Base.secret_table_token)::Bool
│     %338 = Core.Intrinsics.not_int(%337)::Bool
└────        goto #170
170 ─        goto #171
171 ─        goto #182 if not %338
172 ─ %342 = Base.getfield(seen, :ht)::Vector{Any}
│     %343 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%342), :(%244), :(Base.secret_table_token)))::Any
│     %344 = (%343 === Base.secret_table_token)::Bool
└────        goto #174 if not %344
173 ─ %346 = Base.KeyError(%244)::Any
│            Base.throw(%346)::Union{}
└────        unreachable
174 ─        goto #175
175 ─ %350 = (%343 isa Core.Box)::Bool
└────        goto #177 if not %350
176 ─        goto #181
177 ─ %353 = (isa)(%343, Core.Box)::Bool
└────        goto #179 if not %353
178 ─ %355 = π (%343, Core.Box)
└────        goto #180
179 ─ %357 = Base.convert(Core.Box, %343)::Core.Box
└────        goto #180
180 ┄ %359 = φ (#178 => %355, #179 => %357)::Core.Box
181 ┄ %360 = φ (#176 => %343, #180 => %359)::Any
│     %361 = π (%360, Core.Box)
└────        goto #231
182 ─ %363 = $(Expr(:foreigncall, :(:jl_new_struct_uninit), Any, svec(Any), 0, :(:ccall), Core.Box))::Any
│            invoke Base.setindex!(seen::IdDict{Any, Any}, %363::Any, %244::Any)::Any
│     %365 = Base.repr::typeof(repr)
│     %366 = (isa)(%363, Base.BinaryPlatforms.Platform)::Bool
└────        goto #184 if not %366
183 ─ %368 = π (%363, Base.BinaryPlatforms.Platform)
│     %369 = invoke Base.BinaryPlatforms.:(var"#repr#12")(Base.BinaryPlatforms.nothing::Nothing, %365::typeof(repr), %368::Base.BinaryPlatforms.Platform)::String
└────        goto #185
184 ─ %371 = Base.repr(%363)::String
└────        goto #185
185 ┄ %373 = φ (#183 => %369, #184 => %371)::String
│            invoke Base.println("y = "::String, %373::String)::Any
└────        goto #224 if not true
186 ─ %376 = Enzyme.Compiler.isdefined(%244, 1)::Bool
└────        goto #223 if not %376
187 ─ %378 = Enzyme.Compiler.getfield(%244, 1)::Any
│     %379 = (%378 isa Core.Type)::Bool
└────        goto #189 if not %379
188 ─ %381 = π (%378, Type)
│     %382 = Core.apply_type(Core.Type, %381)::Type{Type{T}} where T
└────        goto #190
189 ─ %384 = Core.typeof(%378)::DataType
└────        goto #190
190 ┄ %386 = φ (#188 => %382, #189 => %384)::DataType
│     %387 = Core.tuple(%386, seen, %378, $(QuoteNode(Val{false}())))::Tuple{DataType, IdDict{Any, Any}, Any, Val{false}}
│     %388 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Any}, svec(Any, Int64), 0, :(:ccall), Vector{Any}, 4, 4))::Vector{Any}
└────        goto #199 if not true
191 ┄ %390 = φ (#190 => 1, #198 => %409)::Int64
│     %391 = φ (#190 => 1, #198 => %410)::Int64
│     %392 = φ (#190 => 1, #198 => %403)::Int64
│     %393 = Base.getfield(%387, %390, true)::Any
│     %394 = (%393 isa Core.Type)::Bool
└────        goto #193 if not %394
192 ─ %396 = π (%393, Type)
│     %397 = Core.apply_type(Core.Type, %396)::Type{Type{T}} where T
└────        goto #194
193 ─ %399 = Core.typeof(%393)::DataType
└────        goto #194
194 ┄ %401 = φ (#192 => %397, #193 => %399)::DataType
│            Base.arrayset(false, %388, %401, %392)::Vector{Any}
│     %403 = Base.add_int(%392, 1)::Int64
│     %404 = (%391 === 4)::Bool
└────        goto #196 if not %404
195 ─        goto #197
196 ─ %407 = Base.add_int(%391, 1)::Int64
└────        goto #197
197 ┄ %409 = φ (#196 => %407)::Int64
│     %410 = φ (#196 => %407)::Int64
│     %411 = φ (#195 => true, #196 => false)::Bool
│     %412 = Base.not_int(%411)::Bool
└────        goto #199 if not %412
198 ─        goto #191
199 ┄ %415 = Core._apply_iterate(Base.iterate, Core.apply_type, (Tuple,), %388)::Type
└────        goto #200
200 ─ %417 = InteractiveUtils.code_typed::typeof(code_typed)
│     %418 = EnzymeCore.make_zero::typeof(EnzymeCore.make_zero)
│     %419 = invoke Base.:(var"#code_typed#25")($(QuoteNode(Base.Pairs{Symbol, Union{}, Tuple{}, @NamedTuple{}}()))::Base.Pairs{Symbol, Union{}, Tuple{}, @NamedTuple{}}, %417::typeof(code_typed), %418::Any, %415::Any)::Vector{Any}
│     %420 = Base.arraylen(%419)::Int64
│     %421 = (%420 === 1)::Bool
└────        goto #202 if not %421
201 ─ %423 = Base.arrayref(true, %419, 1)::Any
└────        goto #203
202 ─        nothing::Nothing
203 ┄ %426 = φ (#201 => %423, #202 => %419)::Any
│     %427 = Base.repr::typeof(repr)
│     %428 = (isa)(%426, Base.BinaryPlatforms.Platform)::Bool
└────        goto #205 if not %428
204 ─ %430 = π (%426, Base.BinaryPlatforms.Platform)
│     %431 = invoke Base.BinaryPlatforms.:(var"#repr#12")(Base.BinaryPlatforms.nothing::Nothing, %427::typeof(repr), %430::Base.BinaryPlatforms.Platform)::String
└────        goto #206
205 ─ %433 = Base.repr(%426)::String
└────        goto #206
206 ┄ %435 = φ (#204 => %431, #205 => %433)::String
│            invoke Base.println("#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = "::String, %435::String)::Any
│     %437 = (%378 isa Core.Type)::Bool
└────        goto #208 if not %437
207 ─ %439 = π (%378, Type)
│     %440 = Core.apply_type(Core.Type, %439)::Type{Type{T}} where T
└────        goto #209
208 ─ %442 = Core.typeof(%378)::DataType
└────        goto #209
209 ┄ %444 = φ (#207 => %440, #208 => %442)::DataType
│     %445 = Core.tuple(%444, seen, %378, $(QuoteNode(Val{false}())))::Tuple{DataType, IdDict{Any, Any}, Any, Val{false}}
│     %446 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Any}, svec(Any, Int64), 0, :(:ccall), Vector{Any}, 4, 4))::Vector{Any}
└────        goto #218 if not true
210 ┄ %448 = φ (#209 => 1, #217 => %467)::Int64
│     %449 = φ (#209 => 1, #217 => %468)::Int64
│     %450 = φ (#209 => 1, #217 => %461)::Int64
│     %451 = Base.getfield(%445, %448, true)::Any
│     %452 = (%451 isa Core.Type)::Bool
└────        goto #212 if not %452
211 ─ %454 = π (%451, Type)
│     %455 = Core.apply_type(Core.Type, %454)::Type{Type{T}} where T
└────        goto #213
212 ─ %457 = Core.typeof(%451)::DataType
└────        goto #213
213 ┄ %459 = φ (#211 => %455, #212 => %457)::DataType
│            Base.arrayset(false, %446, %459, %450)::Vector{Any}
│     %461 = Base.add_int(%450, 1)::Int64
│     %462 = (%449 === 4)::Bool
└────        goto #215 if not %462
214 ─        goto #216
215 ─ %465 = Base.add_int(%449, 1)::Int64
└────        goto #216
216 ┄ %467 = φ (#215 => %465)::Int64
│     %468 = φ (#215 => %465)::Int64
│     %469 = φ (#214 => true, #215 => false)::Bool
│     %470 = Base.not_int(%469)::Bool
└────        goto #218 if not %470
217 ─        goto #210
218 ┄ %473 = Core._apply_iterate(Base.iterate, Core.apply_type, (Tuple,), %446)::Type
└────        goto #219
219 ─ %475 = InteractiveUtils.code_llvm::typeof(InteractiveUtils.code_llvm)
│     %476 = EnzymeCore.make_zero::typeof(EnzymeCore.make_zero)
│            invoke InteractiveUtils.:(var"#code_llvm#39")(false::Bool, false::Bool, true::Bool, :default::Symbol, %475::typeof(InteractiveUtils.code_llvm), %476::Any, %473::Any)::Nothing
│     %478 = invoke Base.:(var"#sprint#501")(nothing::Nothing, 0::Int64, sprint::typeof(sprint), show::Function, nothing::Nothing)::String
│            invoke Base.println("#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = "::String, %478::String)::Any
│     %480 = (%378 isa Core.Type)::Bool
└────        goto #221 if not %480
220 ─ %482 = π (%378, Type)
│     %483 = Core.apply_type(Core.Type, %482)::Type{Type{T}} where T
└────        goto #222
221 ─ %485 = Core.typeof(%378)::DataType
└────        goto #222
222 ┄ %487 = φ (#220 => %483, #221 => %485)::DataType
│     %488 = EnzymeCore.make_zero(%487, seen, %378, $(QuoteNode(Val{false}())))::Any
└────        $(Expr(:foreigncall, :(:jl_set_nth_field), Nothing, svec(Any, UInt64, Any), 0, :(:ccall), :(%363), 0x0000000000000000, :(%488), 0x0000000000000000))::Nothing
223 ┄        nothing::Nothing
224 ┄ %491 = Core.tuple("end", %363)::Tuple{String, Any}
│     %492 = Base.repr(%491)::String
│            invoke Base.println("(\"end\", y) = "::String, %492::String)::Any
│     %494 = (%363 isa Core.Box)::Bool
└────        goto #226 if not %494
225 ─        goto #230
226 ─ %497 = (isa)(%363, Core.Box)::Bool
└────        goto #228 if not %497
227 ─ %499 = π (%363, Core.Box)
└────        goto #229
228 ─ %501 = Base.convert(Core.Box, %363)::Core.Box
└────        goto #229
229 ┄ %503 = φ (#227 => %499, #228 => %501)::Core.Box
230 ┄ %504 = φ (#225 => %363, #229 => %503)::Any
│     %505 = π (%504, Core.Box)
└────        goto #231
231 ┄ %507 = φ (#165 => %244, #181 => %361, #230 => %505)::Core.Box
└────        Base.arrayset(true, %242, %507, 1)::Vector{Any}
232 ┄ %509 = $(Expr(:foreigncall, :(:jl_array_ptr), Ptr{Any}, svec(Any), 0, :(:ccall), :(%242)))::Ptr{Any}
│     %510 = $(Expr(:foreigncall, :(:jl_new_structv), Any, svec(Any, Ptr{Any}, UInt32), 0, :(:ccall), Main.ThreeMassSpring.var"#q_true#35", :(%509), 0x00000001, 0x00000001, :(%242)))::Any
│            invoke Base.setindex!(seen::IdDict{Any, Any}, %510::Any, %125::Any)::Any
│     %512 = (%510 isa Main.ThreeMassSpring.var"#q_true#35")::Bool
└────        goto #234 if not %512
233 ─        goto #238
234 ─ %515 = (isa)(%510, Main.ThreeMassSpring.var"#q_true#35")::Bool
└────        goto #236 if not %515
235 ─ %517 = π (%510, Main.ThreeMassSpring.var"#q_true#35")
└────        goto #237
236 ─ %519 = Base.convert(Main.ThreeMassSpring.var"#q_true#35", %510)::Main.ThreeMassSpring.var"#q_true#35"
└────        goto #237
237 ┄ %521 = φ (#235 => %517, #236 => %519)::Main.ThreeMassSpring.var"#q_true#35"
238 ┄ %522 = φ (#233 => %510, #237 => %521)::Any
│     %523 = π (%522, Main.ThreeMassSpring.var"#q_true#35")
└────        goto #239
239 ┄ %525 = φ (#103 => %125, #119 => %240, #238 => %523)::Main.ThreeMassSpring.var"#q_true#35"
│            Base.arrayset(true, %123, %525, 1)::Vector{Any}
└────        nothing::Nothing
240 ┄ %528 = $(Expr(:foreigncall, :(:jl_array_ptr), Ptr{Any}, svec(Any), 0, :(:ccall), :(%123)))::Ptr{Any}
│     %529 = $(Expr(:foreigncall, :(:jl_new_structv), Any, svec(Any, Ptr{Any}, UInt32), 0, :(:ccall), Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}, :(%528), 0x00000001, 0x00000001, :(%123)))::Any
│            invoke Base.setindex!(seen::IdDict{Any, Any}, %529::Any, prev::Any)::Any
│     %531 = (%529 isa Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})::Bool
└────        goto #242 if not %531
241 ─        goto #246
242 ─ %534 = (isa)(%529, Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})::Bool
└────        goto #244 if not %534
243 ─ %536 = π (%529, Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
└────        goto #245
244 ─ %538 = Base.convert(Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}, %529)::Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}
└────        goto #245
245 ┄ %540 = φ (#243 => %536, #244 => %538)::Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}
246 ┄ %541 = φ (#241 => %529, #245 => %540)::Any
│     %542 = π (%541, Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
└────        return %542
) => Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1218 within `make_zero`
define [1 x [1 x {}*]] @julia_make_zero_5977({}* noundef nonnull align 8 dereferenceable(24) %0, [1 x [1 x {}*]]* nocapture noundef nonnull readonly align 8 dereferenceable(8) %1) #0 {
top:
  %2 = alloca [5 x {}*], align 8
  %gcframe743 = alloca [9 x {}*], align 16
  %gcframe743.sub = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe743, i64 0, i64 0
  %.sub = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 0
  %3 = bitcast [9 x {}*]* %gcframe743 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %3, i8 0, i64 72, i1 true)
  %4 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    %5 = bitcast [9 x {}*]* %gcframe743 to i64*
    store i64 28, i64* %5, align 16
    %6 = load {}**, {}*** %4, align 8
    %7 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe743, i64 0, i64 1
    %8 = bitcast {}** %7 to {}***
    store {}** %6, {}*** %8, align 8
    %9 = bitcast {}*** %4 to {}***
    store {}** %gcframe743.sub, {}*** %9, align 8
    store {}* inttoptr (i64 11284993512 to {}*), {}** %.sub, align 8
    %10 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 1
    store {}* inttoptr (i64 4758573520 to {}*), {}** %10, align 8
    %11 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4688171680 to {}*), {}** nonnull %.sub, i32 2)
    %12 = bitcast {}* %11 to i64*
    %13 = getelementptr inbounds i64, i64* %12, i64 -1
    %14 = load atomic i64, i64* %13 unordered, align 8
    %15 = and i64 %14, -16
    %16 = inttoptr i64 %15 to {}*
    %exactly_isa = icmp eq {}* %16, inttoptr (i64 192 to {}*)
    br i1 %exactly_isa, label %pass, label %fail

L11:                                              ; preds = %pass
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:519
    store {}* inttoptr (i64 4687803232 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4748609600 to {}*), {}** %10, align 8
    %17 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
    store {}* inttoptr (i64 11284993520 to {}*), {}** %17, align 8
    %18 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 3
    store {}* inttoptr (i64 4758573520 to {}*), {}** %18, align 8
    %19 = call nonnull {}* @jl_f__apply_iterate({}* null, {}** nonnull %.sub, i32 4)
    %20 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe743, i64 0, i64 2
    store {}* %19, {}** %20, align 16
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:521
    store {}* inttoptr (i64 5983455680 to {}*), {}** %.sub, align 8
    store {}* %19, {}** %10, align 8
    store {}* inttoptr (i64 4759732912 to {}*), {}** %17, align 8
    store {}* inttoptr (i64 4827820512 to {}*), {}** %18, align 8
    %21 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 4
    store {}* inttoptr (i64 4827820512 to {}*), {}** %21, align 8
    %22 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 5)
    store {}* %22, {}** %20, align 16
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:287 within `Merger`
     store {}* inttoptr (i64 4299603976 to {}*), {}** %.sub, align 8
     %23 = call nonnull {}* @ijl_new_structv({}* nonnull %22, {}** nonnull %.sub, i32 1)
     store {}* %23, {}** %20, align 16
; ││└
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ ntuple.jl:48 within `ntuple`
     store {}* inttoptr (i64 4299751776 to {}*), {}** %.sub, align 8
     %24 = call nonnull {}* @ijl_apply_generic({}* nonnull %23, {}** nonnull %.sub, i32 1)
     store {}* %24, {}** %20, align 16
; ││└
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330 within `forcefold`
     store {}* inttoptr (i64 5983451472 to {}*), {}** %.sub, align 8
     store {}* inttoptr (i64 5983450976 to {}*), {}** %10, align 8
     store {}* inttoptr (i64 5983453888 to {}*), {}** %17, align 8
     store {}* %24, {}** %18, align 8
     %25 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4734466288 to {}*), {}** nonnull %.sub, i32 4)
     %26 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe743, i64 0, i64 3
     store {}* %25, {}** %26, align 8
; │││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %25, {}** %.sub, align 8
     store {}* inttoptr (i64 4299752064 to {}*), {}** %10, align 8
     %27 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %28 = bitcast {}* %27 to i64*
     %29 = getelementptr inbounds i64, i64* %28, i64 -1
     %30 = load atomic i64, i64* %29 unordered, align 8
     %31 = and i64 %30, -16
     switch i64 %31, label %post_is362 [
    i64 4759728480, label %L25
    i64 4741095904, label %post_box_union319
    i64 5974287984, label %is361
  ]

L25:                                              ; preds = %L11
     store {}* %27, {}** %20, align 16
     %32 = call i8 @"j_==_5985"({}* nonnull %27, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass324

L39:                                              ; preds = %pass324
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %25, {}** %.sub, align 8
     store {}* inttoptr (i64 4299752064 to {}*), {}** %10, align 8
     %33 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %34 = bitcast {}* %33 to i64*
     %35 = getelementptr inbounds i64, i64* %34, i64 -1
     %36 = load atomic i64, i64* %35 unordered, align 8
     %37 = and i64 %36, -16
     switch i64 %37, label %post_is353 [
    i64 4759728480, label %L43
    i64 4741095904, label %post_box_union341
    i64 5974287984, label %is352
  ]

L43:                                              ; preds = %L39
     store {}* %33, {}** %20, align 16
     %38 = call i8 @"j_==_5985"({}* nonnull %33, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass346

L57:                                              ; preds = %pass346
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:335 within `forcefold`
     store {}* %25, {}** %.sub, align 8
     store {}* inttoptr (i64 4299752064 to {}*), {}** %10, align 8
     %39 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     store {}* %39, {}** %20, align 16
; │││┌ @ essentials.jl:869 within `Val`
      store {}* inttoptr (i64 4688645968 to {}*), {}** %.sub, align 8
      store {}* %39, {}** %10, align 8
      %40 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L61

L61:                                              ; preds = %pass346, %pass324, %L57
     %value_phi326 = phi {}* [ %39, %L57 ], [ inttoptr (i64 6230679232 to {}*), %pass346 ], [ inttoptr (i64 6230679232 to {}*), %pass324 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:525
    %41 = bitcast {}* %value_phi326 to i64*
    %42 = getelementptr inbounds i64, i64* %41, i64 -1
    %43 = load atomic i64, i64* %42 unordered, align 8
    %44 = and i64 %43, -16
    %45 = inttoptr i64 %44 to {}*
    %exactly_isa328.not = icmp eq {}* %45, inttoptr (i64 5974287984 to {}*)
    br i1 %exactly_isa328.not, label %L72, label %L72.thread

L72.thread:                                       ; preds = %L61
    store {}* %value_phi326, {}** %20, align 16
    store {}* inttoptr (i64 5974287984 to {}*), {}** %.sub, align 8
    store {}* %value_phi326, {}** %10, align 8
    %46 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
    br label %L78

L72:                                              ; preds = %L61
    %.not626 = icmp eq {}* %value_phi326, null
    br i1 %.not626, label %L82, label %L78

L78:                                              ; preds = %L72, %L72.thread
    %unbox376.in.in = phi {}* [ %46, %L72.thread ], [ %value_phi326, %L72 ]
    %unbox376.in = bitcast {}* %unbox376.in.in to i32*
    %unbox376 = load i32, i32* %unbox376.in, align 4
; │└
; │ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:556 within `guaranteed_const_nongen`
; │┌ @ Base.jl:159 within `==`
    %.not = icmp eq i32 %unbox376, 0
; └└
  br i1 %.not, label %L82, label %L85

common.ret:                                       ; preds = %L541, %L116, %L82
  %unbox.unpack.unpack.pn = phi {}* [ %unbox.unpack.unpack, %L82 ], [ %unbox16.unpack.unpack, %L116 ], [ %unbox37.unpack.unpack, %L541 ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  %unbox.unpack563.pn = insertvalue [1 x {}*] zeroinitializer, {}* %unbox.unpack.unpack.pn, 0
  %common.ret.op = insertvalue [1 x [1 x {}*]] zeroinitializer, [1 x {}*] %unbox.unpack563.pn, 0
  %47 = load {}*, {}** %7, align 8
  %48 = bitcast {}*** %4 to {}**
  store {}* %47, {}** %48, align 8
  ret [1 x [1 x {}*]] %common.ret.op

L82:                                              ; preds = %L78, %L72
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220 within `make_zero`
  %49 = getelementptr inbounds [1 x [1 x {}*]], [1 x [1 x {}*]]* %1, i64 0, i64 0, i64 0
  %unbox.unpack.unpack = load {}*, {}** %49, align 8
  br label %common.ret

L85:                                              ; preds = %pass, %L78
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1222 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %50 = bitcast {}* %0 to {}**
      %getfield = load atomic {}*, {}** %50 unordered, align 8
      %51 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe743, i64 0, i64 3
      store {}* %getfield, {}** %51, align 8
; │││└
     %ptls_field744 = getelementptr inbounds {}**, {}*** %4, i64 2
     %52 = bitcast {}*** %ptls_field744 to i8**
     %ptls_load745746 = load i8*, i8** %52, align 8
     %box = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load745746, i32 1136, i32 16) #13
     %53 = bitcast {}* %box to i64*
     %54 = getelementptr inbounds i64, i64* %53, i64 -1
     store atomic i64 11381562640, i64* %54 unordered, align 8
     %memcpy_refined_src = getelementptr inbounds [1 x [1 x {}*]], [1 x [1 x {}*]]* %1, i64 0, i64 0, i64 0
     %memcpy_refined_dst = bitcast {}* %box to {}**
     %55 = load {}*, {}** %memcpy_refined_src, align 8
     store {}* %55, {}** %memcpy_refined_dst, align 8
     %56 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe743, i64 0, i64 2
     store {}* %box, {}** %56, align 16
     %57 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %box, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not565 = icmp eq {}* %57, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not565, label %L119, label %L98

L98:                                              ; preds = %L85
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1223 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield4 = load atomic {}*, {}** %50 unordered, align 8
    store {}* %getfield4, {}** %51, align 8
; │└
   %ptls_load696747748 = load i8*, i8** %52, align 8
   %box6 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load696747748, i32 1136, i32 16) #13
   %58 = bitcast {}* %box6 to i64*
   %59 = getelementptr inbounds i64, i64* %58, i64 -1
   store atomic i64 11381562640, i64* %59 unordered, align 8
   %memcpy_refined_dst8 = bitcast {}* %box6 to {}**
   store {}* %55, {}** %memcpy_refined_dst8, align 8
   store {}* %box6, {}** %56, align 16
   %60 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield4, {}* nonnull %box6, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not567 = icmp eq {}* %60, inttoptr (i64 4301375048 to {}*)
   br i1 %.not567, label %L102, label %L106

L102:                                             ; preds = %L98
   %ptls_load699751752 = load i8*, i8** %52, align 8
   %box10 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load699751752, i32 1136, i32 16) #13
   %61 = bitcast {}* %box10 to i64*
   %62 = getelementptr inbounds i64, i64* %61, i64 -1
   store atomic i64 11381562640, i64* %62 unordered, align 8
   %memcpy_refined_dst12 = bitcast {}* %box10 to {}**
   store {}* %55, {}** %memcpy_refined_dst12, align 8
   store {}* %box10, {}** %56, align 16
   store {}* %box10, {}** %.sub, align 8
   %63 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %63)
   unreachable

L106:                                             ; preds = %L98
; └
  %64 = bitcast {}* %60 to i64*
  %65 = getelementptr inbounds i64, i64* %64, i64 -1
  %66 = load atomic i64, i64* %65 unordered, align 8
  %67 = and i64 %66, -16
  %68 = inttoptr i64 %67 to {}*
  %exactly_isa14.not = icmp eq {}* %68, inttoptr (i64 11381562640 to {}*)
  br i1 %exactly_isa14.not, label %L106.L116_crit_edge, label %L115

L106.L116_crit_edge:                              ; preds = %L106
  %.phi.trans.insert = bitcast {}* %60 to {}**
  %unbox16.unpack.unpack.pre = load {}*, {}** %.phi.trans.insert, align 8
  br label %L116

L115:                                             ; preds = %L106
  store {}* %60, {}** %56, align 16
  store {}* inttoptr (i64 11381562640 to {}*), {}** %.sub, align 8
  store {}* %60, {}** %10, align 8
  %69 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %70 = bitcast {}* %69 to {}**
  %unbox392.unpack.unpack = load {}*, {}** %70, align 8
  store {}* %unbox392.unpack.unpack, {}** %56, align 16
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1218 within `make_zero`
  %ptls_load702749750 = load i8*, i8** %52, align 8
  %box379 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load702749750, i32 1136, i32 16) #13
  %71 = bitcast {}* %box379 to i64*
  %72 = getelementptr inbounds i64, i64* %71, i64 -1
  store atomic i64 11381562640, i64* %72 unordered, align 8
  %73 = bitcast {}* %box379 to {}**
  store {}* %unbox392.unpack.unpack, {}** %73, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1223 within `make_zero`
  br label %L116

L116:                                             ; preds = %L115, %L106.L116_crit_edge
  %.pre-phi780 = phi {}** [ %.phi.trans.insert, %L106.L116_crit_edge ], [ %73, %L115 ]
  %unbox16.unpack.unpack = phi {}* [ %unbox392.unpack.unpack, %L115 ], [ %unbox16.unpack.unpack.pre, %L106.L116_crit_edge ]
  %value_phi15 = phi {}* [ %box379, %L115 ], [ %60, %L106.L116_crit_edge ]
  br label %common.ret

L119:                                             ; preds = %L85
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1256 within `make_zero`
; ┌ @ boot.jl:475 within `Array`
   %74 = call nonnull {}* inttoptr (i64 4304360888 to {}* ({}*, i64)*)({}* inttoptr (i64 4759731152 to {}*), i64 1)
   %75 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe743, i64 0, i64 6
   store {}* %74, {}** %75, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    store {}* inttoptr (i64 11284993584 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4758573520 to {}*), {}** %10, align 8
    %76 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4688171680 to {}*), {}** nonnull %.sub, i32 2)
    %77 = bitcast {}* %76 to i64*
    %78 = getelementptr inbounds i64, i64* %77, i64 -1
    %79 = load atomic i64, i64* %78 unordered, align 8
    %80 = and i64 %79, -16
    %81 = inttoptr i64 %80 to {}*
    %exactly_isa21 = icmp eq {}* %81, inttoptr (i64 192 to {}*)
    br i1 %exactly_isa21, label %pass23, label %fail22

L136:                                             ; preds = %pass23
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:519
    store {}* inttoptr (i64 4687803232 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4748609600 to {}*), {}** %10, align 8
    %82 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
    store {}* inttoptr (i64 11284993592 to {}*), {}** %82, align 8
    %83 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 3
    store {}* inttoptr (i64 4758573520 to {}*), {}** %83, align 8
    %84 = call nonnull {}* @jl_f__apply_iterate({}* null, {}** nonnull %.sub, i32 4)
    store {}* %84, {}** %56, align 16
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:521
    store {}* inttoptr (i64 5983455680 to {}*), {}** %.sub, align 8
    store {}* %84, {}** %10, align 8
    store {}* inttoptr (i64 4759732912 to {}*), {}** %82, align 8
    store {}* inttoptr (i64 4827820512 to {}*), {}** %83, align 8
    %85 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 4
    store {}* inttoptr (i64 4827820512 to {}*), {}** %85, align 8
    %86 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 5)
    store {}* %86, {}** %56, align 16
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:287 within `Merger`
     store {}* inttoptr (i64 4299603976 to {}*), {}** %.sub, align 8
     %87 = call nonnull {}* @ijl_new_structv({}* nonnull %86, {}** nonnull %.sub, i32 1)
     store {}* %87, {}** %56, align 16
; ││└
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ ntuple.jl:48 within `ntuple`
     store {}* inttoptr (i64 4299751776 to {}*), {}** %.sub, align 8
     %88 = call nonnull {}* @ijl_apply_generic({}* nonnull %87, {}** nonnull %.sub, i32 1)
     store {}* %88, {}** %56, align 16
; ││└
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330 within `forcefold`
     store {}* inttoptr (i64 5983451472 to {}*), {}** %.sub, align 8
     store {}* inttoptr (i64 5983450976 to {}*), {}** %10, align 8
     store {}* inttoptr (i64 5983453888 to {}*), {}** %82, align 8
     store {}* %88, {}** %83, align 8
     %89 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4734466288 to {}*), {}** nonnull %.sub, i32 4)
     store {}* %89, {}** %51, align 8
; │││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %89, {}** %.sub, align 8
     store {}* inttoptr (i64 4299752064 to {}*), {}** %10, align 8
     %90 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %91 = bitcast {}* %90 to i64*
     %92 = getelementptr inbounds i64, i64* %91, i64 -1
     %93 = load atomic i64, i64* %92 unordered, align 8
     %94 = and i64 %93, -16
     switch i64 %94, label %post_is301 [
    i64 4759728480, label %L150
    i64 4741095904, label %post_box_union258
    i64 5974287984, label %is300
  ]

L150:                                             ; preds = %L136
     store {}* %90, {}** %56, align 16
     %95 = call i8 @"j_==_5985"({}* nonnull %90, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass263

L164:                                             ; preds = %pass263
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %89, {}** %.sub, align 8
     store {}* inttoptr (i64 4299752064 to {}*), {}** %10, align 8
     %96 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %97 = bitcast {}* %96 to i64*
     %98 = getelementptr inbounds i64, i64* %97, i64 -1
     %99 = load atomic i64, i64* %98 unordered, align 8
     %100 = and i64 %99, -16
     switch i64 %100, label %post_is292 [
    i64 4759728480, label %L168
    i64 4741095904, label %post_box_union280
    i64 5974287984, label %is291
  ]

L168:                                             ; preds = %L164
     store {}* %96, {}** %56, align 16
     %101 = call i8 @"j_==_5985"({}* nonnull %96, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass285

L182:                                             ; preds = %pass285
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:335 within `forcefold`
     store {}* %89, {}** %.sub, align 8
     store {}* inttoptr (i64 4299752064 to {}*), {}** %10, align 8
     %102 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     store {}* %102, {}** %56, align 16
; │││┌ @ essentials.jl:869 within `Val`
      store {}* inttoptr (i64 4688645968 to {}*), {}** %.sub, align 8
      store {}* %102, {}** %10, align 8
      %103 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L186

L186:                                             ; preds = %pass285, %pass263, %L182
     %value_phi265 = phi {}* [ %102, %L182 ], [ inttoptr (i64 6230679232 to {}*), %pass285 ], [ inttoptr (i64 6230679232 to {}*), %pass263 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:525
    %104 = bitcast {}* %value_phi265 to i64*
    %105 = getelementptr inbounds i64, i64* %104, i64 -1
    %106 = load atomic i64, i64* %105 unordered, align 8
    %107 = and i64 %106, -16
    %108 = inttoptr i64 %107 to {}*
    %exactly_isa267.not = icmp eq {}* %108, inttoptr (i64 5974287984 to {}*)
    br i1 %exactly_isa267.not, label %L197, label %L197.thread

L197.thread:                                      ; preds = %L186
    store {}* %value_phi265, {}** %56, align 16
    store {}* inttoptr (i64 5974287984 to {}*), {}** %.sub, align 8
    store {}* %value_phi265, {}** %10, align 8
    %109 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
    br label %L203

L197:                                             ; preds = %L186
    %.not619 = icmp eq {}* %value_phi265, null
    br i1 %.not619, label %L207, label %L203

L203:                                             ; preds = %L197, %L197.thread
    %unbox399.in.in = phi {}* [ %109, %L197.thread ], [ %value_phi265, %L197 ]
    %unbox399.in = bitcast {}* %unbox399.in.in to i32*
    %unbox399 = load i32, i32* %unbox399.in, align 4
; │└
; │ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:556 within `guaranteed_const_nongen`
; │┌ @ Base.jl:159 within `==`
    %.not576 = icmp eq i32 %unbox399, 0
; └└
  br i1 %.not576, label %L207, label %L208

L207:                                             ; preds = %L203, %L197
  %unbox406.unpack = load {}*, {}** %memcpy_refined_src, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
  br label %L525

L208:                                             ; preds = %pass23, %L203
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1222
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %getfield42 = load atomic {}*, {}** %50 unordered, align 8
      store {}* %getfield42, {}** %51, align 8
; │││└
     %ptls_load705753754 = load i8*, i8** %52, align 8
     %box44 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load705753754, i32 1136, i32 16) #13
     %110 = bitcast {}* %box44 to i64*
     %111 = getelementptr inbounds i64, i64* %110, i64 -1
     store atomic i64 11381649040, i64* %111 unordered, align 8
     %memcpy_refined_dst46 = bitcast {}* %box44 to {}**
     store {}* %55, {}** %memcpy_refined_dst46, align 8
     store {}* %box44, {}** %56, align 16
     %112 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield42, {}* nonnull %box44, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not588 = icmp eq {}* %112, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not588, label %L242, label %L221

L221:                                             ; preds = %L208
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1223
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield49 = load atomic {}*, {}** %50 unordered, align 8
    store {}* %getfield49, {}** %51, align 8
; │└
   %ptls_load708755756 = load i8*, i8** %52, align 8
   %box51 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load708755756, i32 1136, i32 16) #13
   %113 = bitcast {}* %box51 to i64*
   %114 = getelementptr inbounds i64, i64* %113, i64 -1
   store atomic i64 11381649040, i64* %114 unordered, align 8
   %memcpy_refined_dst53 = bitcast {}* %box51 to {}**
   store {}* %55, {}** %memcpy_refined_dst53, align 8
   store {}* %box51, {}** %56, align 16
   %115 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield49, {}* nonnull %box51, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not590 = icmp eq {}* %115, inttoptr (i64 4301375048 to {}*)
   br i1 %.not590, label %L225, label %L229

L225:                                             ; preds = %L221
   %ptls_load711765766 = load i8*, i8** %52, align 8
   %box55 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load711765766, i32 1136, i32 16) #13
   %116 = bitcast {}* %box55 to i64*
   %117 = getelementptr inbounds i64, i64* %116, i64 -1
   store atomic i64 11381649040, i64* %117 unordered, align 8
   %memcpy_refined_dst57 = bitcast {}* %box55 to {}**
   store {}* %55, {}** %memcpy_refined_dst57, align 8
   store {}* %box55, {}** %56, align 16
   store {}* %box55, {}** %.sub, align 8
   %118 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %118)
   unreachable

L229:                                             ; preds = %L221
; └
  %119 = bitcast {}* %115 to i64*
  %120 = getelementptr inbounds i64, i64* %119, i64 -1
  %121 = load atomic i64, i64* %120 unordered, align 8
  %122 = and i64 %121, -16
  %123 = inttoptr i64 %122 to {}*
  %exactly_isa61.not = icmp eq {}* %123, inttoptr (i64 11381649040 to {}*)
  br i1 %exactly_isa61.not, label %L229.guard_pass411_crit_edge, label %L238

L229.guard_pass411_crit_edge:                     ; preds = %L229
  %.phi.trans.insert772 = bitcast {}* %115 to {}**
  %unbox413.unpack.pre = load {}*, {}** %.phi.trans.insert772, align 8
  br label %guard_pass411

L238:                                             ; preds = %L229
  store {}* %115, {}** %56, align 16
  store {}* inttoptr (i64 11381649040 to {}*), {}** %.sub, align 8
  store {}* %115, {}** %10, align 8
  %124 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %125 = bitcast {}* %124 to {}**
  %unbox452.unpack = load {}*, {}** %125, align 8
  store {}* %unbox452.unpack, {}** %56, align 16
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1218 within `make_zero`
  %ptls_load714757758 = load i8*, i8** %52, align 8
  %box439 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load714757758, i32 1136, i32 16) #13
  %126 = bitcast {}* %box439 to i64*
  %127 = getelementptr inbounds i64, i64* %126, i64 -1
  store atomic i64 11381649040, i64* %127 unordered, align 8
  %128 = bitcast {}* %box439 to {}**
  store {}* %unbox452.unpack, {}** %128, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1223
  br label %guard_pass411

L242:                                             ; preds = %L208
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1256
; ┌ @ boot.jl:475 within `Array`
   %129 = call nonnull {}* inttoptr (i64 4304360888 to {}* ({}*, i64)*)({}* inttoptr (i64 4759731152 to {}*), i64 1)
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1259
  %getfield67 = load atomic {}*, {}** %memcpy_refined_src unordered, align 8
  %130 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe743, i64 0, i64 5
  store {}* %129, {}** %130, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    store {}* inttoptr (i64 11284993664 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4758573520 to {}*), {}** %10, align 8
    %131 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4688171680 to {}*), {}** nonnull %.sub, i32 2)
    %132 = bitcast {}* %131 to i64*
    %133 = getelementptr inbounds i64, i64* %132, i64 -1
    %134 = load atomic i64, i64* %133 unordered, align 8
    %135 = and i64 %134, -16
    %136 = inttoptr i64 %135 to {}*
    %exactly_isa69 = icmp eq {}* %136, inttoptr (i64 192 to {}*)
    br i1 %exactly_isa69, label %pass71, label %fail70

L257:                                             ; preds = %pass71
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:519
    store {}* inttoptr (i64 4687803232 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4748609600 to {}*), {}** %10, align 8
    %137 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
    store {}* inttoptr (i64 11284993672 to {}*), {}** %137, align 8
    %138 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 3
    store {}* inttoptr (i64 4758573520 to {}*), {}** %138, align 8
    %139 = call nonnull {}* @jl_f__apply_iterate({}* null, {}** nonnull %.sub, i32 4)
    store {}* %139, {}** %56, align 16
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:521
    store {}* inttoptr (i64 5983455680 to {}*), {}** %.sub, align 8
    store {}* %139, {}** %10, align 8
    store {}* inttoptr (i64 4759732912 to {}*), {}** %137, align 8
    store {}* inttoptr (i64 4827820512 to {}*), {}** %138, align 8
    %140 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 4
    store {}* inttoptr (i64 4827820512 to {}*), {}** %140, align 8
    %141 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 5)
    store {}* %141, {}** %56, align 16
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:287 within `Merger`
     store {}* inttoptr (i64 4299603976 to {}*), {}** %.sub, align 8
     %142 = call nonnull {}* @ijl_new_structv({}* nonnull %141, {}** nonnull %.sub, i32 1)
     store {}* %142, {}** %56, align 16
; ││└
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ ntuple.jl:48 within `ntuple`
     store {}* inttoptr (i64 4299751776 to {}*), {}** %.sub, align 8
     %143 = call nonnull {}* @ijl_apply_generic({}* nonnull %142, {}** nonnull %.sub, i32 1)
     store {}* %143, {}** %56, align 16
; ││└
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330 within `forcefold`
     store {}* inttoptr (i64 5983451472 to {}*), {}** %.sub, align 8
     store {}* inttoptr (i64 5983450976 to {}*), {}** %10, align 8
     store {}* inttoptr (i64 5983453888 to {}*), {}** %137, align 8
     store {}* %143, {}** %138, align 8
     %144 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4734466288 to {}*), {}** nonnull %.sub, i32 4)
     store {}* %144, {}** %51, align 8
; │││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %144, {}** %.sub, align 8
     store {}* inttoptr (i64 4299752064 to {}*), {}** %10, align 8
     %145 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %146 = bitcast {}* %145 to i64*
     %147 = getelementptr inbounds i64, i64* %146, i64 -1
     %148 = load atomic i64, i64* %147 unordered, align 8
     %149 = and i64 %148, -16
     switch i64 %149, label %post_is242 [
    i64 4759728480, label %L271
    i64 4741095904, label %post_box_union
    i64 5974287984, label %is241
  ]

L271:                                             ; preds = %L257
     store {}* %145, {}** %56, align 16
     %150 = call i8 @"j_==_5985"({}* nonnull %145, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass206

L285:                                             ; preds = %pass206
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %144, {}** %.sub, align 8
     store {}* inttoptr (i64 4299752064 to {}*), {}** %10, align 8
     %151 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %152 = bitcast {}* %151 to i64*
     %153 = getelementptr inbounds i64, i64* %152, i64 -1
     %154 = load atomic i64, i64* %153 unordered, align 8
     %155 = and i64 %154, -16
     switch i64 %155, label %post_is [
    i64 4759728480, label %L289
    i64 4741095904, label %post_box_union223
    i64 5974287984, label %is
  ]

L289:                                             ; preds = %L285
     store {}* %151, {}** %56, align 16
     %156 = call i8 @"j_==_5985"({}* nonnull %151, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass228

L303:                                             ; preds = %pass228
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:335 within `forcefold`
     store {}* %144, {}** %.sub, align 8
     store {}* inttoptr (i64 4299752064 to {}*), {}** %10, align 8
     %157 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     store {}* %157, {}** %56, align 16
; │││┌ @ essentials.jl:869 within `Val`
      store {}* inttoptr (i64 4688645968 to {}*), {}** %.sub, align 8
      store {}* %157, {}** %10, align 8
      %158 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L307

L307:                                             ; preds = %pass228, %pass206, %L303
     %value_phi208 = phi {}* [ %157, %L303 ], [ inttoptr (i64 6230679232 to {}*), %pass228 ], [ inttoptr (i64 6230679232 to {}*), %pass206 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:525
    %159 = bitcast {}* %value_phi208 to i64*
    %160 = getelementptr inbounds i64, i64* %159, i64 -1
    %161 = load atomic i64, i64* %160 unordered, align 8
    %162 = and i64 %161, -16
    %163 = inttoptr i64 %162 to {}*
    %exactly_isa210.not = icmp eq {}* %163, inttoptr (i64 5974287984 to {}*)
    br i1 %exactly_isa210.not, label %L318, label %L318.thread

L318.thread:                                      ; preds = %L307
    store {}* %value_phi208, {}** %56, align 16
    store {}* inttoptr (i64 5974287984 to {}*), {}** %.sub, align 8
    store {}* %value_phi208, {}** %10, align 8
    %164 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
    br label %L324

L318:                                             ; preds = %L307
    %.not612 = icmp eq {}* %value_phi208, null
    br i1 %.not612, label %L329, label %L324

L324:                                             ; preds = %L318, %L318.thread
    %unbox459.in.in = phi {}* [ %164, %L318.thread ], [ %value_phi208, %L318 ]
    %unbox459.in = bitcast {}* %unbox459.in.in to i32*
    %unbox459 = load i32, i32* %unbox459.in, align 4
; │└
; │ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:556 within `guaranteed_const_nongen`
; │┌ @ Base.jl:159 within `==`
    %.not596 = icmp eq i32 %unbox459, 0
; └└
  br i1 %.not596, label %L507, label %L329

L329:                                             ; preds = %pass71, %L324, %L318
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1222
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %getfield102 = load atomic {}*, {}** %50 unordered, align 8
      store {}* %getfield102, {}** %56, align 16
; │││└
     %165 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield102, {}* nonnull %getfield67, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not602 = icmp eq {}* %165, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not602, label %L363, label %L342

L342:                                             ; preds = %L329
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1223
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield105 = load atomic {}*, {}** %50 unordered, align 8
    store {}* %getfield105, {}** %56, align 16
; │└
   %166 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield105, {}* nonnull %getfield67, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not603 = icmp eq {}* %166, inttoptr (i64 4301375048 to {}*)
   br i1 %.not603, label %L346, label %L350

L346:                                             ; preds = %L342
   store {}* %getfield67, {}** %.sub, align 8
   %167 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %167)
   unreachable

L350:                                             ; preds = %L342
; └
  %168 = bitcast {}* %166 to i64*
  %169 = getelementptr inbounds i64, i64* %168, i64 -1
  %170 = load atomic i64, i64* %169 unordered, align 8
  %171 = and i64 %170, -16
  %172 = inttoptr i64 %171 to {}*
  %exactly_isa109.not = icmp eq {}* %172, inttoptr (i64 4688423472 to {}*)
  br i1 %exactly_isa109.not, label %L507, label %L357

L357:                                             ; preds = %L350
  store {}* %166, {}** %56, align 16
  store {}* inttoptr (i64 4688423472 to {}*), {}** %.sub, align 8
  store {}* %166, {}** %10, align 8
  %173 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  br label %L507

L363:                                             ; preds = %L329
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1230
  %174 = call nonnull {}* inttoptr (i64 4304459652 to {}* ({}*)*)({}* inttoptr (i64 4688423472 to {}*))
  %175 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe743, i64 0, i64 4
  store {}* %174, {}** %175, align 16
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1231
  store {}* %0, {}** %.sub, align 8
  store {}* %174, {}** %10, align 8
  %176 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
  store {}* %getfield67, {}** %176, align 8
  %177 = call nonnull {}* @"j1_setindex!_5979"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1232
  %178 = bitcast {}* %174 to i64*
  %179 = getelementptr inbounds i64, i64* %178, i64 -1
  %180 = load atomic i64, i64* %179 unordered, align 8
  %181 = and i64 %180, -16
  %182 = inttoptr i64 %181 to {}*
  %exactly_isa115.not = icmp eq {}* %182, inttoptr (i64 4687982016 to {}*)
  br i1 %exactly_isa115.not, label %L368, label %L371

L368:                                             ; preds = %L363
; ┌ @ binaryplatforms.jl:173 within `repr`
   %183 = bitcast {}* %174 to [2 x {}*]*
   %184 = call nonnull {}* @"j_#repr#12_5980"([2 x {}*]* nocapture readonly %183)
; └
  br label %L373

L371:                                             ; preds = %L363
  store {}* %174, {}** %.sub, align 8
  %185 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4692359824 to {}*), {}** nonnull %.sub, i32 1)
  br label %L373

L373:                                             ; preds = %L371, %L368
  %value_phi116 = phi {}* [ %184, %L368 ], [ %185, %L371 ]
  store {}* %value_phi116, {}** %56, align 16
  call void @j_println_5981({}* inttoptr (i64 6015889376 to {}*), {}* nonnull %value_phi116)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1234
  %186 = bitcast {}* %getfield67 to {}**
  %187 = load atomic {}*, {}** %186 unordered, align 8
  %isdefined.not = icmp eq {}* %187, null
  br i1 %isdefined.not, label %L491, label %pass120

L381:                                             ; preds = %pass120
  store {}* %187, {}** %51, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ boot.jl:245 within `Typeof`
    store {}* inttoptr (i64 4759733936 to {}*), {}** %.sub, align 8
    store {}* %187, {}** %10, align 8
    %188 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
    br label %L386

L384:                                             ; preds = %pass120
    %189 = icmp ult {}* %316, inttoptr (i64 1024 to {}*)
    br i1 %189, label %guard_pass197, label %L386

L386:                                             ; preds = %guard_pass197, %L384, %L381
    %value_phi122 = phi {}* [ %188, %L381 ], [ %316, %L384 ], [ %526, %guard_pass197 ]
    store {}* %187, {}** %51, align 8
    store {}* %value_phi122, {}** %56, align 16
; │└
; │┌ @ errorshow.jl:185 within `typesof`
    store {}* %value_phi122, {}** %.sub, align 8
    store {}* %0, {}** %10, align 8
    store {}* %187, {}** %176, align 8
    %190 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 3
    store {}* inttoptr (i64 4725390144 to {}*), {}** %190, align 8
    %191 = call nonnull {}* @jl_f_tuple({}* null, {}** nonnull %.sub, i32 4)
    %192 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe743, i64 0, i64 8
    store {}* %191, {}** %192, align 16
; ││┌ @ array.jl:724 within `_array_for` @ array.jl:721
; │││┌ @ abstractarray.jl:873 within `similar` @ abstractarray.jl:874
; ││││┌ @ boot.jl:484 within `Array` @ boot.jl:475
       %193 = call nonnull {}* inttoptr (i64 4304360888 to {}* ({}*, i64)*)({}* inttoptr (i64 4759731152 to {}*), i64 4)
       %194 = bitcast {}* %193 to { i8*, i64, i16, i16, i32 }*
       %arrayflags_ptr129 = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %194, i64 0, i32 2
       %195 = bitcast {}* %193 to {}**
       %196 = getelementptr inbounds {}*, {}** %195, i64 5
       %197 = bitcast {}* %193 to {}***
       %198 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe743, i64 0, i64 7
       store {}* %193, {}** %198, align 8
; ││└└└
; ││┌ @ tuple.jl:31 within `getindex`
     %199 = call {}* @ijl_get_nth_field_checked({}* nonnull %191, i64 0)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %200 = bitcast {}* %199 to i64*
     %201 = getelementptr inbounds i64, i64* %200, i64 -1
     %202 = load atomic i64, i64* %201 unordered, align 8
     %203 = and i64 %202, -16
     %204 = add i64 %203, -16
     %switch = icmp ult i64 %204, 64
     br i1 %switch, label %L396, label %L399

L396:                                             ; preds = %L386
     store {}* %199, {}** %56, align 16
     store {}* inttoptr (i64 4759733936 to {}*), {}** %.sub, align 8
     store {}* %199, {}** %10, align 8
     %205 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
     br label %L401

L399:                                             ; preds = %L386
     %206 = inttoptr i64 %203 to {}*
     %207 = icmp ult {}* %206, inttoptr (i64 1024 to {}*)
     br i1 %207, label %guard_pass194, label %L401

L401:                                             ; preds = %guard_pass194, %L399, %L396
     %value_phi128 = phi {}* [ %205, %L396 ], [ %206, %L399 ], [ %523, %guard_pass194 ]
; ││└
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags130 = load i16, i16* %arrayflags_ptr129, align 2
     %208 = and i16 %arrayflags130, 3
     %has_owner131 = icmp eq i16 %208, 3
     br i1 %has_owner131, label %array_owned132, label %merge_own133

L426:                                             ; preds = %idxend148, %411
     %value_phi153 = phi {}* [ %413, %411 ], [ %arrayref, %idxend148 ]
; └└└
  %209 = bitcast {}* %value_phi153 to i64*
  %210 = getelementptr inbounds i64, i64* %209, i64 -1
  %211 = load atomic i64, i64* %210 unordered, align 8
  %212 = and i64 %211, -16
  %213 = inttoptr i64 %212 to {}*
  %exactly_isa155.not = icmp eq {}* %213, inttoptr (i64 4687982016 to {}*)
  br i1 %exactly_isa155.not, label %L430, label %L433

L430:                                             ; preds = %L426
; ┌ @ binaryplatforms.jl:173 within `repr`
   %214 = bitcast {}* %value_phi153 to [2 x {}*]*
   store {}* %value_phi153, {}** %56, align 16
   %215 = call nonnull {}* @"j_#repr#12_5980"([2 x {}*]* nocapture readonly %214)
; └
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L435

L433:                                             ; preds = %L426
     store {}* %value_phi153, {}** %56, align 16
; └└└
  store {}* %value_phi153, {}** %.sub, align 8
  %216 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4692359824 to {}*), {}** nonnull %.sub, i32 1)
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L435

L435:                                             ; preds = %L433, %L430
     %value_phi156 = phi {}* [ %215, %L430 ], [ %216, %L433 ]
     store {}* %value_phi156, {}** %56, align 16
; └└└
  call void @j_println_5981({}* inttoptr (i64 6015889072 to {}*), {}* nonnull %value_phi156)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ boot.jl:245 within `Typeof`
    br i1 %switch693, label %L439, label %L442

L439:                                             ; preds = %L435
    store {}* inttoptr (i64 4759733936 to {}*), {}** %.sub, align 8
    store {}* %187, {}** %10, align 8
    %217 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L444

L442:                                             ; preds = %L435
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ boot.jl:245 within `Typeof`
    %218 = icmp ult {}* %316, inttoptr (i64 1024 to {}*)
    br i1 %218, label %guard_pass191, label %L444

L444:                                             ; preds = %guard_pass191, %L442, %L439
    %value_phi159 = phi {}* [ %217, %L439 ], [ %316, %L442 ], [ %520, %guard_pass191 ]
    store {}* %value_phi159, {}** %56, align 16
; │└
; │┌ @ errorshow.jl:185 within `typesof`
    store {}* %value_phi159, {}** %.sub, align 8
    store {}* %0, {}** %10, align 8
    store {}* %187, {}** %176, align 8
    store {}* inttoptr (i64 4725390144 to {}*), {}** %190, align 8
    %219 = call nonnull {}* @jl_f_tuple({}* null, {}** nonnull %.sub, i32 4)
    store {}* %219, {}** %192, align 16
; ││┌ @ array.jl:724 within `_array_for` @ array.jl:721
; │││┌ @ abstractarray.jl:873 within `similar` @ abstractarray.jl:874
; ││││┌ @ boot.jl:484 within `Array` @ boot.jl:475
       %220 = call nonnull {}* inttoptr (i64 4304360888 to {}* ({}*, i64)*)({}* inttoptr (i64 4759731152 to {}*), i64 4)
       %221 = bitcast {}* %220 to { i8*, i64, i16, i16, i32 }*
       %arrayflags_ptr166 = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %221, i64 0, i32 2
       %222 = bitcast {}* %220 to {}**
       %223 = getelementptr inbounds {}*, {}** %222, i64 5
       %224 = bitcast {}* %220 to {}***
       store {}* %220, {}** %198, align 8
; ││└└└
; ││┌ @ tuple.jl:31 within `getindex`
     %225 = call {}* @ijl_get_nth_field_checked({}* nonnull %219, i64 0)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %226 = bitcast {}* %225 to i64*
     %227 = getelementptr inbounds i64, i64* %226, i64 -1
     %228 = load atomic i64, i64* %227 unordered, align 8
     %229 = and i64 %228, -16
     %230 = add i64 %229, -16
     %switch691 = icmp ult i64 %230, 64
     br i1 %switch691, label %L454, label %L457

L454:                                             ; preds = %L444
     store {}* %225, {}** %56, align 16
     store {}* inttoptr (i64 4759733936 to {}*), {}** %.sub, align 8
     store {}* %225, {}** %10, align 8
     %231 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L459

L457:                                             ; preds = %L444
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ boot.jl:245 within `Typeof`
     %232 = inttoptr i64 %229 to {}*
     %233 = icmp ult {}* %232, inttoptr (i64 1024 to {}*)
     br i1 %233, label %guard_pass188, label %L459

L459:                                             ; preds = %guard_pass188, %L457, %L454
     %value_phi165 = phi {}* [ %231, %L454 ], [ %232, %L457 ], [ %517, %guard_pass188 ]
; ││└
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags167 = load i16, i16* %arrayflags_ptr166, align 2
     %234 = and i16 %arrayflags167, 3
     %has_owner168 = icmp eq i16 %234, 3
     br i1 %has_owner168, label %array_owned169, label %merge_own170

L482:                                             ; preds = %509
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ boot.jl:245 within `Typeof`
   store {}* inttoptr (i64 4759733936 to {}*), {}** %.sub, align 8
   store {}* %187, {}** %10, align 8
   %235 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L487

L485:                                             ; preds = %509
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ boot.jl:245 within `Typeof`
   %236 = icmp ult {}* %316, inttoptr (i64 1024 to {}*)
   br i1 %236, label %guard_pass, label %L487

L487:                                             ; preds = %guard_pass, %L485, %L482
   %value_phi180 = phi {}* [ %235, %L482 ], [ %316, %L485 ], [ %514, %guard_pass ]
   store {}* %value_phi180, {}** %56, align 16
; └
  store {}* %value_phi180, {}** %.sub, align 8
  store {}* %0, {}** %10, align 8
  store {}* %187, {}** %176, align 8
  store {}* inttoptr (i64 4725390144 to {}*), {}** %190, align 8
  %237 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 5679445952 to {}*), {}** nonnull %.sub, i32 4)
  store {}* %237, {}** %56, align 16
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1245
  call void inttoptr (i64 4304694488 to void ({}*, i64, {}*)*)({}* nonnull %174, i64 0, {}* nonnull %237)
  br label %L491

L491:                                             ; preds = %L487, %L373
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1248
; ┌ @ show.jl:1181 within `macro expansion`
   store {}* inttoptr (i64 6015888704 to {}*), {}** %.sub, align 8
   store {}* %174, {}** %10, align 8
   %238 = call nonnull {}* @jl_f_tuple({}* null, {}** nonnull %.sub, i32 2)
   store {}* %238, {}** %56, align 16
; └
  store {}* %238, {}** %.sub, align 8
  %239 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4692359824 to {}*), {}** nonnull %.sub, i32 1)
  store {}* %239, {}** %56, align 16
  call void @j_println_5981({}* inttoptr (i64 6015888672 to {}*), {}* nonnull %239)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1249
  %exactly_isa182.not = icmp eq {}* %182, inttoptr (i64 4688423472 to {}*)
  br i1 %exactly_isa182.not, label %L507, label %L501

L501:                                             ; preds = %L491
  store {}* inttoptr (i64 4688423472 to {}*), {}** %.sub, align 8
  store {}* %174, {}** %10, align 8
  %240 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L507

L507:                                             ; preds = %L501, %L491, %L357, %L350, %L324
     %value_phi73 = phi {}* [ %getfield67, %L324 ], [ %166, %L350 ], [ %173, %L357 ], [ %174, %L491 ], [ %240, %L501 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261
; ┌ @ essentials.jl:645 within `setindex!`
   %241 = bitcast {}* %129 to { i8*, i64, i16, i16, i32 }*
   %arraylen_ptr74 = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %241, i64 0, i32 1
   %arraylen75 = load i64, i64* %arraylen_ptr74, align 8
   %inbounds76.not = icmp eq i64 %arraylen75, 0
   br i1 %inbounds76.not, label %oob77, label %idxend79

L521:                                             ; preds = %merge_own84._crit_edge
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1269
  store {}* inttoptr (i64 11381649040 to {}*), {}** %.sub, align 8
  store {}* %302, {}** %10, align 8
  %242 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %243 = bitcast {}* %242 to {}**
  %unbox475.unpack = load {}*, {}** %243, align 8
  store {}* %unbox475.unpack, {}** %56, align 16
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1218 within `make_zero`
  %ptls_load717769770 = load i8*, i8** %52, align 8
  %box462 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load717769770, i32 1136, i32 16) #13
  %244 = bitcast {}* %box462 to i64*
  %245 = getelementptr inbounds i64, i64* %244, i64 -1
  store atomic i64 11381649040, i64* %245 unordered, align 8
  %246 = bitcast {}* %box462 to {}**
  store {}* %unbox475.unpack, {}** %246, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1269
  br label %guard_pass418

L525:                                             ; preds = %guard_pass418, %guard_pass411, %L207
  %unbox406.unpack.pn = phi {}* [ %unbox406.unpack, %L207 ], [ %unbox413.unpack, %guard_pass411 ], [ %unbox420.unpack, %guard_pass418 ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero`
; ┌ @ essentials.jl:645 within `setindex!`
   %247 = bitcast {}* %74 to { i8*, i64, i16, i16, i32 }*
   %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %247, i64 0, i32 1
   %arraylen = load i64, i64* %arraylen_ptr, align 8
   %inbounds.not = icmp eq i64 %arraylen, 0
   br i1 %inbounds.not, label %oob, label %idxend

L540:                                             ; preds = %268
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1269 within `make_zero`
  store {}* inttoptr (i64 11381562640 to {}*), {}** %.sub, align 8
  store {}* %271, {}** %10, align 8
  %248 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %249 = bitcast {}* %248 to {}**
  %unbox436.unpack.unpack = load {}*, {}** %249, align 8
  store {}* %unbox436.unpack.unpack, {}** %56, align 16
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1218 within `make_zero`
  %ptls_load720763764 = load i8*, i8** %52, align 8
  %box423 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load720763764, i32 1136, i32 16) #13
  %250 = bitcast {}* %box423 to i64*
  %251 = getelementptr inbounds i64, i64* %250, i64 -1
  store atomic i64 11381562640, i64* %251 unordered, align 8
  %252 = bitcast {}* %box423 to {}**
  store {}* %unbox436.unpack.unpack, {}** %252, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1269 within `make_zero`
  br label %L541

L541:                                             ; preds = %.L541_crit_edge, %L540
  %.pre-phi = phi {}** [ %.phi.trans.insert776, %.L541_crit_edge ], [ %252, %L540 ]
  %unbox37.unpack.unpack = phi {}* [ %unbox436.unpack.unpack, %L540 ], [ %unbox37.unpack.unpack.pre, %.L541_crit_edge ]
  %value_phi36 = phi {}* [ %box423, %L540 ], [ %271, %.L541_crit_edge ]
  br label %common.ret

fail:                                             ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4759728896 to {}*), {}* %11)
    unreachable

pass:                                             ; preds = %top
    %253 = icmp eq {}* %11, inttoptr (i64 4827820512 to {}*)
    br i1 %253, label %L11, label %L85

fail22:                                           ; preds = %L119
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4759728896 to {}*), {}* %76)
    unreachable

pass23:                                           ; preds = %L119
    %254 = icmp eq {}* %76, inttoptr (i64 4827820512 to {}*)
    br i1 %254, label %L136, label %L208

oob:                                              ; preds = %L525
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero`
; ┌ @ essentials.jl:645 within `setindex!`
   %errorbox = alloca i64, align 8
   store i64 1, i64* %errorbox, align 8
   call void @ijl_bounds_error_ints({}* %74, i64* nonnull %errorbox, i64 1)
   unreachable

idxend:                                           ; preds = %L525
   %arrayflags_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %247, i64 0, i32 2
   %arrayflags = load i16, i16* %arrayflags_ptr, align 2
   %255 = and i16 %arrayflags, 3
   %has_owner = icmp eq i16 %255, 3
   br i1 %has_owner, label %array_owned, label %merge_own

array_owned:                                      ; preds = %idxend
   %256 = bitcast {}* %74 to {}**
   %257 = getelementptr inbounds {}*, {}** %256, i64 5
   %external_owner = load {}*, {}** %257, align 8
   br label %merge_own

merge_own:                                        ; preds = %array_owned, %idxend
   %data_owner = phi {}* [ %74, %idxend ], [ %external_owner, %array_owned ]
   %258 = bitcast {}* %74 to {}***
   %arrayptr = load {}**, {}*** %258, align 8
   store {}* %unbox406.unpack.pn, {}** %56, align 16
   %ptls_load723759760 = load i8*, i8** %52, align 8
   %box27 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load723759760, i32 1136, i32 16) #13
   %259 = bitcast {}* %box27 to i64*
   %260 = getelementptr inbounds i64, i64* %259, i64 -1
   store atomic i64 11381649040, i64* %260 unordered, align 8
   %261 = bitcast {}* %box27 to {}**
   store {}* %unbox406.unpack.pn, {}** %261, align 8
   store atomic {}* %box27, {}** %arrayptr release, align 8
   %262 = bitcast {}* %data_owner to i64*
   %263 = getelementptr inbounds i64, i64* %262, i64 -1
   %264 = load atomic i64, i64* %263 unordered, align 8
   %265 = and i64 %264, 3
   %266 = icmp eq i64 %265, 3
   br i1 %266, label %267, label %268

267:                                              ; preds = %merge_own
   call void @ijl_gc_queue_root({}* nonnull %data_owner)
   br label %268

268:                                              ; preds = %267, %merge_own
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1267 within `make_zero`
; ┌ @ pointer.jl:65 within `unsafe_convert`
   %269 = bitcast {}* %74 to i8**
   %arrayptr29 = load i8*, i8** %269, align 8
   %270 = ptrtoint i8* %arrayptr29 to i64
; └
  %271 = call nonnull {}* inttoptr (i64 4304467456 to {}* ({}*, i64, i32)*)({}* inttoptr (i64 11381562640 to {}*), i64 %270, i32 1)
  store {}* %271, {}** %51, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1268 within `make_zero`
  %ptls_load726761762 = load i8*, i8** %52, align 8
  %box31 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load726761762, i32 1136, i32 16) #13
  %272 = bitcast {}* %box31 to i64*
  %273 = getelementptr inbounds i64, i64* %272, i64 -1
  store atomic i64 11381562640, i64* %273 unordered, align 8
  %memcpy_refined_dst33 = bitcast {}* %box31 to {}**
  store {}* %55, {}** %memcpy_refined_dst33, align 8
  store {}* %box31, {}** %56, align 16
  store {}* %0, {}** %.sub, align 8
  store {}* %271, {}** %10, align 8
  %274 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
  store {}* %box31, {}** %274, align 8
  %275 = call nonnull {}* @"j1_setindex!_5979"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1269 within `make_zero`
  %276 = bitcast {}* %271 to i64*
  %277 = getelementptr inbounds i64, i64* %276, i64 -1
  %278 = load atomic i64, i64* %277 unordered, align 8
  %279 = and i64 %278, -16
  %280 = inttoptr i64 %279 to {}*
  %exactly_isa35.not = icmp eq {}* %280, inttoptr (i64 11381562640 to {}*)
  br i1 %exactly_isa35.not, label %.L541_crit_edge, label %L540

.L541_crit_edge:                                  ; preds = %268
  %.phi.trans.insert776 = bitcast {}* %271 to {}**
  %unbox37.unpack.unpack.pre = load {}*, {}** %.phi.trans.insert776, align 8
  br label %L541

fail70:                                           ; preds = %L242
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4759728896 to {}*), {}* %131)
    unreachable

pass71:                                           ; preds = %L242
    %281 = icmp eq {}* %131, inttoptr (i64 4827820512 to {}*)
    br i1 %281, label %L257, label %L329

oob77:                                            ; preds = %L507
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261
; ┌ @ essentials.jl:645 within `setindex!`
   %errorbox78 = alloca i64, align 8
   store i64 1, i64* %errorbox78, align 8
   call void @ijl_bounds_error_ints({}* %129, i64* nonnull %errorbox78, i64 1)
   unreachable

idxend79:                                         ; preds = %L507
   %arrayflags_ptr80 = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %241, i64 0, i32 2
   %arrayflags81 = load i16, i16* %arrayflags_ptr80, align 2
   %282 = and i16 %arrayflags81, 3
   %has_owner82 = icmp eq i16 %282, 3
   br i1 %has_owner82, label %array_owned83, label %merge_own84

array_owned83:                                    ; preds = %idxend79
   %283 = bitcast {}* %129 to {}**
   %284 = getelementptr inbounds {}*, {}** %283, i64 5
   %external_owner85 = load {}*, {}** %284, align 8
   br label %merge_own84

merge_own84:                                      ; preds = %array_owned83, %idxend79
   %data_owner86 = phi {}* [ %129, %idxend79 ], [ %external_owner85, %array_owned83 ]
   %285 = bitcast {}* %129 to {}***
   %arrayptr88 = load {}**, {}*** %285, align 8
   store atomic {}* %value_phi73, {}** %arrayptr88 release, align 8
   %286 = bitcast {}* %data_owner86 to i64*
   %287 = getelementptr inbounds i64, i64* %286, i64 -1
   %288 = load atomic i64, i64* %287 unordered, align 8
   %289 = and i64 %288, 3
   %290 = icmp eq i64 %289, 3
   %291 = ptrtoint {}** %arrayptr88 to i64
   %292 = inttoptr i64 %291 to i8*
   br i1 %290, label %293, label %merge_own84._crit_edge

293:                                              ; preds = %merge_own84
   %294 = bitcast {}* %value_phi73 to i64*
   %295 = getelementptr inbounds i64, i64* %294, i64 -1
   %296 = load atomic i64, i64* %295 unordered, align 8
   %297 = and i64 %296, 1
   %298 = icmp eq i64 %297, 0
   br i1 %298, label %299, label %merge_own84._crit_edge

299:                                              ; preds = %293
   call void @ijl_gc_queue_root({}* nonnull %data_owner86)
   %300 = bitcast {}* %129 to i8**
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1267
; ┌ @ pointer.jl:65 within `unsafe_convert`
   %arrayptr90.pre.pre = load i8*, i8** %300, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261
; ┌ @ essentials.jl:645 within `setindex!`
   br label %merge_own84._crit_edge

merge_own84._crit_edge:                           ; preds = %299, %293, %merge_own84
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1267
; ┌ @ pointer.jl:65 within `unsafe_convert`
   %arrayptr90 = phi i8* [ %292, %merge_own84 ], [ %arrayptr90.pre.pre, %299 ], [ %292, %293 ]
   %301 = ptrtoint i8* %arrayptr90 to i64
; └
  %302 = call nonnull {}* inttoptr (i64 4304467456 to {}* ({}*, i64, i32)*)({}* inttoptr (i64 11381649040 to {}*), i64 %301, i32 1)
  store {}* %302, {}** %51, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1268
  %ptls_load729767768 = load i8*, i8** %52, align 8
  %box92 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load729767768, i32 1136, i32 16) #13
  %303 = bitcast {}* %box92 to i64*
  %304 = getelementptr inbounds i64, i64* %303, i64 -1
  store atomic i64 11381649040, i64* %304 unordered, align 8
  %memcpy_refined_dst94 = bitcast {}* %box92 to {}**
  store {}* %getfield67, {}** %memcpy_refined_dst94, align 8
  store {}* %box92, {}** %56, align 16
  store {}* %0, {}** %.sub, align 8
  store {}* %302, {}** %10, align 8
  %305 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
  store {}* %box92, {}** %305, align 8
  %306 = call nonnull {}* @"j1_setindex!_5979"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1269
  %307 = bitcast {}* %302 to i64*
  %308 = getelementptr inbounds i64, i64* %307, i64 -1
  %309 = load atomic i64, i64* %308 unordered, align 8
  %310 = and i64 %309, -16
  %311 = inttoptr i64 %310 to {}*
  %exactly_isa96.not = icmp eq {}* %311, inttoptr (i64 11381649040 to {}*)
  br i1 %exactly_isa96.not, label %merge_own84._crit_edge.guard_pass418_crit_edge, label %L521

merge_own84._crit_edge.guard_pass418_crit_edge:   ; preds = %merge_own84._crit_edge
  %.phi.trans.insert774 = bitcast {}* %302 to {}**
  %unbox420.unpack.pre = load {}*, {}** %.phi.trans.insert774, align 8
  br label %guard_pass418

pass120:                                          ; preds = %L373
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ boot.jl:245 within `Typeof`
    %312 = bitcast {}* %187 to i64*
    %313 = getelementptr inbounds i64, i64* %312, i64 -1
    %314 = load atomic i64, i64* %313 unordered, align 8
    %315 = and i64 %314, -16
    %316 = inttoptr i64 %315 to {}*
    %317 = add i64 %315, -16
    %switch693 = icmp ult i64 %317, 64
    br i1 %switch693, label %L381, label %L384

array_owned132:                                   ; preds = %L401
; │└
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ essentials.jl:645 within `setindex!`
     %external_owner134 = load {}*, {}** %196, align 8
     br label %merge_own133

merge_own133:                                     ; preds = %array_owned132, %L401
     %data_owner135 = phi {}* [ %193, %L401 ], [ %external_owner134, %array_owned132 ]
     %arrayptr137 = load {}**, {}*** %197, align 8
     store atomic {}* %value_phi128, {}** %arrayptr137 release, align 8
     %318 = bitcast {}* %data_owner135 to i64*
     %319 = getelementptr inbounds i64, i64* %318, i64 -1
     %320 = load atomic i64, i64* %319 unordered, align 8
     %321 = and i64 %320, 3
     %322 = icmp eq i64 %321, 3
     br i1 %322, label %323, label %330

323:                                              ; preds = %merge_own133
     %324 = bitcast {}* %value_phi128 to i64*
     %325 = getelementptr inbounds i64, i64* %324, i64 -1
     %326 = load atomic i64, i64* %325 unordered, align 8
     %327 = and i64 %326, 1
     %328 = icmp eq i64 %327, 0
     br i1 %328, label %329, label %330

329:                                              ; preds = %323
     call void @ijl_gc_queue_root({}* nonnull %data_owner135)
     br label %330

330:                                              ; preds = %329, %323, %merge_own133
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %331 = call {}* @ijl_get_nth_field_checked({}* nonnull %191, i64 1)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %332 = bitcast {}* %331 to i64*
     %333 = getelementptr inbounds i64, i64* %332, i64 -1
     %334 = load atomic i64, i64* %333 unordered, align 8
     %335 = and i64 %334, -16
     %336 = add i64 %335, -16
     %switch.1 = icmp ult i64 %336, 64
     br i1 %switch.1, label %L396.1, label %L399.1

L399.1:                                           ; preds = %330
     %337 = inttoptr i64 %335 to {}*
     %338 = icmp ult {}* %337, inttoptr (i64 1024 to {}*)
     br i1 %338, label %guard_pass194.1, label %L401.1

guard_pass194.1:                                  ; preds = %L399.1
     %339 = getelementptr inbounds i8, i8* @small_typeof, i64 %335
     %340 = bitcast i8* %339 to {}**
     %341 = load {}*, {}** %340, align 8
     br label %L401.1

L396.1:                                           ; preds = %330
     store {}* %331, {}** %56, align 16
     store {}* inttoptr (i64 4759733936 to {}*), {}** %.sub, align 8
     store {}* %331, {}** %10, align 8
     %342 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
     br label %L401.1

L401.1:                                           ; preds = %L396.1, %guard_pass194.1, %L399.1
     %value_phi128.1 = phi {}* [ %342, %L396.1 ], [ %337, %L399.1 ], [ %341, %guard_pass194.1 ]
; ││└
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags130.1 = load i16, i16* %arrayflags_ptr129, align 2
     %343 = and i16 %arrayflags130.1, 3
     %has_owner131.1 = icmp eq i16 %343, 3
     br i1 %has_owner131.1, label %array_owned132.1, label %merge_own133.1

array_owned132.1:                                 ; preds = %L401.1
     %external_owner134.1 = load {}*, {}** %196, align 8
     br label %merge_own133.1

merge_own133.1:                                   ; preds = %array_owned132.1, %L401.1
     %data_owner135.1 = phi {}* [ %193, %L401.1 ], [ %external_owner134.1, %array_owned132.1 ]
     %arrayptr137.1 = load {}**, {}*** %197, align 8
     %344 = getelementptr inbounds {}*, {}** %arrayptr137.1, i64 1
     store atomic {}* %value_phi128.1, {}** %344 release, align 8
     %345 = bitcast {}* %data_owner135.1 to i64*
     %346 = getelementptr inbounds i64, i64* %345, i64 -1
     %347 = load atomic i64, i64* %346 unordered, align 8
     %348 = and i64 %347, 3
     %349 = icmp eq i64 %348, 3
     br i1 %349, label %350, label %357

350:                                              ; preds = %merge_own133.1
     %351 = bitcast {}* %value_phi128.1 to i64*
     %352 = getelementptr inbounds i64, i64* %351, i64 -1
     %353 = load atomic i64, i64* %352 unordered, align 8
     %354 = and i64 %353, 1
     %355 = icmp eq i64 %354, 0
     br i1 %355, label %356, label %357

356:                                              ; preds = %350
     call void @ijl_gc_queue_root({}* nonnull %data_owner135.1)
     br label %357

357:                                              ; preds = %356, %350, %merge_own133.1
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %358 = call {}* @ijl_get_nth_field_checked({}* nonnull %191, i64 2)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %359 = bitcast {}* %358 to i64*
     %360 = getelementptr inbounds i64, i64* %359, i64 -1
     %361 = load atomic i64, i64* %360 unordered, align 8
     %362 = and i64 %361, -16
     %363 = add i64 %362, -16
     %switch.2 = icmp ult i64 %363, 64
     br i1 %switch.2, label %L396.2, label %L399.2

L399.2:                                           ; preds = %357
     %364 = inttoptr i64 %362 to {}*
     %365 = icmp ult {}* %364, inttoptr (i64 1024 to {}*)
     br i1 %365, label %guard_pass194.2, label %L401.2

guard_pass194.2:                                  ; preds = %L399.2
     %366 = getelementptr inbounds i8, i8* @small_typeof, i64 %362
     %367 = bitcast i8* %366 to {}**
     %368 = load {}*, {}** %367, align 8
     br label %L401.2

L396.2:                                           ; preds = %357
     store {}* %358, {}** %56, align 16
     store {}* inttoptr (i64 4759733936 to {}*), {}** %.sub, align 8
     store {}* %358, {}** %10, align 8
     %369 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
     br label %L401.2

L401.2:                                           ; preds = %L396.2, %guard_pass194.2, %L399.2
     %value_phi128.2 = phi {}* [ %369, %L396.2 ], [ %364, %L399.2 ], [ %368, %guard_pass194.2 ]
; ││└
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags130.2 = load i16, i16* %arrayflags_ptr129, align 2
     %370 = and i16 %arrayflags130.2, 3
     %has_owner131.2 = icmp eq i16 %370, 3
     br i1 %has_owner131.2, label %array_owned132.2, label %merge_own133.2

array_owned132.2:                                 ; preds = %L401.2
     %external_owner134.2 = load {}*, {}** %196, align 8
     br label %merge_own133.2

merge_own133.2:                                   ; preds = %array_owned132.2, %L401.2
     %data_owner135.2 = phi {}* [ %193, %L401.2 ], [ %external_owner134.2, %array_owned132.2 ]
     %arrayptr137.2 = load {}**, {}*** %197, align 8
     %371 = getelementptr inbounds {}*, {}** %arrayptr137.2, i64 2
     store atomic {}* %value_phi128.2, {}** %371 release, align 8
     %372 = bitcast {}* %data_owner135.2 to i64*
     %373 = getelementptr inbounds i64, i64* %372, i64 -1
     %374 = load atomic i64, i64* %373 unordered, align 8
     %375 = and i64 %374, 3
     %376 = icmp eq i64 %375, 3
     br i1 %376, label %377, label %384

377:                                              ; preds = %merge_own133.2
     %378 = bitcast {}* %value_phi128.2 to i64*
     %379 = getelementptr inbounds i64, i64* %378, i64 -1
     %380 = load atomic i64, i64* %379 unordered, align 8
     %381 = and i64 %380, 1
     %382 = icmp eq i64 %381, 0
     br i1 %382, label %383, label %384

383:                                              ; preds = %377
     call void @ijl_gc_queue_root({}* nonnull %data_owner135.2)
     br label %384

384:                                              ; preds = %383, %377, %merge_own133.2
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %385 = call {}* @ijl_get_nth_field_checked({}* nonnull %191, i64 3)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %386 = bitcast {}* %385 to i64*
     %387 = getelementptr inbounds i64, i64* %386, i64 -1
     %388 = load atomic i64, i64* %387 unordered, align 8
     %389 = and i64 %388, -16
     %390 = add i64 %389, -16
     %switch.3 = icmp ult i64 %390, 64
     br i1 %switch.3, label %L396.3, label %L399.3

L399.3:                                           ; preds = %384
     %391 = inttoptr i64 %389 to {}*
     %392 = icmp ult {}* %391, inttoptr (i64 1024 to {}*)
     br i1 %392, label %guard_pass194.3, label %L401.3

guard_pass194.3:                                  ; preds = %L399.3
     %393 = getelementptr inbounds i8, i8* @small_typeof, i64 %389
     %394 = bitcast i8* %393 to {}**
     %395 = load {}*, {}** %394, align 8
     br label %L401.3

L396.3:                                           ; preds = %384
     store {}* %385, {}** %56, align 16
     store {}* inttoptr (i64 4759733936 to {}*), {}** %.sub, align 8
     store {}* %385, {}** %10, align 8
     %396 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
     br label %L401.3

L401.3:                                           ; preds = %L396.3, %guard_pass194.3, %L399.3
     %value_phi128.3 = phi {}* [ %396, %L396.3 ], [ %391, %L399.3 ], [ %395, %guard_pass194.3 ]
; ││└
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags130.3 = load i16, i16* %arrayflags_ptr129, align 2
     %397 = and i16 %arrayflags130.3, 3
     %has_owner131.3 = icmp eq i16 %397, 3
     br i1 %has_owner131.3, label %array_owned132.3, label %merge_own133.3

array_owned132.3:                                 ; preds = %L401.3
     %external_owner134.3 = load {}*, {}** %196, align 8
     br label %merge_own133.3

merge_own133.3:                                   ; preds = %array_owned132.3, %L401.3
     %data_owner135.3 = phi {}* [ %193, %L401.3 ], [ %external_owner134.3, %array_owned132.3 ]
     %arrayptr137.3 = load {}**, {}*** %197, align 8
     %398 = getelementptr inbounds {}*, {}** %arrayptr137.3, i64 3
     store atomic {}* %value_phi128.3, {}** %398 release, align 8
     %399 = bitcast {}* %data_owner135.3 to i64*
     %400 = getelementptr inbounds i64, i64* %399, i64 -1
     %401 = load atomic i64, i64* %400 unordered, align 8
     %402 = and i64 %401, 3
     %403 = icmp eq i64 %402, 3
     br i1 %403, label %404, label %411

404:                                              ; preds = %merge_own133.3
     %405 = bitcast {}* %value_phi128.3 to i64*
     %406 = getelementptr inbounds i64, i64* %405, i64 -1
     %407 = load atomic i64, i64* %406 unordered, align 8
     %408 = and i64 %407, 1
     %409 = icmp eq i64 %408, 0
     br i1 %409, label %410, label %411

410:                                              ; preds = %404
     call void @ijl_gc_queue_root({}* nonnull %data_owner135.3)
     br label %411

411:                                              ; preds = %410, %404, %merge_own133.3
; ││└
    store {}* inttoptr (i64 4687803232 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4748606912 to {}*), {}** %10, align 8
    store {}* inttoptr (i64 4697463488 to {}*), {}** %176, align 8
    store {}* %193, {}** %190, align 8
    %412 = call nonnull {}* @jl_f__apply_iterate({}* null, {}** nonnull %.sub, i32 4)
    store {}* %412, {}** %56, align 16
; │└
; │┌ @ reflection.jl:1353 within `code_typed`
    store {}* inttoptr (i64 4697474208 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4689400432 to {}*), {}** %10, align 8
    store {}* inttoptr (i64 5679445952 to {}*), {}** %176, align 8
    store {}* %412, {}** %190, align 8
    %413 = call nonnull {}* @"j1_#code_typed#25_5982"({}* inttoptr (i64 4689402000 to {}*), {}** nonnull %.sub, i32 4)
; │└
; │ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:227
; │┌ @ essentials.jl:10 within `length`
    %414 = bitcast {}* %413 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr141 = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %414, i64 0, i32 1
    %arraylen142 = load i64, i64* %arraylen_ptr141, align 8
; │└
; │┌ @ promotion.jl:521 within `==`
    %.not606 = icmp eq i64 %arraylen142, 1
; │└
   br i1 %.not606, label %idxend148, label %L426

idxend148:                                        ; preds = %411
; │┌ @ essentials.jl:13 within `getindex`
    %415 = bitcast {}* %413 to {}***
    %arrayptr150607 = load {}**, {}*** %415, align 8
    %arrayref = load {}*, {}** %arrayptr150607, align 8
    %.not608 = icmp eq {}* %arrayref, null
    br i1 %.not608, label %fail151, label %L426

fail151:                                          ; preds = %idxend148
    call void @ijl_throw({}* inttoptr (i64 4758573664 to {}*))
    unreachable

array_owned169:                                   ; preds = %L459
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ essentials.jl:645 within `setindex!`
     %external_owner171 = load {}*, {}** %223, align 8
     br label %merge_own170

merge_own170:                                     ; preds = %array_owned169, %L459
     %data_owner172 = phi {}* [ %220, %L459 ], [ %external_owner171, %array_owned169 ]
     %arrayptr174 = load {}**, {}*** %224, align 8
     store atomic {}* %value_phi165, {}** %arrayptr174 release, align 8
     %416 = bitcast {}* %data_owner172 to i64*
     %417 = getelementptr inbounds i64, i64* %416, i64 -1
     %418 = load atomic i64, i64* %417 unordered, align 8
     %419 = and i64 %418, 3
     %420 = icmp eq i64 %419, 3
     br i1 %420, label %421, label %428

421:                                              ; preds = %merge_own170
     %422 = bitcast {}* %value_phi165 to i64*
     %423 = getelementptr inbounds i64, i64* %422, i64 -1
     %424 = load atomic i64, i64* %423 unordered, align 8
     %425 = and i64 %424, 1
     %426 = icmp eq i64 %425, 0
     br i1 %426, label %427, label %428

427:                                              ; preds = %421
     call void @ijl_gc_queue_root({}* nonnull %data_owner172)
     br label %428

428:                                              ; preds = %427, %421, %merge_own170
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %429 = call {}* @ijl_get_nth_field_checked({}* nonnull %219, i64 1)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %430 = bitcast {}* %429 to i64*
     %431 = getelementptr inbounds i64, i64* %430, i64 -1
     %432 = load atomic i64, i64* %431 unordered, align 8
     %433 = and i64 %432, -16
     %434 = add i64 %433, -16
     %switch691.1 = icmp ult i64 %434, 64
     br i1 %switch691.1, label %L454.1, label %L457.1

L457.1:                                           ; preds = %428
     %435 = inttoptr i64 %433 to {}*
     %436 = icmp ult {}* %435, inttoptr (i64 1024 to {}*)
     br i1 %436, label %guard_pass188.1, label %L459.1

guard_pass188.1:                                  ; preds = %L457.1
     %437 = getelementptr inbounds i8, i8* @small_typeof, i64 %433
     %438 = bitcast i8* %437 to {}**
     %439 = load {}*, {}** %438, align 8
     br label %L459.1

L454.1:                                           ; preds = %428
     store {}* %429, {}** %56, align 16
     store {}* inttoptr (i64 4759733936 to {}*), {}** %.sub, align 8
     store {}* %429, {}** %10, align 8
     %440 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L459.1

L459.1:                                           ; preds = %L454.1, %guard_pass188.1, %L457.1
     %value_phi165.1 = phi {}* [ %440, %L454.1 ], [ %435, %L457.1 ], [ %439, %guard_pass188.1 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags167.1 = load i16, i16* %arrayflags_ptr166, align 2
     %441 = and i16 %arrayflags167.1, 3
     %has_owner168.1 = icmp eq i16 %441, 3
     br i1 %has_owner168.1, label %array_owned169.1, label %merge_own170.1

array_owned169.1:                                 ; preds = %L459.1
     %external_owner171.1 = load {}*, {}** %223, align 8
     br label %merge_own170.1

merge_own170.1:                                   ; preds = %array_owned169.1, %L459.1
     %data_owner172.1 = phi {}* [ %220, %L459.1 ], [ %external_owner171.1, %array_owned169.1 ]
     %arrayptr174.1 = load {}**, {}*** %224, align 8
     %442 = getelementptr inbounds {}*, {}** %arrayptr174.1, i64 1
     store atomic {}* %value_phi165.1, {}** %442 release, align 8
     %443 = bitcast {}* %data_owner172.1 to i64*
     %444 = getelementptr inbounds i64, i64* %443, i64 -1
     %445 = load atomic i64, i64* %444 unordered, align 8
     %446 = and i64 %445, 3
     %447 = icmp eq i64 %446, 3
     br i1 %447, label %448, label %455

448:                                              ; preds = %merge_own170.1
     %449 = bitcast {}* %value_phi165.1 to i64*
     %450 = getelementptr inbounds i64, i64* %449, i64 -1
     %451 = load atomic i64, i64* %450 unordered, align 8
     %452 = and i64 %451, 1
     %453 = icmp eq i64 %452, 0
     br i1 %453, label %454, label %455

454:                                              ; preds = %448
     call void @ijl_gc_queue_root({}* nonnull %data_owner172.1)
     br label %455

455:                                              ; preds = %454, %448, %merge_own170.1
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %456 = call {}* @ijl_get_nth_field_checked({}* nonnull %219, i64 2)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %457 = bitcast {}* %456 to i64*
     %458 = getelementptr inbounds i64, i64* %457, i64 -1
     %459 = load atomic i64, i64* %458 unordered, align 8
     %460 = and i64 %459, -16
     %461 = add i64 %460, -16
     %switch691.2 = icmp ult i64 %461, 64
     br i1 %switch691.2, label %L454.2, label %L457.2

L457.2:                                           ; preds = %455
     %462 = inttoptr i64 %460 to {}*
     %463 = icmp ult {}* %462, inttoptr (i64 1024 to {}*)
     br i1 %463, label %guard_pass188.2, label %L459.2

guard_pass188.2:                                  ; preds = %L457.2
     %464 = getelementptr inbounds i8, i8* @small_typeof, i64 %460
     %465 = bitcast i8* %464 to {}**
     %466 = load {}*, {}** %465, align 8
     br label %L459.2

L454.2:                                           ; preds = %455
     store {}* %456, {}** %56, align 16
     store {}* inttoptr (i64 4759733936 to {}*), {}** %.sub, align 8
     store {}* %456, {}** %10, align 8
     %467 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L459.2

L459.2:                                           ; preds = %L454.2, %guard_pass188.2, %L457.2
     %value_phi165.2 = phi {}* [ %467, %L454.2 ], [ %462, %L457.2 ], [ %466, %guard_pass188.2 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags167.2 = load i16, i16* %arrayflags_ptr166, align 2
     %468 = and i16 %arrayflags167.2, 3
     %has_owner168.2 = icmp eq i16 %468, 3
     br i1 %has_owner168.2, label %array_owned169.2, label %merge_own170.2

array_owned169.2:                                 ; preds = %L459.2
     %external_owner171.2 = load {}*, {}** %223, align 8
     br label %merge_own170.2

merge_own170.2:                                   ; preds = %array_owned169.2, %L459.2
     %data_owner172.2 = phi {}* [ %220, %L459.2 ], [ %external_owner171.2, %array_owned169.2 ]
     %arrayptr174.2 = load {}**, {}*** %224, align 8
     %469 = getelementptr inbounds {}*, {}** %arrayptr174.2, i64 2
     store atomic {}* %value_phi165.2, {}** %469 release, align 8
     %470 = bitcast {}* %data_owner172.2 to i64*
     %471 = getelementptr inbounds i64, i64* %470, i64 -1
     %472 = load atomic i64, i64* %471 unordered, align 8
     %473 = and i64 %472, 3
     %474 = icmp eq i64 %473, 3
     br i1 %474, label %475, label %482

475:                                              ; preds = %merge_own170.2
     %476 = bitcast {}* %value_phi165.2 to i64*
     %477 = getelementptr inbounds i64, i64* %476, i64 -1
     %478 = load atomic i64, i64* %477 unordered, align 8
     %479 = and i64 %478, 1
     %480 = icmp eq i64 %479, 0
     br i1 %480, label %481, label %482

481:                                              ; preds = %475
     call void @ijl_gc_queue_root({}* nonnull %data_owner172.2)
     br label %482

482:                                              ; preds = %481, %475, %merge_own170.2
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %483 = call {}* @ijl_get_nth_field_checked({}* nonnull %219, i64 3)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %484 = bitcast {}* %483 to i64*
     %485 = getelementptr inbounds i64, i64* %484, i64 -1
     %486 = load atomic i64, i64* %485 unordered, align 8
     %487 = and i64 %486, -16
     %488 = add i64 %487, -16
     %switch691.3 = icmp ult i64 %488, 64
     br i1 %switch691.3, label %L454.3, label %L457.3

L457.3:                                           ; preds = %482
     %489 = inttoptr i64 %487 to {}*
     %490 = icmp ult {}* %489, inttoptr (i64 1024 to {}*)
     br i1 %490, label %guard_pass188.3, label %L459.3

guard_pass188.3:                                  ; preds = %L457.3
     %491 = getelementptr inbounds i8, i8* @small_typeof, i64 %487
     %492 = bitcast i8* %491 to {}**
     %493 = load {}*, {}** %492, align 8
     br label %L459.3

L454.3:                                           ; preds = %482
     store {}* %483, {}** %56, align 16
     store {}* inttoptr (i64 4759733936 to {}*), {}** %.sub, align 8
     store {}* %483, {}** %10, align 8
     %494 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L459.3

L459.3:                                           ; preds = %L454.3, %guard_pass188.3, %L457.3
     %value_phi165.3 = phi {}* [ %494, %L454.3 ], [ %489, %L457.3 ], [ %493, %guard_pass188.3 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags167.3 = load i16, i16* %arrayflags_ptr166, align 2
     %495 = and i16 %arrayflags167.3, 3
     %has_owner168.3 = icmp eq i16 %495, 3
     br i1 %has_owner168.3, label %array_owned169.3, label %merge_own170.3

array_owned169.3:                                 ; preds = %L459.3
     %external_owner171.3 = load {}*, {}** %223, align 8
     br label %merge_own170.3

merge_own170.3:                                   ; preds = %array_owned169.3, %L459.3
     %data_owner172.3 = phi {}* [ %220, %L459.3 ], [ %external_owner171.3, %array_owned169.3 ]
     %arrayptr174.3 = load {}**, {}*** %224, align 8
     %496 = getelementptr inbounds {}*, {}** %arrayptr174.3, i64 3
     store atomic {}* %value_phi165.3, {}** %496 release, align 8
     %497 = bitcast {}* %data_owner172.3 to i64*
     %498 = getelementptr inbounds i64, i64* %497, i64 -1
     %499 = load atomic i64, i64* %498 unordered, align 8
     %500 = and i64 %499, 3
     %501 = icmp eq i64 %500, 3
     br i1 %501, label %502, label %509

502:                                              ; preds = %merge_own170.3
     %503 = bitcast {}* %value_phi165.3 to i64*
     %504 = getelementptr inbounds i64, i64* %503, i64 -1
     %505 = load atomic i64, i64* %504 unordered, align 8
     %506 = and i64 %505, 1
     %507 = icmp eq i64 %506, 0
     br i1 %507, label %508, label %509

508:                                              ; preds = %502
     call void @ijl_gc_queue_root({}* nonnull %data_owner172.3)
     br label %509

509:                                              ; preds = %508, %502, %merge_own170.3
; ││└
    store {}* inttoptr (i64 4687803232 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4748606912 to {}*), {}** %10, align 8
    store {}* inttoptr (i64 4697463488 to {}*), {}** %176, align 8
    store {}* %220, {}** %190, align 8
    %510 = call nonnull {}* @jl_f__apply_iterate({}* null, {}** nonnull %.sub, i32 4)
    store {}* %510, {}** %56, align 16
; │└
; │┌ @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/codeview.jl:295 within `code_llvm`
    call void @"j_#code_llvm#39_5983"(i8 zeroext 0, i8 zeroext 0, i8 zeroext 1, {}* inttoptr (i64 4300292632 to {}*), {}* readonly inttoptr (i64 5679445952 to {}*), {}* nonnull readonly %510)
; └└
; ┌ @ strings/io.jl:286 within `repr`
; │┌ @ strings/io.jl:286 within `#repr#504`
; ││┌ @ strings/io.jl:107 within `sprint`
     %511 = call nonnull {}* @"j_#sprint#501_5984"(i64 signext 0, {}* readonly inttoptr (i64 4706653632 to {}*))
     store {}* %511, {}** %56, align 16
; └└└
  call void @j_println_5981({}* inttoptr (i64 6015888832 to {}*), {}* nonnull %511)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ boot.jl:245 within `Typeof`
   br i1 %switch693, label %L482, label %L485

guard_pass:                                       ; preds = %L485
   %512 = getelementptr inbounds i8, i8* @small_typeof, i64 %315
   %513 = bitcast i8* %512 to {}**
   %514 = load {}*, {}** %513, align 8
   br label %L487

guard_pass188:                                    ; preds = %L457
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ boot.jl:245 within `Typeof`
     %515 = getelementptr inbounds i8, i8* @small_typeof, i64 %229
     %516 = bitcast i8* %515 to {}**
     %517 = load {}*, {}** %516, align 8
     br label %L459

guard_pass191:                                    ; preds = %L442
; │└└
; │┌ @ boot.jl:245 within `Typeof`
    %518 = getelementptr inbounds i8, i8* @small_typeof, i64 %315
    %519 = bitcast i8* %518 to {}**
    %520 = load {}*, {}** %519, align 8
    br label %L444

guard_pass194:                                    ; preds = %L399
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ boot.jl:245 within `Typeof`
     %521 = getelementptr inbounds i8, i8* @small_typeof, i64 %203
     %522 = bitcast i8* %521 to {}**
     %523 = load {}*, {}** %522, align 8
     br label %L401

guard_pass197:                                    ; preds = %L384
; │└└
; │┌ @ boot.jl:245 within `Typeof`
    %524 = getelementptr inbounds i8, i8* @small_typeof, i64 %315
    %525 = bitcast i8* %524 to {}**
    %526 = load {}*, {}** %525, align 8
    br label %L386

post_box_union:                                   ; preds = %L257
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4759728896 to {}*), {}* inttoptr (i64 4708703712 to {}*))
     unreachable

pass206:                                          ; preds = %post_is242, %L271
     %unionalloca.sroa.0.0.ph = phi i8 [ %150, %L271 ], [ %534, %post_is242 ]
     %.not611 = icmp eq i8 %unionalloca.sroa.0.0.ph, 0
     br i1 %.not611, label %L285, label %L307

post_box_union223:                                ; preds = %L285
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4759728896 to {}*), {}* inttoptr (i64 4708703712 to {}*))
     unreachable

pass228:                                          ; preds = %post_is, %L289
     %unionalloca217.sroa.0.0.ph = phi i8 [ %156, %L289 ], [ %530, %post_is ]
     %.not616 = icmp eq i8 %unionalloca217.sroa.0.0.ph, 0
     br i1 %.not616, label %L303, label %L307

is:                                               ; preds = %L285
; │││┌ @ Base.jl:159 within `==`
      %527 = bitcast {}* %151 to i32*
      %unbox234 = load i32, i32* %527, align 4
      %528 = icmp eq i32 %unbox234, 0
      br label %post_is

post_is:                                          ; preds = %is, %L285
      %529 = phi i1 [ %528, %is ], [ false, %L285 ]
      %530 = zext i1 %529 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass228

is241:                                            ; preds = %L257
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
; │││┌ @ Base.jl:159 within `==`
      %531 = bitcast {}* %145 to i32*
      %unbox243 = load i32, i32* %531, align 4
      %532 = icmp eq i32 %unbox243, 0
      br label %post_is242

post_is242:                                       ; preds = %is241, %L257
      %533 = phi i1 [ %532, %is241 ], [ false, %L257 ]
      %534 = zext i1 %533 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass206

post_box_union258:                                ; preds = %L136
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4759728896 to {}*), {}* inttoptr (i64 4708703712 to {}*))
     unreachable

pass263:                                          ; preds = %post_is301, %L150
     %unionalloca252.sroa.0.0.ph = phi i8 [ %95, %L150 ], [ %542, %post_is301 ]
     %.not618 = icmp eq i8 %unionalloca252.sroa.0.0.ph, 0
     br i1 %.not618, label %L164, label %L186

post_box_union280:                                ; preds = %L164
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4759728896 to {}*), {}* inttoptr (i64 4708703712 to {}*))
     unreachable

pass285:                                          ; preds = %post_is292, %L168
     %unionalloca274.sroa.0.0.ph = phi i8 [ %101, %L168 ], [ %538, %post_is292 ]
     %.not623 = icmp eq i8 %unionalloca274.sroa.0.0.ph, 0
     br i1 %.not623, label %L182, label %L186

is291:                                            ; preds = %L164
; │││┌ @ Base.jl:159 within `==`
      %535 = bitcast {}* %96 to i32*
      %unbox293 = load i32, i32* %535, align 4
      %536 = icmp eq i32 %unbox293, 0
      br label %post_is292

post_is292:                                       ; preds = %is291, %L164
      %537 = phi i1 [ %536, %is291 ], [ false, %L164 ]
      %538 = zext i1 %537 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass285

is300:                                            ; preds = %L136
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
; │││┌ @ Base.jl:159 within `==`
      %539 = bitcast {}* %90 to i32*
      %unbox302 = load i32, i32* %539, align 4
      %540 = icmp eq i32 %unbox302, 0
      br label %post_is301

post_is301:                                       ; preds = %is300, %L136
      %541 = phi i1 [ %540, %is300 ], [ false, %L136 ]
      %542 = zext i1 %541 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass263

post_box_union319:                                ; preds = %L11
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4759728896 to {}*), {}* inttoptr (i64 4708703712 to {}*))
     unreachable

pass324:                                          ; preds = %post_is362, %L25
     %unionalloca313.sroa.0.0.ph = phi i8 [ %32, %L25 ], [ %550, %post_is362 ]
     %.not625 = icmp eq i8 %unionalloca313.sroa.0.0.ph, 0
     br i1 %.not625, label %L39, label %L61

post_box_union341:                                ; preds = %L39
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4759728896 to {}*), {}* inttoptr (i64 4708703712 to {}*))
     unreachable

pass346:                                          ; preds = %post_is353, %L43
     %unionalloca335.sroa.0.0.ph = phi i8 [ %38, %L43 ], [ %546, %post_is353 ]
     %.not630 = icmp eq i8 %unionalloca335.sroa.0.0.ph, 0
     br i1 %.not630, label %L57, label %L61

is352:                                            ; preds = %L39
; │││┌ @ Base.jl:159 within `==`
      %543 = bitcast {}* %33 to i32*
      %unbox354 = load i32, i32* %543, align 4
      %544 = icmp eq i32 %unbox354, 0
      br label %post_is353

post_is353:                                       ; preds = %is352, %L39
      %545 = phi i1 [ %544, %is352 ], [ false, %L39 ]
      %546 = zext i1 %545 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass346

is361:                                            ; preds = %L11
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
; │││┌ @ Base.jl:159 within `==`
      %547 = bitcast {}* %27 to i32*
      %unbox363 = load i32, i32* %547, align 4
      %548 = icmp eq i32 %unbox363, 0
      br label %post_is362

post_is362:                                       ; preds = %is361, %L11
      %549 = phi i1 [ %548, %is361 ], [ false, %L11 ]
      %550 = zext i1 %549 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass324

guard_pass411:                                    ; preds = %L238, %L229.guard_pass411_crit_edge
     %.pre-phi779 = phi {}** [ %.phi.trans.insert772, %L229.guard_pass411_crit_edge ], [ %128, %L238 ]
     %unbox413.unpack = phi {}* [ %unbox452.unpack, %L238 ], [ %unbox413.unpack.pre, %L229.guard_pass411_crit_edge ]
     %value_phi62 = phi {}* [ %box439, %L238 ], [ %115, %L229.guard_pass411_crit_edge ]
     br label %L525

guard_pass418:                                    ; preds = %merge_own84._crit_edge.guard_pass418_crit_edge, %L521
     %.pre-phi778 = phi {}** [ %.phi.trans.insert774, %merge_own84._crit_edge.guard_pass418_crit_edge ], [ %246, %L521 ]
     %unbox420.unpack = phi {}* [ %unbox475.unpack, %L521 ], [ %unbox420.unpack.pre, %merge_own84._crit_edge.guard_pass418_crit_edge ]
     %value_phi97 = phi {}* [ %box462, %L521 ], [ %302, %merge_own84._crit_edge.guard_pass418_crit_edge ]
     br label %L525
; └└└
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
y = Core.Box(#undef)
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1272 within `make_zero`
define double @julia_make_zero_6021({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
  ret double 0.000000e+00
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
("end", y) = ("end", Core.Box(0.0))
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1272 within `make_zero`
define double @julia_make_zero_6033({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
  ret double 0.000000e+00
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Vector{Int64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Vector{Int64}, %15)::Vector{Int64}
13 ┄ %26 = φ (#11 => %15, #12 => %25)::Any
│    %27 = π (%26, Vector{Int64})
└───       return %27
14 ─ %29 = Base.arraysize(prev, 1)::Int64
│    %30 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Int64}, svec(Any, Int64), 0, :(:ccall), Vector{Int64}, :(%29), :(%29)))::Vector{Int64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %30::Any, prev::Any)::Any
│    %32 = Base.arraysize(prev, 1)::Int64
│    %33 = Base.slt_int(%32, 0)::Bool
│    %34 = Core.ifelse(%33, 0, %32)::Int64
│    %35 = Base.slt_int(%34, 1)::Bool
└───       goto #16 if not %35
15 ─       goto #17
16 ─       goto #17
17 ┄ %39 = φ (#15 => true, #16 => false)::Bool
│    %40 = φ (#16 => 1)::Int64
│    %41 = φ (#16 => 1)::Int64
│    %42 = Base.not_int(%39)::Bool
└───       goto #30 if not %42
18 ┄ %44 = φ (#17 => %40, #29 => %75)::Int64
│    %45 = φ (#17 => %41, #29 => %76)::Int64
└───       goto #22 if not true
19 ─ %47 = Base.arraysize(prev, 1)::Int64
│    %48 = Base.slt_int(%47, 0)::Bool
│    %49 = Core.ifelse(%48, 0, %47)::Int64
│    %50 = Base.sub_int(%44, 1)::Int64
│    %51 = Base.bitcast(UInt64, %50)::UInt64
│    %52 = Base.bitcast(UInt64, %49)::UInt64
│    %53 = Base.ult_int(%51, %52)::Bool
└───       goto #21 if not %53
20 ─       goto #22
21 ─       goto #23
22 ┄ %57 = Base.sub_int(%44, 1)::Int64
│    %58 = Base.mul_int(%57, 1)::Int64
│    %59 = Base.add_int(1, %58)::Int64
│    %60 = Base.bitcast(UInt64, %59)::UInt64
│    %61 = Base.sub_int(%60, 0x0000000000000001)::UInt64
│    %62 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%61), :(%61)))::Int32
│    %63 = Core.sext_int(Core.Int64, %62)::Int64
│    %64 = (%63 === 1)::Bool
└───       goto #23
23 ┄ %66 = φ (#21 => false, #22 => %64)::Bool
└───       goto #25 if not %66
24 ─ %68 = Base.arrayref(true, prev, %44)::Int64
└───       Base.arrayset(false, %30, %68, %44)::Vector{Int64}
25 ┄ %70 = (%45 === %34)::Bool
└───       goto #27 if not %70
26 ─       goto #28
27 ─ %73 = Base.add_int(%45, 1)::Int64
└───       goto #28
28 ┄ %75 = φ (#27 => %73)::Int64
│    %76 = φ (#27 => %73)::Int64
│    %77 = φ (#26 => true, #27 => false)::Bool
│    %78 = Base.not_int(%77)::Bool
└───       goto #30 if not %78
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %30
) => Vector{Int64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_6035({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe32 = alloca [3 x {}*], align 16
  %gcframe32.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe32, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe32 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe32, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe32.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe32, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L29, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not24 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not24, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4688010064 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4688010064 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  br label %common.ret

common.ret:                                       ; preds = %L70, %L29, %L25, %L22
  %common.ret.op = phi {}* [ %23, %L25 ], [ %15, %L22 ], [ %27, %L29 ], [ %27, %L70 ]
  %24 = load {}*, {}** %5, align 8
  %25 = bitcast {}*** %2 to {}**
  store {}* %24, {}** %25, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L29:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:191 within `size`
   %26 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
   %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %26, i64 0, i32 1
   %arraylen = load i64, i64* %arraylen_ptr, align 8
; └
; ┌ @ boot.jl:484 within `Array` @ boot.jl:475
   %27 = call nonnull {}* inttoptr (i64 4304360888 to {}* ({}*, i64)*)({}* inttoptr (i64 4688010064 to {}*), i64 %arraylen)
   store {}* %27, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %28 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %27, {}** %28, align 8
  %29 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %29, align 8
  %30 = call nonnull {}* @"j1_setindex!_6036"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:318 within `eachindex`
; │┌ @ abstractarray.jl:134 within `axes1`
; ││┌ @ abstractarray.jl:98 within `axes`
; │││┌ @ array.jl:191 within `size`
      %arraylen5 = load i64, i64* %arraylen_ptr, align 8
; └└└└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not25.not = icmp eq i64 %arraylen5, 0
; └└└└
  br i1 %.not25.not, label %common.ret, label %L44.preheader

L44.preheader:                                    ; preds = %L29
  %31 = bitcast {}* %11 to i64**
  %arrayptr27 = load i64*, i64** %31, align 8
  %32 = bitcast {}* %27 to i64**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L44

L44:                                              ; preds = %L70, %L44.preheader
  %value_phi9 = phi i64 [ %34, %L70 ], [ 1, %L44.preheader ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %33 = add nsw i64 %value_phi9, -1
; │││└
; │││┌ @ int.jl:513 within `<`
      %.not26.not = icmp ult i64 %33, %arraylen5
; └└└└
  br i1 %.not26.not, label %idxend, label %L70

L70:                                              ; preds = %idxend, %L44
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not29.not = icmp eq i64 %value_phi9, %arraylen5
; │└
   %34 = add nuw nsw i64 %value_phi9, 1
; └
  br i1 %.not29.not, label %common.ret, label %L44

idxend:                                           ; preds = %L44
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
; ┌ @ essentials.jl:13 within `getindex`
   %35 = getelementptr inbounds i64, i64* %arrayptr27, i64 %33
   %arrayref = load i64, i64* %35, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr1828 = load i64*, i64** %32, align 8
   %36 = getelementptr inbounds i64, i64* %arrayptr1828, i64 %33
   store i64 %arrayref, i64* %36, align 8
   br label %L70
; └
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_6038({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6039"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_6040({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6041"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_6042({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6043"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_6044({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6045"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_6046({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6047"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_6048({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6049"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_6050({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6051"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_6052({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6053"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1272 within `make_zero`
define double @julia_make_zero_6054({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
  ret double 0.000000e+00
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_6056({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6057"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_6058({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6059"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_6060({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6061"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = ┌ Warning: Using fallback BLAS replacements, performance may be degraded
└ @ Enzyme.Compiler ~/.julia/packages/GPUCompiler/U36Ed/src/utils.jl:59
warning: didn't implement memmove, using memcpy as fallback which can result in errors
CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_6062({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6063"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
("end", y) = ("end", Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.0
  x: Array{Float64}((6,)) [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
  u: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  n: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  k: Float64 0.0
  r: Float64 0.0
  q: q_kf (function of type Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
  J: Float64 0.0
  data_steps: Array{Int64}((21,)) [3000, 3200, 3400, 3600, 3800, 4000, 4200, 4400, 4600, 4800  …  5200, 5400, 5600, 5800, 6000, 6200, 6400, 6600, 6800, 7000]
  data: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  states: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  energy: Array{Float64}((3, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  A: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  B: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Gamma: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  E: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q_inv: Float64 0.0
  R: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  R_inv: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  K: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Kc: Array{Float64}((3, 3)) [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]
)
dparams_adjoint2 = Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.0
  x: Array{Float64}((6,)) [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
  u: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  n: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  k: Float64 0.0
  r: Float64 0.0
  q: q_kf (function of type Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
  J: Float64 0.0
  data_steps: Array{Int64}((21,)) [3000, 3200, 3400, 3600, 3800, 4000, 4200, 4400, 4600, 4800  …  5200, 5400, 5600, 5800, 6000, 6200, 6400, 6600, 6800, 7000]
  data: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  states: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  energy: Array{Float64}((3, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  A: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  B: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Gamma: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  E: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q_inv: Float64 0.0
  R: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  R_inv: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  K: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Kc: Array{Float64}((3, 3)) [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]

total_cost = 5.400808714556297e9
total_cost = 5.3679730944700055e7
total_cost = 537540.1786888904
total_cost = 5589.7912929806125
total_cost = 181.65068064529535
total_cost = 118.66958251069924
total_cost = 117.1497662733329
total_cost = 117.04556752939268
total_cost = 117.0356255118871
total_cost = 117.03463605588048
diffs = Any[5.400808597521771e10, 5.367961391017387e9, 5.374231441627052e8, 5.472756766795406e7, 6.461615446008886e6, 1.635056325492755e6, 1.1524008812641285e6, 1.104134418619651e6, 1.099326680616741e6, 1.098706739952604e6]
dparams_adjoint2.k = 1.0987723610527872e6
params_adjoint2 = Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.001
  x: Array{Float64}((6,)) [1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
  u: Array{Float64}((6, 10001)) [0.052395543001624204 -0.01847574879001025 … 0.18721419070430684 -0.06810507386775214; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  n: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  k: Float64 20.0
  r: Float64 0.5
  q: q_kf (function of type Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
  J: Float64 0.0
  data_steps: Array{Int64}((21,)) [3000, 3200, 3400, 3600, 3800, 4000, 4200, 4400, 4600, 4800  …  5200, 5400, 5600, 5800, 6000, 6200, 6400, 6600, 6800, 7000]
  data: Array{Float64}((6, 10001)) [0.9999446409092436 1.1525794268071203 … 0.6924427848624592 0.8931613151804149; -3.7567838697127794e-5 -3.917733514944822e-5 … 0.7427559633742338 0.7281661041552325; … ; -0.0001205556652503151 0.019972820276045137 … -14.555660145344751 -14.543768666792007; -0.0001567879022888281 6.826700639017644e-5 … 9.517793648715898 9.457060222258452]
  states: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  energy: Array{Float64}((3, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  A: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.001 0.0; … ; 0.02 -0.06 … 0.9995 0.0; 0.0 0.02 … 0.0 0.9995]
  B: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Gamma: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  E: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.0 0.0; … ; 0.0 0.0 … 1.0 0.0; 0.0 0.0 … 0.0 1.0]
  Q: Array{Float64}((6, 6)) [0.001643631836583314 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q_inv: Float64 0.0
  R: Array{Float64}((6, 6)) [9.922366783915163e-9 0.0 … 0.0 0.0; 0.0 9.922366783915163e-9 … 0.0 0.0; … ; 0.0 0.0 … 9.922366783915163e-9 0.0; 0.0 0.0 … 0.0 9.922366783915163e-9]
  R_inv: Array{Float64}((6, 6)) [1.007824062320563e8 0.0 … 0.0 0.0; 0.0 1.007824062320563e8 … 0.0 0.0; … ; 0.0 0.0 … 1.007824062320563e8 0.0; 0.0 0.0 … 0.0 1.007824062320563e8]
  K: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Kc: Array{Float64}((3, 3)) [-40.0 20.0 0.0; 20.0 -60.0 20.0; 0.0 20.0 -40.0]

y = Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 0
  t: Int64 0
  dt: Float64 0.0
  x: #undef
  u: #undef
  n: #undef
  k: Float64 0.0
  r: Float64 0.0
  q: #undef
  J: Float64 0.0
  data_steps: #undef
  data: #undef
  states: #undef
  energy: #undef
  A: #undef
  B: #undef
  Gamma: #undef
  E: #undef
  Q: #undef
  Q_inv: Float64 0.0
  R: #undef
  R_inv: #undef
  K: #undef
  Kc: #undef

#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
│       nothing::Nothing
└──     return prev
) => Int64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1218 within `make_zero`
define i64 @julia_make_zero_7286({}* noundef nonnull align 8 dereferenceable(24) %0, i64 signext %1) #0 {
top:
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220 within `make_zero`
  ret i64 %1
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
│       nothing::Nothing
└──     return prev
) => Int64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1218 within `make_zero`
define i64 @julia_make_zero_7288({}* noundef nonnull align 8 dereferenceable(24) %0, i64 signext %1) #0 {
top:
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220 within `make_zero`
  ret i64 %1
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
(i, xi, Core.Typeof(xi), seen) = (3, 0.001, Float64, IdDict{Any, Any}(Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.001
  x: Array{Float64}((6,)) [1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
  u: Array{Float64}((6, 10001)) [0.052395543001624204 -0.01847574879001025 … 0.18721419070430684 -0.06810507386775214; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  n: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  k: Float64 20.0
  r: Float64 0.5
  q: q_kf (function of type Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
  J: Float64 0.0
  data_steps: Array{Int64}((21,)) [3000, 3200, 3400, 3600, 3800, 4000, 4200, 4400, 4600, 4800  …  5200, 5400, 5600, 5800, 6000, 6200, 6400, 6600, 6800, 7000]
  data: Array{Float64}((6, 10001)) [0.9999446409092436 1.1525794268071203 … 0.6924427848624592 0.8931613151804149; -3.7567838697127794e-5 -3.917733514944822e-5 … 0.7427559633742338 0.7281661041552325; … ; -0.0001205556652503151 0.019972820276045137 … -14.555660145344751 -14.543768666792007; -0.0001567879022888281 6.826700639017644e-5 … 9.517793648715898 9.457060222258452]
  states: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  energy: Array{Float64}((3, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  A: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.001 0.0; … ; 0.02 -0.06 … 0.9995 0.0; 0.0 0.02 … 0.0 0.9995]
  B: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Gamma: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  E: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.0 0.0; … ; 0.0 0.0 … 1.0 0.0; 0.0 0.0 … 0.0 1.0]
  Q: Array{Float64}((6, 6)) [0.001643631836583314 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q_inv: Float64 0.0
  R: Array{Float64}((6, 6)) [9.922366783915163e-9 0.0 … 0.0 0.0; 0.0 9.922366783915163e-9 … 0.0 0.0; … ; 0.0 0.0 … 9.922366783915163e-9 0.0; 0.0 0.0 … 0.0 9.922366783915163e-9]
  R_inv: Array{Float64}((6, 6)) [1.007824062320563e8 0.0 … 0.0 0.0; 0.0 1.007824062320563e8 … 0.0 0.0; … ; 0.0 0.0 … 1.007824062320563e8 0.0; 0.0 0.0 … 0.0 1.007824062320563e8]
  K: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Kc: Array{Float64}((3, 3)) [-40.0 20.0 0.0; 20.0 -60.0 20.0; 0.0 20.0 -40.0]
 => Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.0
  x: #undef
  u: #undef
  n: #undef
  k: Float64 0.0
  r: Float64 0.0
  q: #undef
  J: Float64 0.0
  data_steps: #undef
  data: #undef
  states: #undef
  energy: #undef
  A: #undef
  B: #undef
  Gamma: #undef
  E: #undef
  Q: #undef
  Q_inv: Float64 0.0
  R: #undef
  R_inv: #undef
  K: #undef
  Kc: #undef
))
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1272 within `make_zero`
define double @julia_make_zero_7290({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
  ret double 0xC19321B1E3AE3D7A
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
("res", i, xi, Core.Typeof(xi), seen) = ("res", 3, -8.024383292015639e7, Float64, IdDict{Any, Any}(Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.001
  x: Array{Float64}((6,)) [1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
  u: Array{Float64}((6, 10001)) [0.052395543001624204 -0.01847574879001025 … 0.18721419070430684 -0.06810507386775214; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  n: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  k: Float64 20.0
  r: Float64 0.5
  q: q_kf (function of type Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
  J: Float64 0.0
  data_steps: Array{Int64}((21,)) [3000, 3200, 3400, 3600, 3800, 4000, 4200, 4400, 4600, 4800  …  5200, 5400, 5600, 5800, 6000, 6200, 6400, 6600, 6800, 7000]
  data: Array{Float64}((6, 10001)) [0.9999446409092436 1.1525794268071203 … 0.6924427848624592 0.8931613151804149; -3.7567838697127794e-5 -3.917733514944822e-5 … 0.7427559633742338 0.7281661041552325; … ; -0.0001205556652503151 0.019972820276045137 … -14.555660145344751 -14.543768666792007; -0.0001567879022888281 6.826700639017644e-5 … 9.517793648715898 9.457060222258452]
  states: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  energy: Array{Float64}((3, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  A: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.001 0.0; … ; 0.02 -0.06 … 0.9995 0.0; 0.0 0.02 … 0.0 0.9995]
  B: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Gamma: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  E: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.0 0.0; … ; 0.0 0.0 … 1.0 0.0; 0.0 0.0 … 0.0 1.0]
  Q: Array{Float64}((6, 6)) [0.001643631836583314 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q_inv: Float64 0.0
  R: Array{Float64}((6, 6)) [9.922366783915163e-9 0.0 … 0.0 0.0; 0.0 9.922366783915163e-9 … 0.0 0.0; … ; 0.0 0.0 … 9.922366783915163e-9 0.0; 0.0 0.0 … 0.0 9.922366783915163e-9]
  R_inv: Array{Float64}((6, 6)) [1.007824062320563e8 0.0 … 0.0 0.0; 0.0 1.007824062320563e8 … 0.0 0.0; … ; 0.0 0.0 … 1.007824062320563e8 0.0; 0.0 0.0 … 0.0 1.007824062320563e8]
  K: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Kc: Array{Float64}((3, 3)) [-40.0 20.0 0.0; 20.0 -60.0 20.0; 0.0 20.0 -40.0]
 => Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.0
  x: #undef
  u: #undef
  n: #undef
  k: Float64 0.0
  r: Float64 0.0
  q: #undef
  J: Float64 0.0
  data_steps: #undef
  data: #undef
  states: #undef
  energy: #undef
  A: #undef
  B: #undef
  Gamma: #undef
  E: #undef
  Q: #undef
  Q_inv: Float64 0.0
  R: #undef
  R_inv: #undef
  K: #undef
  Kc: #undef
))
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Vector{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Vector{Float64}, %15)::Vector{Float64}
13 ┄ %26 = φ (#11 => %15, #12 => %25)::Any
│    %27 = π (%26, Vector{Float64})
└───       return %27
14 ─ %29 = Base.arraysize(prev, 1)::Int64
│    %30 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Float64}, svec(Any, Int64), 0, :(:ccall), Vector{Float64}, :(%29), :(%29)))::Vector{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %30::Any, prev::Any)::Any
│    %32 = Base.arraysize(prev, 1)::Int64
│    %33 = Base.slt_int(%32, 0)::Bool
│    %34 = Core.ifelse(%33, 0, %32)::Int64
│    %35 = Base.slt_int(%34, 1)::Bool
└───       goto #16 if not %35
15 ─       goto #17
16 ─       goto #17
17 ┄ %39 = φ (#15 => true, #16 => false)::Bool
│    %40 = φ (#16 => 1)::Int64
│    %41 = φ (#16 => 1)::Int64
│    %42 = Base.not_int(%39)::Bool
└───       goto #30 if not %42
18 ┄ %44 = φ (#17 => %40, #29 => %75)::Int64
│    %45 = φ (#17 => %41, #29 => %76)::Int64
└───       goto #22 if not true
19 ─ %47 = Base.arraysize(prev, 1)::Int64
│    %48 = Base.slt_int(%47, 0)::Bool
│    %49 = Core.ifelse(%48, 0, %47)::Int64
│    %50 = Base.sub_int(%44, 1)::Int64
│    %51 = Base.bitcast(UInt64, %50)::UInt64
│    %52 = Base.bitcast(UInt64, %49)::UInt64
│    %53 = Base.ult_int(%51, %52)::Bool
└───       goto #21 if not %53
20 ─       goto #22
21 ─       goto #23
22 ┄ %57 = Base.sub_int(%44, 1)::Int64
│    %58 = Base.mul_int(%57, 1)::Int64
│    %59 = Base.add_int(1, %58)::Int64
│    %60 = Base.bitcast(UInt64, %59)::UInt64
│    %61 = Base.sub_int(%60, 0x0000000000000001)::UInt64
│    %62 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%61), :(%61)))::Int32
│    %63 = Core.sext_int(Core.Int64, %62)::Int64
│    %64 = (%63 === 1)::Bool
└───       goto #23
23 ┄ %66 = φ (#21 => false, #22 => %64)::Bool
└───       goto #25 if not %66
24 ─       Base.arrayref(true, prev, %44)::Float64
└───       Base.arrayset(false, %30, -8.024383292015639e7, %44)::Vector{Float64}
25 ┄ %70 = (%45 === %34)::Bool
└───       goto #27 if not %70
26 ─       goto #28
27 ─ %73 = Base.add_int(%45, 1)::Int64
└───       goto #28
28 ┄ %75 = φ (#27 => %73)::Int64
│    %76 = φ (#27 => %73)::Int64
│    %77 = φ (#26 => true, #27 => false)::Bool
│    %78 = Base.not_int(%77)::Bool
└───       goto #30 if not %78
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %30
) => Vector{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_7292({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe31 = alloca [3 x {}*], align 16
  %gcframe31.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe31, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe31 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe31, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe31.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe31, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L29, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not24 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not24, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4687794448 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4687794448 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  br label %common.ret

common.ret:                                       ; preds = %L70, %L29, %L25, %L22
  %common.ret.op = phi {}* [ %23, %L25 ], [ %15, %L22 ], [ %27, %L29 ], [ %27, %L70 ]
  %24 = load {}*, {}** %5, align 8
  %25 = bitcast {}*** %2 to {}**
  store {}* %24, {}** %25, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L29:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:191 within `size`
   %26 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
   %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %26, i64 0, i32 1
   %arraylen = load i64, i64* %arraylen_ptr, align 8
; └
; ┌ @ boot.jl:484 within `Array` @ boot.jl:475
   %27 = call nonnull {}* inttoptr (i64 4304360888 to {}* ({}*, i64)*)({}* inttoptr (i64 4687794448 to {}*), i64 %arraylen)
   store {}* %27, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %28 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %27, {}** %28, align 8
  %29 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %29, align 8
  %30 = call nonnull {}* @"j1_setindex!_7293"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:318 within `eachindex`
; │┌ @ abstractarray.jl:134 within `axes1`
; ││┌ @ abstractarray.jl:98 within `axes`
; │││┌ @ array.jl:191 within `size`
      %arraylen5 = load i64, i64* %arraylen_ptr, align 8
; └└└└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not25.not = icmp eq i64 %arraylen5, 0
; └└└└
  br i1 %.not25.not, label %common.ret, label %L44.preheader

L44.preheader:                                    ; preds = %L29
  %31 = bitcast {}* %27 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L44

L44:                                              ; preds = %L70, %L44.preheader
  %value_phi9 = phi i64 [ %33, %L70 ], [ 1, %L44.preheader ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %32 = add nsw i64 %value_phi9, -1
; │││└
; │││┌ @ int.jl:513 within `<`
      %.not26.not = icmp ult i64 %32, %arraylen5
; └└└└
  br i1 %.not26.not, label %idxend, label %L70

L70:                                              ; preds = %idxend, %L44
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not28.not = icmp eq i64 %value_phi9, %arraylen5
; │└
   %33 = add nuw nsw i64 %value_phi9, 1
; └
  br i1 %.not28.not, label %common.ret, label %L44

idxend:                                           ; preds = %L44
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr1827 = load double*, double** %31, align 8
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr1827, i64 %32
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
   br label %L70
; └
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_7294({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7295"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_7296({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7297"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1272 within `make_zero`
define double @julia_make_zero_7298({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
  ret double 0xC19321B1E3AE3D7A
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1272 within `make_zero`
define double @julia_make_zero_7300({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
  ret double 0xC19321B1E3AE3D7A
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─── %1   = Enzyme.Compiler.nothing::Nothing
└────        goto #3 if not true
2 ───        goto #4
3 ───        $(Expr(:throw_undef_if_not, :seen, false))::Any
4 ┄── %5   = ($(QuoteNode(Val{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}())) ∈ ())::Any
└────        goto #6 if not %5
5 ───        goto #39
6 ───        goto #8 if not true
7 ───        goto #9
8 ───        $(Expr(:throw_undef_if_not, :seen, false))::Any
9 ┄── %11  = Core._apply_iterate(Base.iterate, Core.tuple, (Val{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}(),), ())::Tuple{Val{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}, Vararg{Any}}
└────        goto #11 if not true
10 ──        goto #12
11 ──        $(Expr(:throw_undef_if_not, :seen, false))::Any
12 ┄─ %15  = Core.apply_type(Enzyme.Compiler.Merger, %11, Nothing, false, false)::Type{Enzyme.Compiler.Merger{_A, Nothing, false, false}} where _A
│     %16  = %new(%15, %1)::Enzyme.Compiler.Merger{_A, Nothing, false, false} where _A
│     %17  = (%16)(1)::Val
│     %18  = Enzyme.Compiler.forcefold::typeof(Enzyme.Compiler.forcefold)
│     %19  = (Core._compute_sparams)(forcefold(::Val{ty}, ::Val{sty}, C::Vararg{Any, N}) where {ty, sty, N} @ Enzyme.Compiler ~/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330, %18, $(QuoteNode(Val{Enzyme.Compiler.AnyState}())), %17)::Core.SimpleVector
│     %20  = (Core._svec_ref)(%19, 2)::Any
│     %21  = Enzyme.Compiler.:(==)::typeof(==)
│     %22  = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %23  = (isa)(%20, WeakRef)::Bool
└────        goto #14 if not %23
13 ── %25  = π (%20, WeakRef)
│     %26  = invoke %21(%25::WeakRef, %22::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #19
14 ── %28  = (isa)(%20, Missing)::Bool
└────        goto #16 if not %28
15 ──        goto #19
16 ──        goto #18 if not true
17 ── %32  = (%20 === %22)::Bool
└────        goto #19
18 ──        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
19 ┄─ %36  = φ (#13 => %26, #15 => $(QuoteNode(missing)), #17 => %32)::Union{Missing, Bool}
└────        goto #21 if not %36
20 ──        goto #31
21 ── %39  = (Core._svec_ref)(%19, 2)::Any
│     %40  = Enzyme.Compiler.:(==)::typeof(==)
│     %41  = (isa)(%39, WeakRef)::Bool
└────        goto #23 if not %41
22 ── %43  = π (%39, WeakRef)
│     %44  = invoke %40(%43::WeakRef, $(QuoteNode(Enzyme.Compiler.AnyState))::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #28
23 ── %46  = (isa)(%39, Missing)::Bool
└────        goto #25 if not %46
24 ──        goto #28
25 ──        goto #27 if not true
26 ── %50  = (%39 === $(QuoteNode(Enzyme.Compiler.AnyState)))::Bool
└────        goto #28
27 ──        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
28 ┄─ %54  = φ (#22 => %44, #24 => $(QuoteNode(missing)), #26 => %50)::Union{Missing, Bool}
└────        goto #30 if not %54
29 ──        goto #31
30 ── %57  = (Core._svec_ref)(%19, 2)::Any
│            Core.apply_type(Base.Val, %57)::Type{Val{_A}} where _A
└────        goto #32
31 ┄─        goto #32
32 ┄─ %61  = φ (#30 => %57, #31 => $(QuoteNode(Enzyme.Compiler.AnyState)))::Any
│     %62  = (%61 isa Enzyme.Compiler.ActivityState)::Bool
└────        goto #34 if not %62
33 ──        goto #38
34 ── %65  = (isa)(%61, Enzyme.Compiler.ActivityState)::Bool
└────        goto #36 if not %65
35 ── %67  = π (%61, Enzyme.Compiler.ActivityState)
└────        goto #37
36 ── %69  = Base.convert(Enzyme.Compiler.ActivityState, %61)::Enzyme.Compiler.ActivityState
└────        goto #37
37 ┄─ %71  = φ (#35 => %67, #36 => %69)::Enzyme.Compiler.ActivityState
38 ┄─ %72  = φ (#33 => %61, #37 => %71)::Any
│     %73  = π (%72, Enzyme.Compiler.ActivityState)
└────        goto #39
39 ┄─ %75  = φ (#5 => Enzyme.Compiler.MixedState, #38 => %73)::Enzyme.Compiler.ActivityState
└────        goto #40
40 ──        goto #41
41 ── %78  = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %79  = (%75 === %78)::Bool
└────        goto #42
42 ──        goto #44 if not %79
43 ──        nothing::Nothing
│            nothing::Nothing
└────        return prev
44 ── %85  = Base.secret_table_token::Symbol
│     %86  = Base.getfield(seen, :ht)::Vector{Any}
│     %87  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%86), Core.Argument(4), :(%85)))::Any
│     %88  = (%87 === %85)::Bool
└────        goto #46 if not %88
45 ──        goto #47
46 ──        goto #47
47 ┄─ %92  = φ (#45 => %85, #46 => %87)::Any
│     %93  = (%92 === Base.secret_table_token)::Bool
│     %94  = Core.Intrinsics.not_int(%93)::Bool
└────        goto #48
48 ──        goto #49
49 ──        goto #60 if not %94
50 ── %98  = Base.getfield(seen, :ht)::Vector{Any}
│     %99  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%98), Core.Argument(4), :(Base.secret_table_token)))::Any
│     %100 = (%99 === Base.secret_table_token)::Bool
└────        goto #52 if not %100
51 ── %102 = Base.KeyError(prev)::Any
│            Base.throw(%102)::Union{}
└────        unreachable
52 ──        goto #53
53 ── %106 = (%99 isa Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})::Bool
└────        goto #55 if not %106
54 ──        goto #59
55 ── %109 = (isa)(%99, Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})::Bool
└────        goto #57 if not %109
56 ── %111 = π (%99, Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
└────        goto #58
57 ── %113 = Base.convert(Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}, %99)::Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}
└────        goto #58
58 ┄─ %115 = φ (#56 => %111, #57 => %113)::Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}
59 ┄─ %116 = φ (#54 => %99, #58 => %115)::Any
│     %117 = π (%116, Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
└────        return %117
60 ──        nothing::Nothing
│            nothing::Nothing
│            nothing::Nothing
│            nothing::Nothing
│     %123 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Any}, svec(Any, Int64), 0, :(:ccall), Vector{Any}, 1, 1))::Vector{Any}
└────        goto #240 if not true
61 ── %125 = Enzyme.Compiler.getfield(prev, 1)::Main.ThreeMassSpring.var"#q_true#35"
│     %126 = Enzyme.Compiler.nothing::Nothing
└────        goto #63 if not true
62 ──        goto #64
63 ──        $(Expr(:throw_undef_if_not, :seen, false))::Any
64 ┄─ %130 = ($(QuoteNode(Val{Main.ThreeMassSpring.var"#q_true#35"}())) ∈ ())::Any
└────        goto #66 if not %130
65 ──        goto #99
66 ──        goto #68 if not true
67 ──        goto #69
68 ──        $(Expr(:throw_undef_if_not, :seen, false))::Any
69 ┄─ %136 = Core._apply_iterate(Base.iterate, Core.tuple, (Val{Main.ThreeMassSpring.var"#q_true#35"}(),), ())::Tuple{Val{Main.ThreeMassSpring.var"#q_true#35"}, Vararg{Any}}
└────        goto #71 if not true
70 ──        goto #72
71 ──        $(Expr(:throw_undef_if_not, :seen, false))::Any
72 ┄─ %140 = Core.apply_type(Enzyme.Compiler.Merger, %136, Nothing, false, false)::Type{Enzyme.Compiler.Merger{_A, Nothing, false, false}} where _A
│     %141 = %new(%140, %126)::Enzyme.Compiler.Merger{_A, Nothing, false, false} where _A
│     %142 = (%141)(1)::Val
│     %143 = Enzyme.Compiler.forcefold::typeof(Enzyme.Compiler.forcefold)
│     %144 = (Core._compute_sparams)(forcefold(::Val{ty}, ::Val{sty}, C::Vararg{Any, N}) where {ty, sty, N} @ Enzyme.Compiler ~/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330, %143, $(QuoteNode(Val{Enzyme.Compiler.AnyState}())), %142)::Core.SimpleVector
│     %145 = (Core._svec_ref)(%144, 2)::Any
│     %146 = Enzyme.Compiler.:(==)::typeof(==)
│     %147 = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %148 = (isa)(%145, WeakRef)::Bool
└────        goto #74 if not %148
73 ── %150 = π (%145, WeakRef)
│     %151 = invoke %146(%150::WeakRef, %147::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #79
74 ── %153 = (isa)(%145, Missing)::Bool
└────        goto #76 if not %153
75 ──        goto #79
76 ──        goto #78 if not true
77 ── %157 = (%145 === %147)::Bool
└────        goto #79
78 ──        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
79 ┄─ %161 = φ (#73 => %151, #75 => $(QuoteNode(missing)), #77 => %157)::Union{Missing, Bool}
└────        goto #81 if not %161
80 ──        goto #91
81 ── %164 = (Core._svec_ref)(%144, 2)::Any
│     %165 = Enzyme.Compiler.:(==)::typeof(==)
│     %166 = (isa)(%164, WeakRef)::Bool
└────        goto #83 if not %166
82 ── %168 = π (%164, WeakRef)
│     %169 = invoke %165(%168::WeakRef, $(QuoteNode(Enzyme.Compiler.AnyState))::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #88
83 ── %171 = (isa)(%164, Missing)::Bool
└────        goto #85 if not %171
84 ──        goto #88
85 ──        goto #87 if not true
86 ── %175 = (%164 === $(QuoteNode(Enzyme.Compiler.AnyState)))::Bool
└────        goto #88
87 ──        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
88 ┄─ %179 = φ (#82 => %169, #84 => $(QuoteNode(missing)), #86 => %175)::Union{Missing, Bool}
└────        goto #90 if not %179
89 ──        goto #91
90 ── %182 = (Core._svec_ref)(%144, 2)::Any
│            Core.apply_type(Base.Val, %182)::Type{Val{_A}} where _A
└────        goto #92
91 ┄─        goto #92
92 ┄─ %186 = φ (#90 => %182, #91 => $(QuoteNode(Enzyme.Compiler.AnyState)))::Any
│     %187 = (%186 isa Enzyme.Compiler.ActivityState)::Bool
└────        goto #94 if not %187
93 ──        goto #98
94 ── %190 = (isa)(%186, Enzyme.Compiler.ActivityState)::Bool
└────        goto #96 if not %190
95 ── %192 = π (%186, Enzyme.Compiler.ActivityState)
└────        goto #97
96 ── %194 = Base.convert(Enzyme.Compiler.ActivityState, %186)::Enzyme.Compiler.ActivityState
└────        goto #97
97 ┄─ %196 = φ (#95 => %192, #96 => %194)::Enzyme.Compiler.ActivityState
98 ┄─ %197 = φ (#93 => %186, #97 => %196)::Any
│     %198 = π (%197, Enzyme.Compiler.ActivityState)
└────        goto #99
99 ┄─ %200 = φ (#65 => Enzyme.Compiler.MixedState, #98 => %198)::Enzyme.Compiler.ActivityState
└────        goto #100
100 ─        goto #101
101 ─ %203 = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %204 = (%200 === %203)::Bool
└────        goto #102
102 ─        goto #104 if not %204
103 ─        goto #239
104 ─ %208 = Base.secret_table_token::Symbol
│     %209 = Base.getfield(seen, :ht)::Vector{Any}
│     %210 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%209), :(%125), :(%208)))::Any
│     %211 = (%210 === %208)::Bool
└────        goto #106 if not %211
105 ─        goto #107
106 ─        goto #107
107 ┄ %215 = φ (#105 => %208, #106 => %210)::Any
│     %216 = (%215 === Base.secret_table_token)::Bool
│     %217 = Core.Intrinsics.not_int(%216)::Bool
└────        goto #108
108 ─        goto #109
109 ─        goto #120 if not %217
110 ─ %221 = Base.getfield(seen, :ht)::Vector{Any}
│     %222 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%221), :(%125), :(Base.secret_table_token)))::Any
│     %223 = (%222 === Base.secret_table_token)::Bool
└────        goto #112 if not %223
111 ─ %225 = Base.KeyError(%125)::Any
│            Base.throw(%225)::Union{}
└────        unreachable
112 ─        goto #113
113 ─ %229 = (%222 isa Main.ThreeMassSpring.var"#q_true#35")::Bool
└────        goto #115 if not %229
114 ─        goto #119
115 ─ %232 = (isa)(%222, Main.ThreeMassSpring.var"#q_true#35")::Bool
└────        goto #117 if not %232
116 ─ %234 = π (%222, Main.ThreeMassSpring.var"#q_true#35")
└────        goto #118
117 ─ %236 = Base.convert(Main.ThreeMassSpring.var"#q_true#35", %222)::Main.ThreeMassSpring.var"#q_true#35"
└────        goto #118
118 ┄ %238 = φ (#116 => %234, #117 => %236)::Main.ThreeMassSpring.var"#q_true#35"
119 ┄ %239 = φ (#114 => %222, #118 => %238)::Any
│     %240 = π (%239, Main.ThreeMassSpring.var"#q_true#35")
└────        goto #239
120 ─ %242 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Any}, svec(Any, Int64), 0, :(:ccall), Vector{Any}, 1, 1))::Vector{Any}
└────        goto #232 if not true
121 ─ %244 = Enzyme.Compiler.getfield(%125, 1)::Core.Box
│     %245 = Enzyme.Compiler.nothing::Nothing
└────        goto #123 if not true
122 ─        nothing::Nothing
123 ┄        goto #125 if not true
124 ─        goto #126
125 ─        $(Expr(:throw_undef_if_not, :seen, false))::Any
126 ┄ %251 = ($(QuoteNode(Val{Core.Box}())) ∈ ())::Any
└────        goto #128 if not %251
127 ─        goto #161
128 ─        goto #130 if not true
129 ─        goto #131
130 ─        $(Expr(:throw_undef_if_not, :seen, false))::Any
131 ┄ %257 = Core._apply_iterate(Base.iterate, Core.tuple, (Val{Core.Box}(),), ())::Tuple{Val{Core.Box}, Vararg{Any}}
└────        goto #133 if not true
132 ─        goto #134
133 ─        $(Expr(:throw_undef_if_not, :seen, false))::Any
134 ┄ %261 = Core.apply_type(Enzyme.Compiler.Merger, %257, Nothing, false, false)::Type{Enzyme.Compiler.Merger{_A, Nothing, false, false}} where _A
│     %262 = %new(%261, %245)::Enzyme.Compiler.Merger{_A, Nothing, false, false} where _A
│     %263 = (%262)(1)::Val
│     %264 = Enzyme.Compiler.forcefold::typeof(Enzyme.Compiler.forcefold)
│     %265 = (Core._compute_sparams)(forcefold(::Val{ty}, ::Val{sty}, C::Vararg{Any, N}) where {ty, sty, N} @ Enzyme.Compiler ~/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330, %264, $(QuoteNode(Val{Enzyme.Compiler.AnyState}())), %263)::Core.SimpleVector
│     %266 = (Core._svec_ref)(%265, 2)::Any
│     %267 = Enzyme.Compiler.:(==)::typeof(==)
│     %268 = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %269 = (isa)(%266, WeakRef)::Bool
└────        goto #136 if not %269
135 ─ %271 = π (%266, WeakRef)
│     %272 = invoke %267(%271::WeakRef, %268::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #141
136 ─ %274 = (isa)(%266, Missing)::Bool
└────        goto #138 if not %274
137 ─        goto #141
138 ─        goto #140 if not true
139 ─ %278 = (%266 === %268)::Bool
└────        goto #141
140 ─        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
141 ┄ %282 = φ (#135 => %272, #137 => $(QuoteNode(missing)), #139 => %278)::Union{Missing, Bool}
└────        goto #143 if not %282
142 ─        goto #153
143 ─ %285 = (Core._svec_ref)(%265, 2)::Any
│     %286 = Enzyme.Compiler.:(==)::typeof(==)
│     %287 = (isa)(%285, WeakRef)::Bool
└────        goto #145 if not %287
144 ─ %289 = π (%285, WeakRef)
│     %290 = invoke %286(%289::WeakRef, $(QuoteNode(Enzyme.Compiler.AnyState))::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #150
145 ─ %292 = (isa)(%285, Missing)::Bool
└────        goto #147 if not %292
146 ─        goto #150
147 ─        goto #149 if not true
148 ─ %296 = (%285 === $(QuoteNode(Enzyme.Compiler.AnyState)))::Bool
└────        goto #150
149 ─        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
150 ┄ %300 = φ (#144 => %290, #146 => $(QuoteNode(missing)), #148 => %296)::Union{Missing, Bool}
└────        goto #152 if not %300
151 ─        goto #153
152 ─ %303 = (Core._svec_ref)(%265, 2)::Any
│            Core.apply_type(Base.Val, %303)::Type{Val{_A}} where _A
└────        goto #154
153 ┄        goto #154
154 ┄ %307 = φ (#152 => %303, #153 => $(QuoteNode(Enzyme.Compiler.AnyState)))::Any
│     %308 = (%307 isa Enzyme.Compiler.ActivityState)::Bool
└────        goto #156 if not %308
155 ─        goto #160
156 ─ %311 = (isa)(%307, Enzyme.Compiler.ActivityState)::Bool
└────        goto #158 if not %311
157 ─ %313 = π (%307, Enzyme.Compiler.ActivityState)
└────        goto #159
158 ─ %315 = Base.convert(Enzyme.Compiler.ActivityState, %307)::Enzyme.Compiler.ActivityState
└────        goto #159
159 ┄ %317 = φ (#157 => %313, #158 => %315)::Enzyme.Compiler.ActivityState
160 ┄ %318 = φ (#155 => %307, #159 => %317)::Any
│     %319 = π (%318, Enzyme.Compiler.ActivityState)
└────        goto #161
161 ┄ %321 = φ (#127 => Enzyme.Compiler.MixedState, #160 => %319)::Enzyme.Compiler.ActivityState
└────        goto #162
162 ─        goto #163
163 ─ %324 = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %325 = (%321 === %324)::Bool
└────        goto #164
164 ─        goto #166 if not %325
165 ─        goto #231
166 ─ %329 = Base.secret_table_token::Symbol
│     %330 = Base.getfield(seen, :ht)::Vector{Any}
│     %331 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%330), :(%244), :(%329)))::Any
│     %332 = (%331 === %329)::Bool
└────        goto #168 if not %332
167 ─        goto #169
168 ─        goto #169
169 ┄ %336 = φ (#167 => %329, #168 => %331)::Any
│     %337 = (%336 === Base.secret_table_token)::Bool
│     %338 = Core.Intrinsics.not_int(%337)::Bool
└────        goto #170
170 ─        goto #171
171 ─        goto #182 if not %338
172 ─ %342 = Base.getfield(seen, :ht)::Vector{Any}
│     %343 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%342), :(%244), :(Base.secret_table_token)))::Any
│     %344 = (%343 === Base.secret_table_token)::Bool
└────        goto #174 if not %344
173 ─ %346 = Base.KeyError(%244)::Any
│            Base.throw(%346)::Union{}
└────        unreachable
174 ─        goto #175
175 ─ %350 = (%343 isa Core.Box)::Bool
└────        goto #177 if not %350
176 ─        goto #181
177 ─ %353 = (isa)(%343, Core.Box)::Bool
└────        goto #179 if not %353
178 ─ %355 = π (%343, Core.Box)
└────        goto #180
179 ─ %357 = Base.convert(Core.Box, %343)::Core.Box
└────        goto #180
180 ┄ %359 = φ (#178 => %355, #179 => %357)::Core.Box
181 ┄ %360 = φ (#176 => %343, #180 => %359)::Any
│     %361 = π (%360, Core.Box)
└────        goto #231
182 ─ %363 = $(Expr(:foreigncall, :(:jl_new_struct_uninit), Any, svec(Any), 0, :(:ccall), Core.Box))::Any
│            invoke Base.setindex!(seen::IdDict{Any, Any}, %363::Any, %244::Any)::Any
│     %365 = Base.repr::typeof(repr)
│     %366 = (isa)(%363, Base.BinaryPlatforms.Platform)::Bool
└────        goto #184 if not %366
183 ─ %368 = π (%363, Base.BinaryPlatforms.Platform)
│     %369 = invoke Base.BinaryPlatforms.:(var"#repr#12")(Base.BinaryPlatforms.nothing::Nothing, %365::typeof(repr), %368::Base.BinaryPlatforms.Platform)::String
└────        goto #185
184 ─ %371 = Base.repr(%363)::String
└────        goto #185
185 ┄ %373 = φ (#183 => %369, #184 => %371)::String
│            invoke Base.println("y = "::String, %373::String)::Any
└────        goto #224 if not true
186 ─ %376 = Enzyme.Compiler.isdefined(%244, 1)::Bool
└────        goto #223 if not %376
187 ─ %378 = Enzyme.Compiler.getfield(%244, 1)::Any
│     %379 = (%378 isa Core.Type)::Bool
└────        goto #189 if not %379
188 ─ %381 = π (%378, Type)
│     %382 = Core.apply_type(Core.Type, %381)::Type{Type{T}} where T
└────        goto #190
189 ─ %384 = Core.typeof(%378)::DataType
└────        goto #190
190 ┄ %386 = φ (#188 => %382, #189 => %384)::DataType
│     %387 = Core.tuple(%386, seen, %378, $(QuoteNode(Val{false}())))::Tuple{DataType, IdDict{Any, Any}, Any, Val{false}}
│     %388 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Any}, svec(Any, Int64), 0, :(:ccall), Vector{Any}, 4, 4))::Vector{Any}
└────        goto #199 if not true
191 ┄ %390 = φ (#190 => 1, #198 => %409)::Int64
│     %391 = φ (#190 => 1, #198 => %410)::Int64
│     %392 = φ (#190 => 1, #198 => %403)::Int64
│     %393 = Base.getfield(%387, %390, true)::Any
│     %394 = (%393 isa Core.Type)::Bool
└────        goto #193 if not %394
192 ─ %396 = π (%393, Type)
│     %397 = Core.apply_type(Core.Type, %396)::Type{Type{T}} where T
└────        goto #194
193 ─ %399 = Core.typeof(%393)::DataType
└────        goto #194
194 ┄ %401 = φ (#192 => %397, #193 => %399)::DataType
│            Base.arrayset(false, %388, %401, %392)::Vector{Any}
│     %403 = Base.add_int(%392, 1)::Int64
│     %404 = (%391 === 4)::Bool
└────        goto #196 if not %404
195 ─        goto #197
196 ─ %407 = Base.add_int(%391, 1)::Int64
└────        goto #197
197 ┄ %409 = φ (#196 => %407)::Int64
│     %410 = φ (#196 => %407)::Int64
│     %411 = φ (#195 => true, #196 => false)::Bool
│     %412 = Base.not_int(%411)::Bool
└────        goto #199 if not %412
198 ─        goto #191
199 ┄ %415 = Core._apply_iterate(Base.iterate, Core.apply_type, (Tuple,), %388)::Type
└────        goto #200
200 ─ %417 = InteractiveUtils.code_typed::typeof(code_typed)
│     %418 = EnzymeCore.make_zero::typeof(EnzymeCore.make_zero)
│     %419 = invoke Base.:(var"#code_typed#25")($(QuoteNode(Base.Pairs{Symbol, Union{}, Tuple{}, @NamedTuple{}}()))::Base.Pairs{Symbol, Union{}, Tuple{}, @NamedTuple{}}, %417::typeof(code_typed), %418::Any, %415::Any)::Vector{Any}
│     %420 = Base.arraylen(%419)::Int64
│     %421 = (%420 === 1)::Bool
└────        goto #202 if not %421
201 ─ %423 = Base.arrayref(true, %419, 1)::Any
└────        goto #203
202 ─        nothing::Nothing
203 ┄ %426 = φ (#201 => %423, #202 => %419)::Any
│     %427 = Base.repr::typeof(repr)
│     %428 = (isa)(%426, Base.BinaryPlatforms.Platform)::Bool
└────        goto #205 if not %428
204 ─ %430 = π (%426, Base.BinaryPlatforms.Platform)
│     %431 = invoke Base.BinaryPlatforms.:(var"#repr#12")(Base.BinaryPlatforms.nothing::Nothing, %427::typeof(repr), %430::Base.BinaryPlatforms.Platform)::String
└────        goto #206
205 ─ %433 = Base.repr(%426)::String
└────        goto #206
206 ┄ %435 = φ (#204 => %431, #205 => %433)::String
│            invoke Base.println("#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = "::String, %435::String)::Any
│     %437 = (%378 isa Core.Type)::Bool
└────        goto #208 if not %437
207 ─ %439 = π (%378, Type)
│     %440 = Core.apply_type(Core.Type, %439)::Type{Type{T}} where T
└────        goto #209
208 ─ %442 = Core.typeof(%378)::DataType
└────        goto #209
209 ┄ %444 = φ (#207 => %440, #208 => %442)::DataType
│     %445 = Core.tuple(%444, seen, %378, $(QuoteNode(Val{false}())))::Tuple{DataType, IdDict{Any, Any}, Any, Val{false}}
│     %446 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Any}, svec(Any, Int64), 0, :(:ccall), Vector{Any}, 4, 4))::Vector{Any}
└────        goto #218 if not true
210 ┄ %448 = φ (#209 => 1, #217 => %467)::Int64
│     %449 = φ (#209 => 1, #217 => %468)::Int64
│     %450 = φ (#209 => 1, #217 => %461)::Int64
│     %451 = Base.getfield(%445, %448, true)::Any
│     %452 = (%451 isa Core.Type)::Bool
└────        goto #212 if not %452
211 ─ %454 = π (%451, Type)
│     %455 = Core.apply_type(Core.Type, %454)::Type{Type{T}} where T
└────        goto #213
212 ─ %457 = Core.typeof(%451)::DataType
└────        goto #213
213 ┄ %459 = φ (#211 => %455, #212 => %457)::DataType
│            Base.arrayset(false, %446, %459, %450)::Vector{Any}
│     %461 = Base.add_int(%450, 1)::Int64
│     %462 = (%449 === 4)::Bool
└────        goto #215 if not %462
214 ─        goto #216
215 ─ %465 = Base.add_int(%449, 1)::Int64
└────        goto #216
216 ┄ %467 = φ (#215 => %465)::Int64
│     %468 = φ (#215 => %465)::Int64
│     %469 = φ (#214 => true, #215 => false)::Bool
│     %470 = Base.not_int(%469)::Bool
└────        goto #218 if not %470
217 ─        goto #210
218 ┄ %473 = Core._apply_iterate(Base.iterate, Core.apply_type, (Tuple,), %446)::Type
└────        goto #219
219 ─ %475 = InteractiveUtils.code_llvm::typeof(InteractiveUtils.code_llvm)
│     %476 = EnzymeCore.make_zero::typeof(EnzymeCore.make_zero)
│            invoke InteractiveUtils.:(var"#code_llvm#39")(false::Bool, false::Bool, true::Bool, :default::Symbol, %475::typeof(InteractiveUtils.code_llvm), %476::Any, %473::Any)::Nothing
│     %478 = invoke Base.:(var"#sprint#501")(nothing::Nothing, 0::Int64, sprint::typeof(sprint), show::Function, nothing::Nothing)::String
│            invoke Base.println("#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = "::String, %478::String)::Any
│     %480 = (%378 isa Core.Type)::Bool
└────        goto #221 if not %480
220 ─ %482 = π (%378, Type)
│     %483 = Core.apply_type(Core.Type, %482)::Type{Type{T}} where T
└────        goto #222
221 ─ %485 = Core.typeof(%378)::DataType
└────        goto #222
222 ┄ %487 = φ (#220 => %483, #221 => %485)::DataType
│     %488 = EnzymeCore.make_zero(%487, seen, %378, $(QuoteNode(Val{false}())))::Any
└────        $(Expr(:foreigncall, :(:jl_set_nth_field), Nothing, svec(Any, UInt64, Any), 0, :(:ccall), :(%363), 0x0000000000000000, :(%488), 0x0000000000000000))::Nothing
223 ┄        nothing::Nothing
224 ┄ %491 = Core.tuple("end", %363)::Tuple{String, Any}
│     %492 = Base.repr(%491)::String
│            invoke Base.println("(\"end\", y) = "::String, %492::String)::Any
│     %494 = (%363 isa Core.Box)::Bool
└────        goto #226 if not %494
225 ─        goto #230
226 ─ %497 = (isa)(%363, Core.Box)::Bool
└────        goto #228 if not %497
227 ─ %499 = π (%363, Core.Box)
└────        goto #229
228 ─ %501 = Base.convert(Core.Box, %363)::Core.Box
└────        goto #229
229 ┄ %503 = φ (#227 => %499, #228 => %501)::Core.Box
230 ┄ %504 = φ (#225 => %363, #229 => %503)::Any
│     %505 = π (%504, Core.Box)
└────        goto #231
231 ┄ %507 = φ (#165 => %244, #181 => %361, #230 => %505)::Core.Box
└────        Base.arrayset(true, %242, %507, 1)::Vector{Any}
232 ┄ %509 = $(Expr(:foreigncall, :(:jl_array_ptr), Ptr{Any}, svec(Any), 0, :(:ccall), :(%242)))::Ptr{Any}
│     %510 = $(Expr(:foreigncall, :(:jl_new_structv), Any, svec(Any, Ptr{Any}, UInt32), 0, :(:ccall), Main.ThreeMassSpring.var"#q_true#35", :(%509), 0x00000001, 0x00000001, :(%242)))::Any
│            invoke Base.setindex!(seen::IdDict{Any, Any}, %510::Any, %125::Any)::Any
│     %512 = (%510 isa Main.ThreeMassSpring.var"#q_true#35")::Bool
└────        goto #234 if not %512
233 ─        goto #238
234 ─ %515 = (isa)(%510, Main.ThreeMassSpring.var"#q_true#35")::Bool
└────        goto #236 if not %515
235 ─ %517 = π (%510, Main.ThreeMassSpring.var"#q_true#35")
└────        goto #237
236 ─ %519 = Base.convert(Main.ThreeMassSpring.var"#q_true#35", %510)::Main.ThreeMassSpring.var"#q_true#35"
└────        goto #237
237 ┄ %521 = φ (#235 => %517, #236 => %519)::Main.ThreeMassSpring.var"#q_true#35"
238 ┄ %522 = φ (#233 => %510, #237 => %521)::Any
│     %523 = π (%522, Main.ThreeMassSpring.var"#q_true#35")
└────        goto #239
239 ┄ %525 = φ (#103 => %125, #119 => %240, #238 => %523)::Main.ThreeMassSpring.var"#q_true#35"
│            Base.arrayset(true, %123, %525, 1)::Vector{Any}
└────        nothing::Nothing
240 ┄ %528 = $(Expr(:foreigncall, :(:jl_array_ptr), Ptr{Any}, svec(Any), 0, :(:ccall), :(%123)))::Ptr{Any}
│     %529 = $(Expr(:foreigncall, :(:jl_new_structv), Any, svec(Any, Ptr{Any}, UInt32), 0, :(:ccall), Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}, :(%528), 0x00000001, 0x00000001, :(%123)))::Any
│            invoke Base.setindex!(seen::IdDict{Any, Any}, %529::Any, prev::Any)::Any
│     %531 = (%529 isa Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})::Bool
└────        goto #242 if not %531
241 ─        goto #246
242 ─ %534 = (isa)(%529, Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})::Bool
└────        goto #244 if not %534
243 ─ %536 = π (%529, Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
└────        goto #245
244 ─ %538 = Base.convert(Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}, %529)::Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}
└────        goto #245
245 ┄ %540 = φ (#243 => %536, #244 => %538)::Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}
246 ┄ %541 = φ (#241 => %529, #245 => %540)::Any
│     %542 = π (%541, Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
└────        return %542
) => Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1218 within `make_zero`
define [1 x [1 x {}*]] @julia_make_zero_7302({}* noundef nonnull align 8 dereferenceable(24) %0, [1 x [1 x {}*]]* nocapture noundef nonnull readonly align 8 dereferenceable(8) %1) #0 {
top:
  %2 = alloca [5 x {}*], align 8
  %gcframe743 = alloca [9 x {}*], align 16
  %gcframe743.sub = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe743, i64 0, i64 0
  %.sub = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 0
  %3 = bitcast [9 x {}*]* %gcframe743 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %3, i8 0, i64 72, i1 true)
  %4 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    %5 = bitcast [9 x {}*]* %gcframe743 to i64*
    store i64 28, i64* %5, align 16
    %6 = load {}**, {}*** %4, align 8
    %7 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe743, i64 0, i64 1
    %8 = bitcast {}** %7 to {}***
    store {}** %6, {}*** %8, align 8
    %9 = bitcast {}*** %4 to {}***
    store {}** %gcframe743.sub, {}*** %9, align 8
    store {}* inttoptr (i64 11284993512 to {}*), {}** %.sub, align 8
    %10 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 1
    store {}* inttoptr (i64 4758573520 to {}*), {}** %10, align 8
    %11 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4688171680 to {}*), {}** nonnull %.sub, i32 2)
    %12 = bitcast {}* %11 to i64*
    %13 = getelementptr inbounds i64, i64* %12, i64 -1
    %14 = load atomic i64, i64* %13 unordered, align 8
    %15 = and i64 %14, -16
    %16 = inttoptr i64 %15 to {}*
    %exactly_isa = icmp eq {}* %16, inttoptr (i64 192 to {}*)
    br i1 %exactly_isa, label %pass, label %fail

L11:                                              ; preds = %pass
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:519
    store {}* inttoptr (i64 4687803232 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4748609600 to {}*), {}** %10, align 8
    %17 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
    store {}* inttoptr (i64 11284993520 to {}*), {}** %17, align 8
    %18 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 3
    store {}* inttoptr (i64 4758573520 to {}*), {}** %18, align 8
    %19 = call nonnull {}* @jl_f__apply_iterate({}* null, {}** nonnull %.sub, i32 4)
    %20 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe743, i64 0, i64 2
    store {}* %19, {}** %20, align 16
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:521
    store {}* inttoptr (i64 5983455680 to {}*), {}** %.sub, align 8
    store {}* %19, {}** %10, align 8
    store {}* inttoptr (i64 4759732912 to {}*), {}** %17, align 8
    store {}* inttoptr (i64 4827820512 to {}*), {}** %18, align 8
    %21 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 4
    store {}* inttoptr (i64 4827820512 to {}*), {}** %21, align 8
    %22 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 5)
    store {}* %22, {}** %20, align 16
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:287 within `Merger`
     store {}* inttoptr (i64 4299603976 to {}*), {}** %.sub, align 8
     %23 = call nonnull {}* @ijl_new_structv({}* nonnull %22, {}** nonnull %.sub, i32 1)
     store {}* %23, {}** %20, align 16
; ││└
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ ntuple.jl:48 within `ntuple`
     store {}* inttoptr (i64 4299751776 to {}*), {}** %.sub, align 8
     %24 = call nonnull {}* @ijl_apply_generic({}* nonnull %23, {}** nonnull %.sub, i32 1)
     store {}* %24, {}** %20, align 16
; ││└
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330 within `forcefold`
     store {}* inttoptr (i64 5983451472 to {}*), {}** %.sub, align 8
     store {}* inttoptr (i64 5983450976 to {}*), {}** %10, align 8
     store {}* inttoptr (i64 5983453888 to {}*), {}** %17, align 8
     store {}* %24, {}** %18, align 8
     %25 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4734466288 to {}*), {}** nonnull %.sub, i32 4)
     %26 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe743, i64 0, i64 3
     store {}* %25, {}** %26, align 8
; │││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %25, {}** %.sub, align 8
     store {}* inttoptr (i64 4299752064 to {}*), {}** %10, align 8
     %27 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %28 = bitcast {}* %27 to i64*
     %29 = getelementptr inbounds i64, i64* %28, i64 -1
     %30 = load atomic i64, i64* %29 unordered, align 8
     %31 = and i64 %30, -16
     switch i64 %31, label %post_is362 [
    i64 4759728480, label %L25
    i64 4741095904, label %post_box_union319
    i64 5974287984, label %is361
  ]

L25:                                              ; preds = %L11
     store {}* %27, {}** %20, align 16
     %32 = call i8 @"j_==_7310"({}* nonnull %27, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass324

L39:                                              ; preds = %pass324
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %25, {}** %.sub, align 8
     store {}* inttoptr (i64 4299752064 to {}*), {}** %10, align 8
     %33 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %34 = bitcast {}* %33 to i64*
     %35 = getelementptr inbounds i64, i64* %34, i64 -1
     %36 = load atomic i64, i64* %35 unordered, align 8
     %37 = and i64 %36, -16
     switch i64 %37, label %post_is353 [
    i64 4759728480, label %L43
    i64 4741095904, label %post_box_union341
    i64 5974287984, label %is352
  ]

L43:                                              ; preds = %L39
     store {}* %33, {}** %20, align 16
     %38 = call i8 @"j_==_7310"({}* nonnull %33, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass346

L57:                                              ; preds = %pass346
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:335 within `forcefold`
     store {}* %25, {}** %.sub, align 8
     store {}* inttoptr (i64 4299752064 to {}*), {}** %10, align 8
     %39 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     store {}* %39, {}** %20, align 16
; │││┌ @ essentials.jl:869 within `Val`
      store {}* inttoptr (i64 4688645968 to {}*), {}** %.sub, align 8
      store {}* %39, {}** %10, align 8
      %40 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L61

L61:                                              ; preds = %pass346, %pass324, %L57
     %value_phi326 = phi {}* [ %39, %L57 ], [ inttoptr (i64 6230679232 to {}*), %pass346 ], [ inttoptr (i64 6230679232 to {}*), %pass324 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:525
    %41 = bitcast {}* %value_phi326 to i64*
    %42 = getelementptr inbounds i64, i64* %41, i64 -1
    %43 = load atomic i64, i64* %42 unordered, align 8
    %44 = and i64 %43, -16
    %45 = inttoptr i64 %44 to {}*
    %exactly_isa328.not = icmp eq {}* %45, inttoptr (i64 5974287984 to {}*)
    br i1 %exactly_isa328.not, label %L72, label %L72.thread

L72.thread:                                       ; preds = %L61
    store {}* %value_phi326, {}** %20, align 16
    store {}* inttoptr (i64 5974287984 to {}*), {}** %.sub, align 8
    store {}* %value_phi326, {}** %10, align 8
    %46 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
    br label %L78

L72:                                              ; preds = %L61
    %.not626 = icmp eq {}* %value_phi326, null
    br i1 %.not626, label %L82, label %L78

L78:                                              ; preds = %L72, %L72.thread
    %unbox376.in.in = phi {}* [ %46, %L72.thread ], [ %value_phi326, %L72 ]
    %unbox376.in = bitcast {}* %unbox376.in.in to i32*
    %unbox376 = load i32, i32* %unbox376.in, align 4
; │└
; │ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:556 within `guaranteed_const_nongen`
; │┌ @ Base.jl:159 within `==`
    %.not = icmp eq i32 %unbox376, 0
; └└
  br i1 %.not, label %L82, label %L85

common.ret:                                       ; preds = %L541, %L116, %L82
  %unbox.unpack.unpack.pn = phi {}* [ %unbox.unpack.unpack, %L82 ], [ %unbox16.unpack.unpack, %L116 ], [ %unbox37.unpack.unpack, %L541 ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  %unbox.unpack563.pn = insertvalue [1 x {}*] zeroinitializer, {}* %unbox.unpack.unpack.pn, 0
  %common.ret.op = insertvalue [1 x [1 x {}*]] zeroinitializer, [1 x {}*] %unbox.unpack563.pn, 0
  %47 = load {}*, {}** %7, align 8
  %48 = bitcast {}*** %4 to {}**
  store {}* %47, {}** %48, align 8
  ret [1 x [1 x {}*]] %common.ret.op

L82:                                              ; preds = %L78, %L72
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220 within `make_zero`
  %49 = getelementptr inbounds [1 x [1 x {}*]], [1 x [1 x {}*]]* %1, i64 0, i64 0, i64 0
  %unbox.unpack.unpack = load {}*, {}** %49, align 8
  br label %common.ret

L85:                                              ; preds = %pass, %L78
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1222 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %50 = bitcast {}* %0 to {}**
      %getfield = load atomic {}*, {}** %50 unordered, align 8
      %51 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe743, i64 0, i64 3
      store {}* %getfield, {}** %51, align 8
; │││└
     %ptls_field744 = getelementptr inbounds {}**, {}*** %4, i64 2
     %52 = bitcast {}*** %ptls_field744 to i8**
     %ptls_load745746 = load i8*, i8** %52, align 8
     %box = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load745746, i32 1136, i32 16) #13
     %53 = bitcast {}* %box to i64*
     %54 = getelementptr inbounds i64, i64* %53, i64 -1
     store atomic i64 11381562640, i64* %54 unordered, align 8
     %memcpy_refined_src = getelementptr inbounds [1 x [1 x {}*]], [1 x [1 x {}*]]* %1, i64 0, i64 0, i64 0
     %memcpy_refined_dst = bitcast {}* %box to {}**
     %55 = load {}*, {}** %memcpy_refined_src, align 8
     store {}* %55, {}** %memcpy_refined_dst, align 8
     %56 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe743, i64 0, i64 2
     store {}* %box, {}** %56, align 16
     %57 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %box, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not565 = icmp eq {}* %57, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not565, label %L119, label %L98

L98:                                              ; preds = %L85
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1223 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield4 = load atomic {}*, {}** %50 unordered, align 8
    store {}* %getfield4, {}** %51, align 8
; │└
   %ptls_load696747748 = load i8*, i8** %52, align 8
   %box6 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load696747748, i32 1136, i32 16) #13
   %58 = bitcast {}* %box6 to i64*
   %59 = getelementptr inbounds i64, i64* %58, i64 -1
   store atomic i64 11381562640, i64* %59 unordered, align 8
   %memcpy_refined_dst8 = bitcast {}* %box6 to {}**
   store {}* %55, {}** %memcpy_refined_dst8, align 8
   store {}* %box6, {}** %56, align 16
   %60 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield4, {}* nonnull %box6, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not567 = icmp eq {}* %60, inttoptr (i64 4301375048 to {}*)
   br i1 %.not567, label %L102, label %L106

L102:                                             ; preds = %L98
   %ptls_load699751752 = load i8*, i8** %52, align 8
   %box10 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load699751752, i32 1136, i32 16) #13
   %61 = bitcast {}* %box10 to i64*
   %62 = getelementptr inbounds i64, i64* %61, i64 -1
   store atomic i64 11381562640, i64* %62 unordered, align 8
   %memcpy_refined_dst12 = bitcast {}* %box10 to {}**
   store {}* %55, {}** %memcpy_refined_dst12, align 8
   store {}* %box10, {}** %56, align 16
   store {}* %box10, {}** %.sub, align 8
   %63 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %63)
   unreachable

L106:                                             ; preds = %L98
; └
  %64 = bitcast {}* %60 to i64*
  %65 = getelementptr inbounds i64, i64* %64, i64 -1
  %66 = load atomic i64, i64* %65 unordered, align 8
  %67 = and i64 %66, -16
  %68 = inttoptr i64 %67 to {}*
  %exactly_isa14.not = icmp eq {}* %68, inttoptr (i64 11381562640 to {}*)
  br i1 %exactly_isa14.not, label %L106.L116_crit_edge, label %L115

L106.L116_crit_edge:                              ; preds = %L106
  %.phi.trans.insert = bitcast {}* %60 to {}**
  %unbox16.unpack.unpack.pre = load {}*, {}** %.phi.trans.insert, align 8
  br label %L116

L115:                                             ; preds = %L106
  store {}* %60, {}** %56, align 16
  store {}* inttoptr (i64 11381562640 to {}*), {}** %.sub, align 8
  store {}* %60, {}** %10, align 8
  %69 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %70 = bitcast {}* %69 to {}**
  %unbox392.unpack.unpack = load {}*, {}** %70, align 8
  store {}* %unbox392.unpack.unpack, {}** %56, align 16
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1218 within `make_zero`
  %ptls_load702749750 = load i8*, i8** %52, align 8
  %box379 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load702749750, i32 1136, i32 16) #13
  %71 = bitcast {}* %box379 to i64*
  %72 = getelementptr inbounds i64, i64* %71, i64 -1
  store atomic i64 11381562640, i64* %72 unordered, align 8
  %73 = bitcast {}* %box379 to {}**
  store {}* %unbox392.unpack.unpack, {}** %73, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1223 within `make_zero`
  br label %L116

L116:                                             ; preds = %L115, %L106.L116_crit_edge
  %.pre-phi780 = phi {}** [ %.phi.trans.insert, %L106.L116_crit_edge ], [ %73, %L115 ]
  %unbox16.unpack.unpack = phi {}* [ %unbox392.unpack.unpack, %L115 ], [ %unbox16.unpack.unpack.pre, %L106.L116_crit_edge ]
  %value_phi15 = phi {}* [ %box379, %L115 ], [ %60, %L106.L116_crit_edge ]
  br label %common.ret

L119:                                             ; preds = %L85
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1256 within `make_zero`
; ┌ @ boot.jl:475 within `Array`
   %74 = call nonnull {}* inttoptr (i64 4304360888 to {}* ({}*, i64)*)({}* inttoptr (i64 4759731152 to {}*), i64 1)
   %75 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe743, i64 0, i64 6
   store {}* %74, {}** %75, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    store {}* inttoptr (i64 11284993584 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4758573520 to {}*), {}** %10, align 8
    %76 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4688171680 to {}*), {}** nonnull %.sub, i32 2)
    %77 = bitcast {}* %76 to i64*
    %78 = getelementptr inbounds i64, i64* %77, i64 -1
    %79 = load atomic i64, i64* %78 unordered, align 8
    %80 = and i64 %79, -16
    %81 = inttoptr i64 %80 to {}*
    %exactly_isa21 = icmp eq {}* %81, inttoptr (i64 192 to {}*)
    br i1 %exactly_isa21, label %pass23, label %fail22

L136:                                             ; preds = %pass23
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:519
    store {}* inttoptr (i64 4687803232 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4748609600 to {}*), {}** %10, align 8
    %82 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
    store {}* inttoptr (i64 11284993592 to {}*), {}** %82, align 8
    %83 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 3
    store {}* inttoptr (i64 4758573520 to {}*), {}** %83, align 8
    %84 = call nonnull {}* @jl_f__apply_iterate({}* null, {}** nonnull %.sub, i32 4)
    store {}* %84, {}** %56, align 16
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:521
    store {}* inttoptr (i64 5983455680 to {}*), {}** %.sub, align 8
    store {}* %84, {}** %10, align 8
    store {}* inttoptr (i64 4759732912 to {}*), {}** %82, align 8
    store {}* inttoptr (i64 4827820512 to {}*), {}** %83, align 8
    %85 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 4
    store {}* inttoptr (i64 4827820512 to {}*), {}** %85, align 8
    %86 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 5)
    store {}* %86, {}** %56, align 16
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:287 within `Merger`
     store {}* inttoptr (i64 4299603976 to {}*), {}** %.sub, align 8
     %87 = call nonnull {}* @ijl_new_structv({}* nonnull %86, {}** nonnull %.sub, i32 1)
     store {}* %87, {}** %56, align 16
; ││└
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ ntuple.jl:48 within `ntuple`
     store {}* inttoptr (i64 4299751776 to {}*), {}** %.sub, align 8
     %88 = call nonnull {}* @ijl_apply_generic({}* nonnull %87, {}** nonnull %.sub, i32 1)
     store {}* %88, {}** %56, align 16
; ││└
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330 within `forcefold`
     store {}* inttoptr (i64 5983451472 to {}*), {}** %.sub, align 8
     store {}* inttoptr (i64 5983450976 to {}*), {}** %10, align 8
     store {}* inttoptr (i64 5983453888 to {}*), {}** %82, align 8
     store {}* %88, {}** %83, align 8
     %89 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4734466288 to {}*), {}** nonnull %.sub, i32 4)
     store {}* %89, {}** %51, align 8
; │││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %89, {}** %.sub, align 8
     store {}* inttoptr (i64 4299752064 to {}*), {}** %10, align 8
     %90 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %91 = bitcast {}* %90 to i64*
     %92 = getelementptr inbounds i64, i64* %91, i64 -1
     %93 = load atomic i64, i64* %92 unordered, align 8
     %94 = and i64 %93, -16
     switch i64 %94, label %post_is301 [
    i64 4759728480, label %L150
    i64 4741095904, label %post_box_union258
    i64 5974287984, label %is300
  ]

L150:                                             ; preds = %L136
     store {}* %90, {}** %56, align 16
     %95 = call i8 @"j_==_7310"({}* nonnull %90, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass263

L164:                                             ; preds = %pass263
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %89, {}** %.sub, align 8
     store {}* inttoptr (i64 4299752064 to {}*), {}** %10, align 8
     %96 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %97 = bitcast {}* %96 to i64*
     %98 = getelementptr inbounds i64, i64* %97, i64 -1
     %99 = load atomic i64, i64* %98 unordered, align 8
     %100 = and i64 %99, -16
     switch i64 %100, label %post_is292 [
    i64 4759728480, label %L168
    i64 4741095904, label %post_box_union280
    i64 5974287984, label %is291
  ]

L168:                                             ; preds = %L164
     store {}* %96, {}** %56, align 16
     %101 = call i8 @"j_==_7310"({}* nonnull %96, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass285

L182:                                             ; preds = %pass285
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:335 within `forcefold`
     store {}* %89, {}** %.sub, align 8
     store {}* inttoptr (i64 4299752064 to {}*), {}** %10, align 8
     %102 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     store {}* %102, {}** %56, align 16
; │││┌ @ essentials.jl:869 within `Val`
      store {}* inttoptr (i64 4688645968 to {}*), {}** %.sub, align 8
      store {}* %102, {}** %10, align 8
      %103 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L186

L186:                                             ; preds = %pass285, %pass263, %L182
     %value_phi265 = phi {}* [ %102, %L182 ], [ inttoptr (i64 6230679232 to {}*), %pass285 ], [ inttoptr (i64 6230679232 to {}*), %pass263 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:525
    %104 = bitcast {}* %value_phi265 to i64*
    %105 = getelementptr inbounds i64, i64* %104, i64 -1
    %106 = load atomic i64, i64* %105 unordered, align 8
    %107 = and i64 %106, -16
    %108 = inttoptr i64 %107 to {}*
    %exactly_isa267.not = icmp eq {}* %108, inttoptr (i64 5974287984 to {}*)
    br i1 %exactly_isa267.not, label %L197, label %L197.thread

L197.thread:                                      ; preds = %L186
    store {}* %value_phi265, {}** %56, align 16
    store {}* inttoptr (i64 5974287984 to {}*), {}** %.sub, align 8
    store {}* %value_phi265, {}** %10, align 8
    %109 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
    br label %L203

L197:                                             ; preds = %L186
    %.not619 = icmp eq {}* %value_phi265, null
    br i1 %.not619, label %L207, label %L203

L203:                                             ; preds = %L197, %L197.thread
    %unbox399.in.in = phi {}* [ %109, %L197.thread ], [ %value_phi265, %L197 ]
    %unbox399.in = bitcast {}* %unbox399.in.in to i32*
    %unbox399 = load i32, i32* %unbox399.in, align 4
; │└
; │ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:556 within `guaranteed_const_nongen`
; │┌ @ Base.jl:159 within `==`
    %.not576 = icmp eq i32 %unbox399, 0
; └└
  br i1 %.not576, label %L207, label %L208

L207:                                             ; preds = %L203, %L197
  %unbox406.unpack = load {}*, {}** %memcpy_refined_src, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
  br label %L525

L208:                                             ; preds = %pass23, %L203
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1222
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %getfield42 = load atomic {}*, {}** %50 unordered, align 8
      store {}* %getfield42, {}** %51, align 8
; │││└
     %ptls_load705753754 = load i8*, i8** %52, align 8
     %box44 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load705753754, i32 1136, i32 16) #13
     %110 = bitcast {}* %box44 to i64*
     %111 = getelementptr inbounds i64, i64* %110, i64 -1
     store atomic i64 11381649040, i64* %111 unordered, align 8
     %memcpy_refined_dst46 = bitcast {}* %box44 to {}**
     store {}* %55, {}** %memcpy_refined_dst46, align 8
     store {}* %box44, {}** %56, align 16
     %112 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield42, {}* nonnull %box44, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not588 = icmp eq {}* %112, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not588, label %L242, label %L221

L221:                                             ; preds = %L208
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1223
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield49 = load atomic {}*, {}** %50 unordered, align 8
    store {}* %getfield49, {}** %51, align 8
; │└
   %ptls_load708755756 = load i8*, i8** %52, align 8
   %box51 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load708755756, i32 1136, i32 16) #13
   %113 = bitcast {}* %box51 to i64*
   %114 = getelementptr inbounds i64, i64* %113, i64 -1
   store atomic i64 11381649040, i64* %114 unordered, align 8
   %memcpy_refined_dst53 = bitcast {}* %box51 to {}**
   store {}* %55, {}** %memcpy_refined_dst53, align 8
   store {}* %box51, {}** %56, align 16
   %115 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield49, {}* nonnull %box51, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not590 = icmp eq {}* %115, inttoptr (i64 4301375048 to {}*)
   br i1 %.not590, label %L225, label %L229

L225:                                             ; preds = %L221
   %ptls_load711765766 = load i8*, i8** %52, align 8
   %box55 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load711765766, i32 1136, i32 16) #13
   %116 = bitcast {}* %box55 to i64*
   %117 = getelementptr inbounds i64, i64* %116, i64 -1
   store atomic i64 11381649040, i64* %117 unordered, align 8
   %memcpy_refined_dst57 = bitcast {}* %box55 to {}**
   store {}* %55, {}** %memcpy_refined_dst57, align 8
   store {}* %box55, {}** %56, align 16
   store {}* %box55, {}** %.sub, align 8
   %118 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %118)
   unreachable

L229:                                             ; preds = %L221
; └
  %119 = bitcast {}* %115 to i64*
  %120 = getelementptr inbounds i64, i64* %119, i64 -1
  %121 = load atomic i64, i64* %120 unordered, align 8
  %122 = and i64 %121, -16
  %123 = inttoptr i64 %122 to {}*
  %exactly_isa61.not = icmp eq {}* %123, inttoptr (i64 11381649040 to {}*)
  br i1 %exactly_isa61.not, label %L229.guard_pass411_crit_edge, label %L238

L229.guard_pass411_crit_edge:                     ; preds = %L229
  %.phi.trans.insert772 = bitcast {}* %115 to {}**
  %unbox413.unpack.pre = load {}*, {}** %.phi.trans.insert772, align 8
  br label %guard_pass411

L238:                                             ; preds = %L229
  store {}* %115, {}** %56, align 16
  store {}* inttoptr (i64 11381649040 to {}*), {}** %.sub, align 8
  store {}* %115, {}** %10, align 8
  %124 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %125 = bitcast {}* %124 to {}**
  %unbox452.unpack = load {}*, {}** %125, align 8
  store {}* %unbox452.unpack, {}** %56, align 16
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1218 within `make_zero`
  %ptls_load714757758 = load i8*, i8** %52, align 8
  %box439 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load714757758, i32 1136, i32 16) #13
  %126 = bitcast {}* %box439 to i64*
  %127 = getelementptr inbounds i64, i64* %126, i64 -1
  store atomic i64 11381649040, i64* %127 unordered, align 8
  %128 = bitcast {}* %box439 to {}**
  store {}* %unbox452.unpack, {}** %128, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1223
  br label %guard_pass411

L242:                                             ; preds = %L208
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1256
; ┌ @ boot.jl:475 within `Array`
   %129 = call nonnull {}* inttoptr (i64 4304360888 to {}* ({}*, i64)*)({}* inttoptr (i64 4759731152 to {}*), i64 1)
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1259
  %getfield67 = load atomic {}*, {}** %memcpy_refined_src unordered, align 8
  %130 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe743, i64 0, i64 5
  store {}* %129, {}** %130, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    store {}* inttoptr (i64 11284993664 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4758573520 to {}*), {}** %10, align 8
    %131 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4688171680 to {}*), {}** nonnull %.sub, i32 2)
    %132 = bitcast {}* %131 to i64*
    %133 = getelementptr inbounds i64, i64* %132, i64 -1
    %134 = load atomic i64, i64* %133 unordered, align 8
    %135 = and i64 %134, -16
    %136 = inttoptr i64 %135 to {}*
    %exactly_isa69 = icmp eq {}* %136, inttoptr (i64 192 to {}*)
    br i1 %exactly_isa69, label %pass71, label %fail70

L257:                                             ; preds = %pass71
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:519
    store {}* inttoptr (i64 4687803232 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4748609600 to {}*), {}** %10, align 8
    %137 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
    store {}* inttoptr (i64 11284993672 to {}*), {}** %137, align 8
    %138 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 3
    store {}* inttoptr (i64 4758573520 to {}*), {}** %138, align 8
    %139 = call nonnull {}* @jl_f__apply_iterate({}* null, {}** nonnull %.sub, i32 4)
    store {}* %139, {}** %56, align 16
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:521
    store {}* inttoptr (i64 5983455680 to {}*), {}** %.sub, align 8
    store {}* %139, {}** %10, align 8
    store {}* inttoptr (i64 4759732912 to {}*), {}** %137, align 8
    store {}* inttoptr (i64 4827820512 to {}*), {}** %138, align 8
    %140 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 4
    store {}* inttoptr (i64 4827820512 to {}*), {}** %140, align 8
    %141 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 5)
    store {}* %141, {}** %56, align 16
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:287 within `Merger`
     store {}* inttoptr (i64 4299603976 to {}*), {}** %.sub, align 8
     %142 = call nonnull {}* @ijl_new_structv({}* nonnull %141, {}** nonnull %.sub, i32 1)
     store {}* %142, {}** %56, align 16
; ││└
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ ntuple.jl:48 within `ntuple`
     store {}* inttoptr (i64 4299751776 to {}*), {}** %.sub, align 8
     %143 = call nonnull {}* @ijl_apply_generic({}* nonnull %142, {}** nonnull %.sub, i32 1)
     store {}* %143, {}** %56, align 16
; ││└
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330 within `forcefold`
     store {}* inttoptr (i64 5983451472 to {}*), {}** %.sub, align 8
     store {}* inttoptr (i64 5983450976 to {}*), {}** %10, align 8
     store {}* inttoptr (i64 5983453888 to {}*), {}** %137, align 8
     store {}* %143, {}** %138, align 8
     %144 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4734466288 to {}*), {}** nonnull %.sub, i32 4)
     store {}* %144, {}** %51, align 8
; │││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %144, {}** %.sub, align 8
     store {}* inttoptr (i64 4299752064 to {}*), {}** %10, align 8
     %145 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %146 = bitcast {}* %145 to i64*
     %147 = getelementptr inbounds i64, i64* %146, i64 -1
     %148 = load atomic i64, i64* %147 unordered, align 8
     %149 = and i64 %148, -16
     switch i64 %149, label %post_is242 [
    i64 4759728480, label %L271
    i64 4741095904, label %post_box_union
    i64 5974287984, label %is241
  ]

L271:                                             ; preds = %L257
     store {}* %145, {}** %56, align 16
     %150 = call i8 @"j_==_7310"({}* nonnull %145, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass206

L285:                                             ; preds = %pass206
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %144, {}** %.sub, align 8
     store {}* inttoptr (i64 4299752064 to {}*), {}** %10, align 8
     %151 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %152 = bitcast {}* %151 to i64*
     %153 = getelementptr inbounds i64, i64* %152, i64 -1
     %154 = load atomic i64, i64* %153 unordered, align 8
     %155 = and i64 %154, -16
     switch i64 %155, label %post_is [
    i64 4759728480, label %L289
    i64 4741095904, label %post_box_union223
    i64 5974287984, label %is
  ]

L289:                                             ; preds = %L285
     store {}* %151, {}** %56, align 16
     %156 = call i8 @"j_==_7310"({}* nonnull %151, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass228

L303:                                             ; preds = %pass228
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:335 within `forcefold`
     store {}* %144, {}** %.sub, align 8
     store {}* inttoptr (i64 4299752064 to {}*), {}** %10, align 8
     %157 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     store {}* %157, {}** %56, align 16
; │││┌ @ essentials.jl:869 within `Val`
      store {}* inttoptr (i64 4688645968 to {}*), {}** %.sub, align 8
      store {}* %157, {}** %10, align 8
      %158 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L307

L307:                                             ; preds = %pass228, %pass206, %L303
     %value_phi208 = phi {}* [ %157, %L303 ], [ inttoptr (i64 6230679232 to {}*), %pass228 ], [ inttoptr (i64 6230679232 to {}*), %pass206 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:525
    %159 = bitcast {}* %value_phi208 to i64*
    %160 = getelementptr inbounds i64, i64* %159, i64 -1
    %161 = load atomic i64, i64* %160 unordered, align 8
    %162 = and i64 %161, -16
    %163 = inttoptr i64 %162 to {}*
    %exactly_isa210.not = icmp eq {}* %163, inttoptr (i64 5974287984 to {}*)
    br i1 %exactly_isa210.not, label %L318, label %L318.thread

L318.thread:                                      ; preds = %L307
    store {}* %value_phi208, {}** %56, align 16
    store {}* inttoptr (i64 5974287984 to {}*), {}** %.sub, align 8
    store {}* %value_phi208, {}** %10, align 8
    %164 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
    br label %L324

L318:                                             ; preds = %L307
    %.not612 = icmp eq {}* %value_phi208, null
    br i1 %.not612, label %L329, label %L324

L324:                                             ; preds = %L318, %L318.thread
    %unbox459.in.in = phi {}* [ %164, %L318.thread ], [ %value_phi208, %L318 ]
    %unbox459.in = bitcast {}* %unbox459.in.in to i32*
    %unbox459 = load i32, i32* %unbox459.in, align 4
; │└
; │ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:556 within `guaranteed_const_nongen`
; │┌ @ Base.jl:159 within `==`
    %.not596 = icmp eq i32 %unbox459, 0
; └└
  br i1 %.not596, label %L507, label %L329

L329:                                             ; preds = %pass71, %L324, %L318
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1222
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %getfield102 = load atomic {}*, {}** %50 unordered, align 8
      store {}* %getfield102, {}** %56, align 16
; │││└
     %165 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield102, {}* nonnull %getfield67, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not602 = icmp eq {}* %165, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not602, label %L363, label %L342

L342:                                             ; preds = %L329
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1223
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield105 = load atomic {}*, {}** %50 unordered, align 8
    store {}* %getfield105, {}** %56, align 16
; │└
   %166 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield105, {}* nonnull %getfield67, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not603 = icmp eq {}* %166, inttoptr (i64 4301375048 to {}*)
   br i1 %.not603, label %L346, label %L350

L346:                                             ; preds = %L342
   store {}* %getfield67, {}** %.sub, align 8
   %167 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %167)
   unreachable

L350:                                             ; preds = %L342
; └
  %168 = bitcast {}* %166 to i64*
  %169 = getelementptr inbounds i64, i64* %168, i64 -1
  %170 = load atomic i64, i64* %169 unordered, align 8
  %171 = and i64 %170, -16
  %172 = inttoptr i64 %171 to {}*
  %exactly_isa109.not = icmp eq {}* %172, inttoptr (i64 4688423472 to {}*)
  br i1 %exactly_isa109.not, label %L507, label %L357

L357:                                             ; preds = %L350
  store {}* %166, {}** %56, align 16
  store {}* inttoptr (i64 4688423472 to {}*), {}** %.sub, align 8
  store {}* %166, {}** %10, align 8
  %173 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  br label %L507

L363:                                             ; preds = %L329
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1230
  %174 = call nonnull {}* inttoptr (i64 4304459652 to {}* ({}*)*)({}* inttoptr (i64 4688423472 to {}*))
  %175 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe743, i64 0, i64 4
  store {}* %174, {}** %175, align 16
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1231
  store {}* %0, {}** %.sub, align 8
  store {}* %174, {}** %10, align 8
  %176 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
  store {}* %getfield67, {}** %176, align 8
  %177 = call nonnull {}* @"j1_setindex!_7304"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1232
  %178 = bitcast {}* %174 to i64*
  %179 = getelementptr inbounds i64, i64* %178, i64 -1
  %180 = load atomic i64, i64* %179 unordered, align 8
  %181 = and i64 %180, -16
  %182 = inttoptr i64 %181 to {}*
  %exactly_isa115.not = icmp eq {}* %182, inttoptr (i64 4687982016 to {}*)
  br i1 %exactly_isa115.not, label %L368, label %L371

L368:                                             ; preds = %L363
; ┌ @ binaryplatforms.jl:173 within `repr`
   %183 = bitcast {}* %174 to [2 x {}*]*
   %184 = call nonnull {}* @"j_#repr#12_7305"([2 x {}*]* nocapture readonly %183)
; └
  br label %L373

L371:                                             ; preds = %L363
  store {}* %174, {}** %.sub, align 8
  %185 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4692359824 to {}*), {}** nonnull %.sub, i32 1)
  br label %L373

L373:                                             ; preds = %L371, %L368
  %value_phi116 = phi {}* [ %184, %L368 ], [ %185, %L371 ]
  store {}* %value_phi116, {}** %56, align 16
  call void @j_println_7306({}* inttoptr (i64 6015889376 to {}*), {}* nonnull %value_phi116)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1234
  %186 = bitcast {}* %getfield67 to {}**
  %187 = load atomic {}*, {}** %186 unordered, align 8
  %isdefined.not = icmp eq {}* %187, null
  br i1 %isdefined.not, label %L491, label %pass120

L381:                                             ; preds = %pass120
  store {}* %187, {}** %51, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ boot.jl:245 within `Typeof`
    store {}* inttoptr (i64 4759733936 to {}*), {}** %.sub, align 8
    store {}* %187, {}** %10, align 8
    %188 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
    br label %L386

L384:                                             ; preds = %pass120
    %189 = icmp ult {}* %316, inttoptr (i64 1024 to {}*)
    br i1 %189, label %guard_pass197, label %L386

L386:                                             ; preds = %guard_pass197, %L384, %L381
    %value_phi122 = phi {}* [ %188, %L381 ], [ %316, %L384 ], [ %526, %guard_pass197 ]
    store {}* %187, {}** %51, align 8
    store {}* %value_phi122, {}** %56, align 16
; │└
; │┌ @ errorshow.jl:185 within `typesof`
    store {}* %value_phi122, {}** %.sub, align 8
    store {}* %0, {}** %10, align 8
    store {}* %187, {}** %176, align 8
    %190 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 3
    store {}* inttoptr (i64 4725390144 to {}*), {}** %190, align 8
    %191 = call nonnull {}* @jl_f_tuple({}* null, {}** nonnull %.sub, i32 4)
    %192 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe743, i64 0, i64 8
    store {}* %191, {}** %192, align 16
; ││┌ @ array.jl:724 within `_array_for` @ array.jl:721
; │││┌ @ abstractarray.jl:873 within `similar` @ abstractarray.jl:874
; ││││┌ @ boot.jl:484 within `Array` @ boot.jl:475
       %193 = call nonnull {}* inttoptr (i64 4304360888 to {}* ({}*, i64)*)({}* inttoptr (i64 4759731152 to {}*), i64 4)
       %194 = bitcast {}* %193 to { i8*, i64, i16, i16, i32 }*
       %arrayflags_ptr129 = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %194, i64 0, i32 2
       %195 = bitcast {}* %193 to {}**
       %196 = getelementptr inbounds {}*, {}** %195, i64 5
       %197 = bitcast {}* %193 to {}***
       %198 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe743, i64 0, i64 7
       store {}* %193, {}** %198, align 8
; ││└└└
; ││┌ @ tuple.jl:31 within `getindex`
     %199 = call {}* @ijl_get_nth_field_checked({}* nonnull %191, i64 0)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %200 = bitcast {}* %199 to i64*
     %201 = getelementptr inbounds i64, i64* %200, i64 -1
     %202 = load atomic i64, i64* %201 unordered, align 8
     %203 = and i64 %202, -16
     %204 = add i64 %203, -16
     %switch = icmp ult i64 %204, 64
     br i1 %switch, label %L396, label %L399

L396:                                             ; preds = %L386
     store {}* %199, {}** %56, align 16
     store {}* inttoptr (i64 4759733936 to {}*), {}** %.sub, align 8
     store {}* %199, {}** %10, align 8
     %205 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
     br label %L401

L399:                                             ; preds = %L386
     %206 = inttoptr i64 %203 to {}*
     %207 = icmp ult {}* %206, inttoptr (i64 1024 to {}*)
     br i1 %207, label %guard_pass194, label %L401

L401:                                             ; preds = %guard_pass194, %L399, %L396
     %value_phi128 = phi {}* [ %205, %L396 ], [ %206, %L399 ], [ %523, %guard_pass194 ]
; ││└
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags130 = load i16, i16* %arrayflags_ptr129, align 2
     %208 = and i16 %arrayflags130, 3
     %has_owner131 = icmp eq i16 %208, 3
     br i1 %has_owner131, label %array_owned132, label %merge_own133

L426:                                             ; preds = %idxend148, %411
     %value_phi153 = phi {}* [ %413, %411 ], [ %arrayref, %idxend148 ]
; └└└
  %209 = bitcast {}* %value_phi153 to i64*
  %210 = getelementptr inbounds i64, i64* %209, i64 -1
  %211 = load atomic i64, i64* %210 unordered, align 8
  %212 = and i64 %211, -16
  %213 = inttoptr i64 %212 to {}*
  %exactly_isa155.not = icmp eq {}* %213, inttoptr (i64 4687982016 to {}*)
  br i1 %exactly_isa155.not, label %L430, label %L433

L430:                                             ; preds = %L426
; ┌ @ binaryplatforms.jl:173 within `repr`
   %214 = bitcast {}* %value_phi153 to [2 x {}*]*
   store {}* %value_phi153, {}** %56, align 16
   %215 = call nonnull {}* @"j_#repr#12_7305"([2 x {}*]* nocapture readonly %214)
; └
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L435

L433:                                             ; preds = %L426
     store {}* %value_phi153, {}** %56, align 16
; └└└
  store {}* %value_phi153, {}** %.sub, align 8
  %216 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4692359824 to {}*), {}** nonnull %.sub, i32 1)
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L435

L435:                                             ; preds = %L433, %L430
     %value_phi156 = phi {}* [ %215, %L430 ], [ %216, %L433 ]
     store {}* %value_phi156, {}** %56, align 16
; └└└
  call void @j_println_7306({}* inttoptr (i64 6015889072 to {}*), {}* nonnull %value_phi156)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ boot.jl:245 within `Typeof`
    br i1 %switch693, label %L439, label %L442

L439:                                             ; preds = %L435
    store {}* inttoptr (i64 4759733936 to {}*), {}** %.sub, align 8
    store {}* %187, {}** %10, align 8
    %217 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L444

L442:                                             ; preds = %L435
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ boot.jl:245 within `Typeof`
    %218 = icmp ult {}* %316, inttoptr (i64 1024 to {}*)
    br i1 %218, label %guard_pass191, label %L444

L444:                                             ; preds = %guard_pass191, %L442, %L439
    %value_phi159 = phi {}* [ %217, %L439 ], [ %316, %L442 ], [ %520, %guard_pass191 ]
    store {}* %value_phi159, {}** %56, align 16
; │└
; │┌ @ errorshow.jl:185 within `typesof`
    store {}* %value_phi159, {}** %.sub, align 8
    store {}* %0, {}** %10, align 8
    store {}* %187, {}** %176, align 8
    store {}* inttoptr (i64 4725390144 to {}*), {}** %190, align 8
    %219 = call nonnull {}* @jl_f_tuple({}* null, {}** nonnull %.sub, i32 4)
    store {}* %219, {}** %192, align 16
; ││┌ @ array.jl:724 within `_array_for` @ array.jl:721
; │││┌ @ abstractarray.jl:873 within `similar` @ abstractarray.jl:874
; ││││┌ @ boot.jl:484 within `Array` @ boot.jl:475
       %220 = call nonnull {}* inttoptr (i64 4304360888 to {}* ({}*, i64)*)({}* inttoptr (i64 4759731152 to {}*), i64 4)
       %221 = bitcast {}* %220 to { i8*, i64, i16, i16, i32 }*
       %arrayflags_ptr166 = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %221, i64 0, i32 2
       %222 = bitcast {}* %220 to {}**
       %223 = getelementptr inbounds {}*, {}** %222, i64 5
       %224 = bitcast {}* %220 to {}***
       store {}* %220, {}** %198, align 8
; ││└└└
; ││┌ @ tuple.jl:31 within `getindex`
     %225 = call {}* @ijl_get_nth_field_checked({}* nonnull %219, i64 0)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %226 = bitcast {}* %225 to i64*
     %227 = getelementptr inbounds i64, i64* %226, i64 -1
     %228 = load atomic i64, i64* %227 unordered, align 8
     %229 = and i64 %228, -16
     %230 = add i64 %229, -16
     %switch691 = icmp ult i64 %230, 64
     br i1 %switch691, label %L454, label %L457

L454:                                             ; preds = %L444
     store {}* %225, {}** %56, align 16
     store {}* inttoptr (i64 4759733936 to {}*), {}** %.sub, align 8
     store {}* %225, {}** %10, align 8
     %231 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L459

L457:                                             ; preds = %L444
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ boot.jl:245 within `Typeof`
     %232 = inttoptr i64 %229 to {}*
     %233 = icmp ult {}* %232, inttoptr (i64 1024 to {}*)
     br i1 %233, label %guard_pass188, label %L459

L459:                                             ; preds = %guard_pass188, %L457, %L454
     %value_phi165 = phi {}* [ %231, %L454 ], [ %232, %L457 ], [ %517, %guard_pass188 ]
; ││└
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags167 = load i16, i16* %arrayflags_ptr166, align 2
     %234 = and i16 %arrayflags167, 3
     %has_owner168 = icmp eq i16 %234, 3
     br i1 %has_owner168, label %array_owned169, label %merge_own170

L482:                                             ; preds = %509
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ boot.jl:245 within `Typeof`
   store {}* inttoptr (i64 4759733936 to {}*), {}** %.sub, align 8
   store {}* %187, {}** %10, align 8
   %235 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L487

L485:                                             ; preds = %509
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ boot.jl:245 within `Typeof`
   %236 = icmp ult {}* %316, inttoptr (i64 1024 to {}*)
   br i1 %236, label %guard_pass, label %L487

L487:                                             ; preds = %guard_pass, %L485, %L482
   %value_phi180 = phi {}* [ %235, %L482 ], [ %316, %L485 ], [ %514, %guard_pass ]
   store {}* %value_phi180, {}** %56, align 16
; └
  store {}* %value_phi180, {}** %.sub, align 8
  store {}* %0, {}** %10, align 8
  store {}* %187, {}** %176, align 8
  store {}* inttoptr (i64 4725390144 to {}*), {}** %190, align 8
  %237 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 5679445952 to {}*), {}** nonnull %.sub, i32 4)
  store {}* %237, {}** %56, align 16
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1245
  call void inttoptr (i64 4304694488 to void ({}*, i64, {}*)*)({}* nonnull %174, i64 0, {}* nonnull %237)
  br label %L491

L491:                                             ; preds = %L487, %L373
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1248
; ┌ @ show.jl:1181 within `macro expansion`
   store {}* inttoptr (i64 6015888704 to {}*), {}** %.sub, align 8
   store {}* %174, {}** %10, align 8
   %238 = call nonnull {}* @jl_f_tuple({}* null, {}** nonnull %.sub, i32 2)
   store {}* %238, {}** %56, align 16
; └
  store {}* %238, {}** %.sub, align 8
  %239 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4692359824 to {}*), {}** nonnull %.sub, i32 1)
  store {}* %239, {}** %56, align 16
  call void @j_println_7306({}* inttoptr (i64 6015888672 to {}*), {}* nonnull %239)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1249
  %exactly_isa182.not = icmp eq {}* %182, inttoptr (i64 4688423472 to {}*)
  br i1 %exactly_isa182.not, label %L507, label %L501

L501:                                             ; preds = %L491
  store {}* inttoptr (i64 4688423472 to {}*), {}** %.sub, align 8
  store {}* %174, {}** %10, align 8
  %240 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L507

L507:                                             ; preds = %L501, %L491, %L357, %L350, %L324
     %value_phi73 = phi {}* [ %getfield67, %L324 ], [ %166, %L350 ], [ %173, %L357 ], [ %174, %L491 ], [ %240, %L501 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261
; ┌ @ essentials.jl:645 within `setindex!`
   %241 = bitcast {}* %129 to { i8*, i64, i16, i16, i32 }*
   %arraylen_ptr74 = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %241, i64 0, i32 1
   %arraylen75 = load i64, i64* %arraylen_ptr74, align 8
   %inbounds76.not = icmp eq i64 %arraylen75, 0
   br i1 %inbounds76.not, label %oob77, label %idxend79

L521:                                             ; preds = %merge_own84._crit_edge
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1269
  store {}* inttoptr (i64 11381649040 to {}*), {}** %.sub, align 8
  store {}* %302, {}** %10, align 8
  %242 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %243 = bitcast {}* %242 to {}**
  %unbox475.unpack = load {}*, {}** %243, align 8
  store {}* %unbox475.unpack, {}** %56, align 16
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1218 within `make_zero`
  %ptls_load717769770 = load i8*, i8** %52, align 8
  %box462 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load717769770, i32 1136, i32 16) #13
  %244 = bitcast {}* %box462 to i64*
  %245 = getelementptr inbounds i64, i64* %244, i64 -1
  store atomic i64 11381649040, i64* %245 unordered, align 8
  %246 = bitcast {}* %box462 to {}**
  store {}* %unbox475.unpack, {}** %246, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1269
  br label %guard_pass418

L525:                                             ; preds = %guard_pass418, %guard_pass411, %L207
  %unbox406.unpack.pn = phi {}* [ %unbox406.unpack, %L207 ], [ %unbox413.unpack, %guard_pass411 ], [ %unbox420.unpack, %guard_pass418 ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero`
; ┌ @ essentials.jl:645 within `setindex!`
   %247 = bitcast {}* %74 to { i8*, i64, i16, i16, i32 }*
   %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %247, i64 0, i32 1
   %arraylen = load i64, i64* %arraylen_ptr, align 8
   %inbounds.not = icmp eq i64 %arraylen, 0
   br i1 %inbounds.not, label %oob, label %idxend

L540:                                             ; preds = %268
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1269 within `make_zero`
  store {}* inttoptr (i64 11381562640 to {}*), {}** %.sub, align 8
  store {}* %271, {}** %10, align 8
  %248 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %249 = bitcast {}* %248 to {}**
  %unbox436.unpack.unpack = load {}*, {}** %249, align 8
  store {}* %unbox436.unpack.unpack, {}** %56, align 16
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1218 within `make_zero`
  %ptls_load720763764 = load i8*, i8** %52, align 8
  %box423 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load720763764, i32 1136, i32 16) #13
  %250 = bitcast {}* %box423 to i64*
  %251 = getelementptr inbounds i64, i64* %250, i64 -1
  store atomic i64 11381562640, i64* %251 unordered, align 8
  %252 = bitcast {}* %box423 to {}**
  store {}* %unbox436.unpack.unpack, {}** %252, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1269 within `make_zero`
  br label %L541

L541:                                             ; preds = %.L541_crit_edge, %L540
  %.pre-phi = phi {}** [ %.phi.trans.insert776, %.L541_crit_edge ], [ %252, %L540 ]
  %unbox37.unpack.unpack = phi {}* [ %unbox436.unpack.unpack, %L540 ], [ %unbox37.unpack.unpack.pre, %.L541_crit_edge ]
  %value_phi36 = phi {}* [ %box423, %L540 ], [ %271, %.L541_crit_edge ]
  br label %common.ret

fail:                                             ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4759728896 to {}*), {}* %11)
    unreachable

pass:                                             ; preds = %top
    %253 = icmp eq {}* %11, inttoptr (i64 4827820512 to {}*)
    br i1 %253, label %L11, label %L85

fail22:                                           ; preds = %L119
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4759728896 to {}*), {}* %76)
    unreachable

pass23:                                           ; preds = %L119
    %254 = icmp eq {}* %76, inttoptr (i64 4827820512 to {}*)
    br i1 %254, label %L136, label %L208

oob:                                              ; preds = %L525
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero`
; ┌ @ essentials.jl:645 within `setindex!`
   %errorbox = alloca i64, align 8
   store i64 1, i64* %errorbox, align 8
   call void @ijl_bounds_error_ints({}* %74, i64* nonnull %errorbox, i64 1)
   unreachable

idxend:                                           ; preds = %L525
   %arrayflags_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %247, i64 0, i32 2
   %arrayflags = load i16, i16* %arrayflags_ptr, align 2
   %255 = and i16 %arrayflags, 3
   %has_owner = icmp eq i16 %255, 3
   br i1 %has_owner, label %array_owned, label %merge_own

array_owned:                                      ; preds = %idxend
   %256 = bitcast {}* %74 to {}**
   %257 = getelementptr inbounds {}*, {}** %256, i64 5
   %external_owner = load {}*, {}** %257, align 8
   br label %merge_own

merge_own:                                        ; preds = %array_owned, %idxend
   %data_owner = phi {}* [ %74, %idxend ], [ %external_owner, %array_owned ]
   %258 = bitcast {}* %74 to {}***
   %arrayptr = load {}**, {}*** %258, align 8
   store {}* %unbox406.unpack.pn, {}** %56, align 16
   %ptls_load723759760 = load i8*, i8** %52, align 8
   %box27 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load723759760, i32 1136, i32 16) #13
   %259 = bitcast {}* %box27 to i64*
   %260 = getelementptr inbounds i64, i64* %259, i64 -1
   store atomic i64 11381649040, i64* %260 unordered, align 8
   %261 = bitcast {}* %box27 to {}**
   store {}* %unbox406.unpack.pn, {}** %261, align 8
   store atomic {}* %box27, {}** %arrayptr release, align 8
   %262 = bitcast {}* %data_owner to i64*
   %263 = getelementptr inbounds i64, i64* %262, i64 -1
   %264 = load atomic i64, i64* %263 unordered, align 8
   %265 = and i64 %264, 3
   %266 = icmp eq i64 %265, 3
   br i1 %266, label %267, label %268

267:                                              ; preds = %merge_own
   call void @ijl_gc_queue_root({}* nonnull %data_owner)
   br label %268

268:                                              ; preds = %267, %merge_own
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1267 within `make_zero`
; ┌ @ pointer.jl:65 within `unsafe_convert`
   %269 = bitcast {}* %74 to i8**
   %arrayptr29 = load i8*, i8** %269, align 8
   %270 = ptrtoint i8* %arrayptr29 to i64
; └
  %271 = call nonnull {}* inttoptr (i64 4304467456 to {}* ({}*, i64, i32)*)({}* inttoptr (i64 11381562640 to {}*), i64 %270, i32 1)
  store {}* %271, {}** %51, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1268 within `make_zero`
  %ptls_load726761762 = load i8*, i8** %52, align 8
  %box31 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load726761762, i32 1136, i32 16) #13
  %272 = bitcast {}* %box31 to i64*
  %273 = getelementptr inbounds i64, i64* %272, i64 -1
  store atomic i64 11381562640, i64* %273 unordered, align 8
  %memcpy_refined_dst33 = bitcast {}* %box31 to {}**
  store {}* %55, {}** %memcpy_refined_dst33, align 8
  store {}* %box31, {}** %56, align 16
  store {}* %0, {}** %.sub, align 8
  store {}* %271, {}** %10, align 8
  %274 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
  store {}* %box31, {}** %274, align 8
  %275 = call nonnull {}* @"j1_setindex!_7304"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1269 within `make_zero`
  %276 = bitcast {}* %271 to i64*
  %277 = getelementptr inbounds i64, i64* %276, i64 -1
  %278 = load atomic i64, i64* %277 unordered, align 8
  %279 = and i64 %278, -16
  %280 = inttoptr i64 %279 to {}*
  %exactly_isa35.not = icmp eq {}* %280, inttoptr (i64 11381562640 to {}*)
  br i1 %exactly_isa35.not, label %.L541_crit_edge, label %L540

.L541_crit_edge:                                  ; preds = %268
  %.phi.trans.insert776 = bitcast {}* %271 to {}**
  %unbox37.unpack.unpack.pre = load {}*, {}** %.phi.trans.insert776, align 8
  br label %L541

fail70:                                           ; preds = %L242
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4759728896 to {}*), {}* %131)
    unreachable

pass71:                                           ; preds = %L242
    %281 = icmp eq {}* %131, inttoptr (i64 4827820512 to {}*)
    br i1 %281, label %L257, label %L329

oob77:                                            ; preds = %L507
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261
; ┌ @ essentials.jl:645 within `setindex!`
   %errorbox78 = alloca i64, align 8
   store i64 1, i64* %errorbox78, align 8
   call void @ijl_bounds_error_ints({}* %129, i64* nonnull %errorbox78, i64 1)
   unreachable

idxend79:                                         ; preds = %L507
   %arrayflags_ptr80 = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %241, i64 0, i32 2
   %arrayflags81 = load i16, i16* %arrayflags_ptr80, align 2
   %282 = and i16 %arrayflags81, 3
   %has_owner82 = icmp eq i16 %282, 3
   br i1 %has_owner82, label %array_owned83, label %merge_own84

array_owned83:                                    ; preds = %idxend79
   %283 = bitcast {}* %129 to {}**
   %284 = getelementptr inbounds {}*, {}** %283, i64 5
   %external_owner85 = load {}*, {}** %284, align 8
   br label %merge_own84

merge_own84:                                      ; preds = %array_owned83, %idxend79
   %data_owner86 = phi {}* [ %129, %idxend79 ], [ %external_owner85, %array_owned83 ]
   %285 = bitcast {}* %129 to {}***
   %arrayptr88 = load {}**, {}*** %285, align 8
   store atomic {}* %value_phi73, {}** %arrayptr88 release, align 8
   %286 = bitcast {}* %data_owner86 to i64*
   %287 = getelementptr inbounds i64, i64* %286, i64 -1
   %288 = load atomic i64, i64* %287 unordered, align 8
   %289 = and i64 %288, 3
   %290 = icmp eq i64 %289, 3
   %291 = ptrtoint {}** %arrayptr88 to i64
   %292 = inttoptr i64 %291 to i8*
   br i1 %290, label %293, label %merge_own84._crit_edge

293:                                              ; preds = %merge_own84
   %294 = bitcast {}* %value_phi73 to i64*
   %295 = getelementptr inbounds i64, i64* %294, i64 -1
   %296 = load atomic i64, i64* %295 unordered, align 8
   %297 = and i64 %296, 1
   %298 = icmp eq i64 %297, 0
   br i1 %298, label %299, label %merge_own84._crit_edge

299:                                              ; preds = %293
   call void @ijl_gc_queue_root({}* nonnull %data_owner86)
   %300 = bitcast {}* %129 to i8**
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1267
; ┌ @ pointer.jl:65 within `unsafe_convert`
   %arrayptr90.pre.pre = load i8*, i8** %300, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261
; ┌ @ essentials.jl:645 within `setindex!`
   br label %merge_own84._crit_edge

merge_own84._crit_edge:                           ; preds = %299, %293, %merge_own84
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1267
; ┌ @ pointer.jl:65 within `unsafe_convert`
   %arrayptr90 = phi i8* [ %292, %merge_own84 ], [ %arrayptr90.pre.pre, %299 ], [ %292, %293 ]
   %301 = ptrtoint i8* %arrayptr90 to i64
; └
  %302 = call nonnull {}* inttoptr (i64 4304467456 to {}* ({}*, i64, i32)*)({}* inttoptr (i64 11381649040 to {}*), i64 %301, i32 1)
  store {}* %302, {}** %51, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1268
  %ptls_load729767768 = load i8*, i8** %52, align 8
  %box92 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load729767768, i32 1136, i32 16) #13
  %303 = bitcast {}* %box92 to i64*
  %304 = getelementptr inbounds i64, i64* %303, i64 -1
  store atomic i64 11381649040, i64* %304 unordered, align 8
  %memcpy_refined_dst94 = bitcast {}* %box92 to {}**
  store {}* %getfield67, {}** %memcpy_refined_dst94, align 8
  store {}* %box92, {}** %56, align 16
  store {}* %0, {}** %.sub, align 8
  store {}* %302, {}** %10, align 8
  %305 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
  store {}* %box92, {}** %305, align 8
  %306 = call nonnull {}* @"j1_setindex!_7304"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1269
  %307 = bitcast {}* %302 to i64*
  %308 = getelementptr inbounds i64, i64* %307, i64 -1
  %309 = load atomic i64, i64* %308 unordered, align 8
  %310 = and i64 %309, -16
  %311 = inttoptr i64 %310 to {}*
  %exactly_isa96.not = icmp eq {}* %311, inttoptr (i64 11381649040 to {}*)
  br i1 %exactly_isa96.not, label %merge_own84._crit_edge.guard_pass418_crit_edge, label %L521

merge_own84._crit_edge.guard_pass418_crit_edge:   ; preds = %merge_own84._crit_edge
  %.phi.trans.insert774 = bitcast {}* %302 to {}**
  %unbox420.unpack.pre = load {}*, {}** %.phi.trans.insert774, align 8
  br label %guard_pass418

pass120:                                          ; preds = %L373
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ boot.jl:245 within `Typeof`
    %312 = bitcast {}* %187 to i64*
    %313 = getelementptr inbounds i64, i64* %312, i64 -1
    %314 = load atomic i64, i64* %313 unordered, align 8
    %315 = and i64 %314, -16
    %316 = inttoptr i64 %315 to {}*
    %317 = add i64 %315, -16
    %switch693 = icmp ult i64 %317, 64
    br i1 %switch693, label %L381, label %L384

array_owned132:                                   ; preds = %L401
; │└
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ essentials.jl:645 within `setindex!`
     %external_owner134 = load {}*, {}** %196, align 8
     br label %merge_own133

merge_own133:                                     ; preds = %array_owned132, %L401
     %data_owner135 = phi {}* [ %193, %L401 ], [ %external_owner134, %array_owned132 ]
     %arrayptr137 = load {}**, {}*** %197, align 8
     store atomic {}* %value_phi128, {}** %arrayptr137 release, align 8
     %318 = bitcast {}* %data_owner135 to i64*
     %319 = getelementptr inbounds i64, i64* %318, i64 -1
     %320 = load atomic i64, i64* %319 unordered, align 8
     %321 = and i64 %320, 3
     %322 = icmp eq i64 %321, 3
     br i1 %322, label %323, label %330

323:                                              ; preds = %merge_own133
     %324 = bitcast {}* %value_phi128 to i64*
     %325 = getelementptr inbounds i64, i64* %324, i64 -1
     %326 = load atomic i64, i64* %325 unordered, align 8
     %327 = and i64 %326, 1
     %328 = icmp eq i64 %327, 0
     br i1 %328, label %329, label %330

329:                                              ; preds = %323
     call void @ijl_gc_queue_root({}* nonnull %data_owner135)
     br label %330

330:                                              ; preds = %329, %323, %merge_own133
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %331 = call {}* @ijl_get_nth_field_checked({}* nonnull %191, i64 1)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %332 = bitcast {}* %331 to i64*
     %333 = getelementptr inbounds i64, i64* %332, i64 -1
     %334 = load atomic i64, i64* %333 unordered, align 8
     %335 = and i64 %334, -16
     %336 = add i64 %335, -16
     %switch.1 = icmp ult i64 %336, 64
     br i1 %switch.1, label %L396.1, label %L399.1

L399.1:                                           ; preds = %330
     %337 = inttoptr i64 %335 to {}*
     %338 = icmp ult {}* %337, inttoptr (i64 1024 to {}*)
     br i1 %338, label %guard_pass194.1, label %L401.1

guard_pass194.1:                                  ; preds = %L399.1
     %339 = getelementptr inbounds i8, i8* @small_typeof, i64 %335
     %340 = bitcast i8* %339 to {}**
     %341 = load {}*, {}** %340, align 8
     br label %L401.1

L396.1:                                           ; preds = %330
     store {}* %331, {}** %56, align 16
     store {}* inttoptr (i64 4759733936 to {}*), {}** %.sub, align 8
     store {}* %331, {}** %10, align 8
     %342 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
     br label %L401.1

L401.1:                                           ; preds = %L396.1, %guard_pass194.1, %L399.1
     %value_phi128.1 = phi {}* [ %342, %L396.1 ], [ %337, %L399.1 ], [ %341, %guard_pass194.1 ]
; ││└
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags130.1 = load i16, i16* %arrayflags_ptr129, align 2
     %343 = and i16 %arrayflags130.1, 3
     %has_owner131.1 = icmp eq i16 %343, 3
     br i1 %has_owner131.1, label %array_owned132.1, label %merge_own133.1

array_owned132.1:                                 ; preds = %L401.1
     %external_owner134.1 = load {}*, {}** %196, align 8
     br label %merge_own133.1

merge_own133.1:                                   ; preds = %array_owned132.1, %L401.1
     %data_owner135.1 = phi {}* [ %193, %L401.1 ], [ %external_owner134.1, %array_owned132.1 ]
     %arrayptr137.1 = load {}**, {}*** %197, align 8
     %344 = getelementptr inbounds {}*, {}** %arrayptr137.1, i64 1
     store atomic {}* %value_phi128.1, {}** %344 release, align 8
     %345 = bitcast {}* %data_owner135.1 to i64*
     %346 = getelementptr inbounds i64, i64* %345, i64 -1
     %347 = load atomic i64, i64* %346 unordered, align 8
     %348 = and i64 %347, 3
     %349 = icmp eq i64 %348, 3
     br i1 %349, label %350, label %357

350:                                              ; preds = %merge_own133.1
     %351 = bitcast {}* %value_phi128.1 to i64*
     %352 = getelementptr inbounds i64, i64* %351, i64 -1
     %353 = load atomic i64, i64* %352 unordered, align 8
     %354 = and i64 %353, 1
     %355 = icmp eq i64 %354, 0
     br i1 %355, label %356, label %357

356:                                              ; preds = %350
     call void @ijl_gc_queue_root({}* nonnull %data_owner135.1)
     br label %357

357:                                              ; preds = %356, %350, %merge_own133.1
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %358 = call {}* @ijl_get_nth_field_checked({}* nonnull %191, i64 2)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %359 = bitcast {}* %358 to i64*
     %360 = getelementptr inbounds i64, i64* %359, i64 -1
     %361 = load atomic i64, i64* %360 unordered, align 8
     %362 = and i64 %361, -16
     %363 = add i64 %362, -16
     %switch.2 = icmp ult i64 %363, 64
     br i1 %switch.2, label %L396.2, label %L399.2

L399.2:                                           ; preds = %357
     %364 = inttoptr i64 %362 to {}*
     %365 = icmp ult {}* %364, inttoptr (i64 1024 to {}*)
     br i1 %365, label %guard_pass194.2, label %L401.2

guard_pass194.2:                                  ; preds = %L399.2
     %366 = getelementptr inbounds i8, i8* @small_typeof, i64 %362
     %367 = bitcast i8* %366 to {}**
     %368 = load {}*, {}** %367, align 8
     br label %L401.2

L396.2:                                           ; preds = %357
     store {}* %358, {}** %56, align 16
     store {}* inttoptr (i64 4759733936 to {}*), {}** %.sub, align 8
     store {}* %358, {}** %10, align 8
     %369 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
     br label %L401.2

L401.2:                                           ; preds = %L396.2, %guard_pass194.2, %L399.2
     %value_phi128.2 = phi {}* [ %369, %L396.2 ], [ %364, %L399.2 ], [ %368, %guard_pass194.2 ]
; ││└
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags130.2 = load i16, i16* %arrayflags_ptr129, align 2
     %370 = and i16 %arrayflags130.2, 3
     %has_owner131.2 = icmp eq i16 %370, 3
     br i1 %has_owner131.2, label %array_owned132.2, label %merge_own133.2

array_owned132.2:                                 ; preds = %L401.2
     %external_owner134.2 = load {}*, {}** %196, align 8
     br label %merge_own133.2

merge_own133.2:                                   ; preds = %array_owned132.2, %L401.2
     %data_owner135.2 = phi {}* [ %193, %L401.2 ], [ %external_owner134.2, %array_owned132.2 ]
     %arrayptr137.2 = load {}**, {}*** %197, align 8
     %371 = getelementptr inbounds {}*, {}** %arrayptr137.2, i64 2
     store atomic {}* %value_phi128.2, {}** %371 release, align 8
     %372 = bitcast {}* %data_owner135.2 to i64*
     %373 = getelementptr inbounds i64, i64* %372, i64 -1
     %374 = load atomic i64, i64* %373 unordered, align 8
     %375 = and i64 %374, 3
     %376 = icmp eq i64 %375, 3
     br i1 %376, label %377, label %384

377:                                              ; preds = %merge_own133.2
     %378 = bitcast {}* %value_phi128.2 to i64*
     %379 = getelementptr inbounds i64, i64* %378, i64 -1
     %380 = load atomic i64, i64* %379 unordered, align 8
     %381 = and i64 %380, 1
     %382 = icmp eq i64 %381, 0
     br i1 %382, label %383, label %384

383:                                              ; preds = %377
     call void @ijl_gc_queue_root({}* nonnull %data_owner135.2)
     br label %384

384:                                              ; preds = %383, %377, %merge_own133.2
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %385 = call {}* @ijl_get_nth_field_checked({}* nonnull %191, i64 3)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %386 = bitcast {}* %385 to i64*
     %387 = getelementptr inbounds i64, i64* %386, i64 -1
     %388 = load atomic i64, i64* %387 unordered, align 8
     %389 = and i64 %388, -16
     %390 = add i64 %389, -16
     %switch.3 = icmp ult i64 %390, 64
     br i1 %switch.3, label %L396.3, label %L399.3

L399.3:                                           ; preds = %384
     %391 = inttoptr i64 %389 to {}*
     %392 = icmp ult {}* %391, inttoptr (i64 1024 to {}*)
     br i1 %392, label %guard_pass194.3, label %L401.3

guard_pass194.3:                                  ; preds = %L399.3
     %393 = getelementptr inbounds i8, i8* @small_typeof, i64 %389
     %394 = bitcast i8* %393 to {}**
     %395 = load {}*, {}** %394, align 8
     br label %L401.3

L396.3:                                           ; preds = %384
     store {}* %385, {}** %56, align 16
     store {}* inttoptr (i64 4759733936 to {}*), {}** %.sub, align 8
     store {}* %385, {}** %10, align 8
     %396 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
     br label %L401.3

L401.3:                                           ; preds = %L396.3, %guard_pass194.3, %L399.3
     %value_phi128.3 = phi {}* [ %396, %L396.3 ], [ %391, %L399.3 ], [ %395, %guard_pass194.3 ]
; ││└
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags130.3 = load i16, i16* %arrayflags_ptr129, align 2
     %397 = and i16 %arrayflags130.3, 3
     %has_owner131.3 = icmp eq i16 %397, 3
     br i1 %has_owner131.3, label %array_owned132.3, label %merge_own133.3

array_owned132.3:                                 ; preds = %L401.3
     %external_owner134.3 = load {}*, {}** %196, align 8
     br label %merge_own133.3

merge_own133.3:                                   ; preds = %array_owned132.3, %L401.3
     %data_owner135.3 = phi {}* [ %193, %L401.3 ], [ %external_owner134.3, %array_owned132.3 ]
     %arrayptr137.3 = load {}**, {}*** %197, align 8
     %398 = getelementptr inbounds {}*, {}** %arrayptr137.3, i64 3
     store atomic {}* %value_phi128.3, {}** %398 release, align 8
     %399 = bitcast {}* %data_owner135.3 to i64*
     %400 = getelementptr inbounds i64, i64* %399, i64 -1
     %401 = load atomic i64, i64* %400 unordered, align 8
     %402 = and i64 %401, 3
     %403 = icmp eq i64 %402, 3
     br i1 %403, label %404, label %411

404:                                              ; preds = %merge_own133.3
     %405 = bitcast {}* %value_phi128.3 to i64*
     %406 = getelementptr inbounds i64, i64* %405, i64 -1
     %407 = load atomic i64, i64* %406 unordered, align 8
     %408 = and i64 %407, 1
     %409 = icmp eq i64 %408, 0
     br i1 %409, label %410, label %411

410:                                              ; preds = %404
     call void @ijl_gc_queue_root({}* nonnull %data_owner135.3)
     br label %411

411:                                              ; preds = %410, %404, %merge_own133.3
; ││└
    store {}* inttoptr (i64 4687803232 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4748606912 to {}*), {}** %10, align 8
    store {}* inttoptr (i64 4697463488 to {}*), {}** %176, align 8
    store {}* %193, {}** %190, align 8
    %412 = call nonnull {}* @jl_f__apply_iterate({}* null, {}** nonnull %.sub, i32 4)
    store {}* %412, {}** %56, align 16
; │└
; │┌ @ reflection.jl:1353 within `code_typed`
    store {}* inttoptr (i64 4697474208 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4689400432 to {}*), {}** %10, align 8
    store {}* inttoptr (i64 5679445952 to {}*), {}** %176, align 8
    store {}* %412, {}** %190, align 8
    %413 = call nonnull {}* @"j1_#code_typed#25_7307"({}* inttoptr (i64 4689402000 to {}*), {}** nonnull %.sub, i32 4)
; │└
; │ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:227
; │┌ @ essentials.jl:10 within `length`
    %414 = bitcast {}* %413 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr141 = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %414, i64 0, i32 1
    %arraylen142 = load i64, i64* %arraylen_ptr141, align 8
; │└
; │┌ @ promotion.jl:521 within `==`
    %.not606 = icmp eq i64 %arraylen142, 1
; │└
   br i1 %.not606, label %idxend148, label %L426

idxend148:                                        ; preds = %411
; │┌ @ essentials.jl:13 within `getindex`
    %415 = bitcast {}* %413 to {}***
    %arrayptr150607 = load {}**, {}*** %415, align 8
    %arrayref = load {}*, {}** %arrayptr150607, align 8
    %.not608 = icmp eq {}* %arrayref, null
    br i1 %.not608, label %fail151, label %L426

fail151:                                          ; preds = %idxend148
    call void @ijl_throw({}* inttoptr (i64 4758573664 to {}*))
    unreachable

array_owned169:                                   ; preds = %L459
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ essentials.jl:645 within `setindex!`
     %external_owner171 = load {}*, {}** %223, align 8
     br label %merge_own170

merge_own170:                                     ; preds = %array_owned169, %L459
     %data_owner172 = phi {}* [ %220, %L459 ], [ %external_owner171, %array_owned169 ]
     %arrayptr174 = load {}**, {}*** %224, align 8
     store atomic {}* %value_phi165, {}** %arrayptr174 release, align 8
     %416 = bitcast {}* %data_owner172 to i64*
     %417 = getelementptr inbounds i64, i64* %416, i64 -1
     %418 = load atomic i64, i64* %417 unordered, align 8
     %419 = and i64 %418, 3
     %420 = icmp eq i64 %419, 3
     br i1 %420, label %421, label %428

421:                                              ; preds = %merge_own170
     %422 = bitcast {}* %value_phi165 to i64*
     %423 = getelementptr inbounds i64, i64* %422, i64 -1
     %424 = load atomic i64, i64* %423 unordered, align 8
     %425 = and i64 %424, 1
     %426 = icmp eq i64 %425, 0
     br i1 %426, label %427, label %428

427:                                              ; preds = %421
     call void @ijl_gc_queue_root({}* nonnull %data_owner172)
     br label %428

428:                                              ; preds = %427, %421, %merge_own170
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %429 = call {}* @ijl_get_nth_field_checked({}* nonnull %219, i64 1)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %430 = bitcast {}* %429 to i64*
     %431 = getelementptr inbounds i64, i64* %430, i64 -1
     %432 = load atomic i64, i64* %431 unordered, align 8
     %433 = and i64 %432, -16
     %434 = add i64 %433, -16
     %switch691.1 = icmp ult i64 %434, 64
     br i1 %switch691.1, label %L454.1, label %L457.1

L457.1:                                           ; preds = %428
     %435 = inttoptr i64 %433 to {}*
     %436 = icmp ult {}* %435, inttoptr (i64 1024 to {}*)
     br i1 %436, label %guard_pass188.1, label %L459.1

guard_pass188.1:                                  ; preds = %L457.1
     %437 = getelementptr inbounds i8, i8* @small_typeof, i64 %433
     %438 = bitcast i8* %437 to {}**
     %439 = load {}*, {}** %438, align 8
     br label %L459.1

L454.1:                                           ; preds = %428
     store {}* %429, {}** %56, align 16
     store {}* inttoptr (i64 4759733936 to {}*), {}** %.sub, align 8
     store {}* %429, {}** %10, align 8
     %440 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L459.1

L459.1:                                           ; preds = %L454.1, %guard_pass188.1, %L457.1
     %value_phi165.1 = phi {}* [ %440, %L454.1 ], [ %435, %L457.1 ], [ %439, %guard_pass188.1 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags167.1 = load i16, i16* %arrayflags_ptr166, align 2
     %441 = and i16 %arrayflags167.1, 3
     %has_owner168.1 = icmp eq i16 %441, 3
     br i1 %has_owner168.1, label %array_owned169.1, label %merge_own170.1

array_owned169.1:                                 ; preds = %L459.1
     %external_owner171.1 = load {}*, {}** %223, align 8
     br label %merge_own170.1

merge_own170.1:                                   ; preds = %array_owned169.1, %L459.1
     %data_owner172.1 = phi {}* [ %220, %L459.1 ], [ %external_owner171.1, %array_owned169.1 ]
     %arrayptr174.1 = load {}**, {}*** %224, align 8
     %442 = getelementptr inbounds {}*, {}** %arrayptr174.1, i64 1
     store atomic {}* %value_phi165.1, {}** %442 release, align 8
     %443 = bitcast {}* %data_owner172.1 to i64*
     %444 = getelementptr inbounds i64, i64* %443, i64 -1
     %445 = load atomic i64, i64* %444 unordered, align 8
     %446 = and i64 %445, 3
     %447 = icmp eq i64 %446, 3
     br i1 %447, label %448, label %455

448:                                              ; preds = %merge_own170.1
     %449 = bitcast {}* %value_phi165.1 to i64*
     %450 = getelementptr inbounds i64, i64* %449, i64 -1
     %451 = load atomic i64, i64* %450 unordered, align 8
     %452 = and i64 %451, 1
     %453 = icmp eq i64 %452, 0
     br i1 %453, label %454, label %455

454:                                              ; preds = %448
     call void @ijl_gc_queue_root({}* nonnull %data_owner172.1)
     br label %455

455:                                              ; preds = %454, %448, %merge_own170.1
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %456 = call {}* @ijl_get_nth_field_checked({}* nonnull %219, i64 2)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %457 = bitcast {}* %456 to i64*
     %458 = getelementptr inbounds i64, i64* %457, i64 -1
     %459 = load atomic i64, i64* %458 unordered, align 8
     %460 = and i64 %459, -16
     %461 = add i64 %460, -16
     %switch691.2 = icmp ult i64 %461, 64
     br i1 %switch691.2, label %L454.2, label %L457.2

L457.2:                                           ; preds = %455
     %462 = inttoptr i64 %460 to {}*
     %463 = icmp ult {}* %462, inttoptr (i64 1024 to {}*)
     br i1 %463, label %guard_pass188.2, label %L459.2

guard_pass188.2:                                  ; preds = %L457.2
     %464 = getelementptr inbounds i8, i8* @small_typeof, i64 %460
     %465 = bitcast i8* %464 to {}**
     %466 = load {}*, {}** %465, align 8
     br label %L459.2

L454.2:                                           ; preds = %455
     store {}* %456, {}** %56, align 16
     store {}* inttoptr (i64 4759733936 to {}*), {}** %.sub, align 8
     store {}* %456, {}** %10, align 8
     %467 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L459.2

L459.2:                                           ; preds = %L454.2, %guard_pass188.2, %L457.2
     %value_phi165.2 = phi {}* [ %467, %L454.2 ], [ %462, %L457.2 ], [ %466, %guard_pass188.2 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags167.2 = load i16, i16* %arrayflags_ptr166, align 2
     %468 = and i16 %arrayflags167.2, 3
     %has_owner168.2 = icmp eq i16 %468, 3
     br i1 %has_owner168.2, label %array_owned169.2, label %merge_own170.2

array_owned169.2:                                 ; preds = %L459.2
     %external_owner171.2 = load {}*, {}** %223, align 8
     br label %merge_own170.2

merge_own170.2:                                   ; preds = %array_owned169.2, %L459.2
     %data_owner172.2 = phi {}* [ %220, %L459.2 ], [ %external_owner171.2, %array_owned169.2 ]
     %arrayptr174.2 = load {}**, {}*** %224, align 8
     %469 = getelementptr inbounds {}*, {}** %arrayptr174.2, i64 2
     store atomic {}* %value_phi165.2, {}** %469 release, align 8
     %470 = bitcast {}* %data_owner172.2 to i64*
     %471 = getelementptr inbounds i64, i64* %470, i64 -1
     %472 = load atomic i64, i64* %471 unordered, align 8
     %473 = and i64 %472, 3
     %474 = icmp eq i64 %473, 3
     br i1 %474, label %475, label %482

475:                                              ; preds = %merge_own170.2
     %476 = bitcast {}* %value_phi165.2 to i64*
     %477 = getelementptr inbounds i64, i64* %476, i64 -1
     %478 = load atomic i64, i64* %477 unordered, align 8
     %479 = and i64 %478, 1
     %480 = icmp eq i64 %479, 0
     br i1 %480, label %481, label %482

481:                                              ; preds = %475
     call void @ijl_gc_queue_root({}* nonnull %data_owner172.2)
     br label %482

482:                                              ; preds = %481, %475, %merge_own170.2
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %483 = call {}* @ijl_get_nth_field_checked({}* nonnull %219, i64 3)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %484 = bitcast {}* %483 to i64*
     %485 = getelementptr inbounds i64, i64* %484, i64 -1
     %486 = load atomic i64, i64* %485 unordered, align 8
     %487 = and i64 %486, -16
     %488 = add i64 %487, -16
     %switch691.3 = icmp ult i64 %488, 64
     br i1 %switch691.3, label %L454.3, label %L457.3

L457.3:                                           ; preds = %482
     %489 = inttoptr i64 %487 to {}*
     %490 = icmp ult {}* %489, inttoptr (i64 1024 to {}*)
     br i1 %490, label %guard_pass188.3, label %L459.3

guard_pass188.3:                                  ; preds = %L457.3
     %491 = getelementptr inbounds i8, i8* @small_typeof, i64 %487
     %492 = bitcast i8* %491 to {}**
     %493 = load {}*, {}** %492, align 8
     br label %L459.3

L454.3:                                           ; preds = %482
     store {}* %483, {}** %56, align 16
     store {}* inttoptr (i64 4759733936 to {}*), {}** %.sub, align 8
     store {}* %483, {}** %10, align 8
     %494 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L459.3

L459.3:                                           ; preds = %L454.3, %guard_pass188.3, %L457.3
     %value_phi165.3 = phi {}* [ %494, %L454.3 ], [ %489, %L457.3 ], [ %493, %guard_pass188.3 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags167.3 = load i16, i16* %arrayflags_ptr166, align 2
     %495 = and i16 %arrayflags167.3, 3
     %has_owner168.3 = icmp eq i16 %495, 3
     br i1 %has_owner168.3, label %array_owned169.3, label %merge_own170.3

array_owned169.3:                                 ; preds = %L459.3
     %external_owner171.3 = load {}*, {}** %223, align 8
     br label %merge_own170.3

merge_own170.3:                                   ; preds = %array_owned169.3, %L459.3
     %data_owner172.3 = phi {}* [ %220, %L459.3 ], [ %external_owner171.3, %array_owned169.3 ]
     %arrayptr174.3 = load {}**, {}*** %224, align 8
     %496 = getelementptr inbounds {}*, {}** %arrayptr174.3, i64 3
     store atomic {}* %value_phi165.3, {}** %496 release, align 8
     %497 = bitcast {}* %data_owner172.3 to i64*
     %498 = getelementptr inbounds i64, i64* %497, i64 -1
     %499 = load atomic i64, i64* %498 unordered, align 8
     %500 = and i64 %499, 3
     %501 = icmp eq i64 %500, 3
     br i1 %501, label %502, label %509

502:                                              ; preds = %merge_own170.3
     %503 = bitcast {}* %value_phi165.3 to i64*
     %504 = getelementptr inbounds i64, i64* %503, i64 -1
     %505 = load atomic i64, i64* %504 unordered, align 8
     %506 = and i64 %505, 1
     %507 = icmp eq i64 %506, 0
     br i1 %507, label %508, label %509

508:                                              ; preds = %502
     call void @ijl_gc_queue_root({}* nonnull %data_owner172.3)
     br label %509

509:                                              ; preds = %508, %502, %merge_own170.3
; ││└
    store {}* inttoptr (i64 4687803232 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4748606912 to {}*), {}** %10, align 8
    store {}* inttoptr (i64 4697463488 to {}*), {}** %176, align 8
    store {}* %220, {}** %190, align 8
    %510 = call nonnull {}* @jl_f__apply_iterate({}* null, {}** nonnull %.sub, i32 4)
    store {}* %510, {}** %56, align 16
; │└
; │┌ @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/codeview.jl:295 within `code_llvm`
    call void @"j_#code_llvm#39_7308"(i8 zeroext 0, i8 zeroext 0, i8 zeroext 1, {}* inttoptr (i64 4300292632 to {}*), {}* readonly inttoptr (i64 5679445952 to {}*), {}* nonnull readonly %510)
; └└
; ┌ @ strings/io.jl:286 within `repr`
; │┌ @ strings/io.jl:286 within `#repr#504`
; ││┌ @ strings/io.jl:107 within `sprint`
     %511 = call nonnull {}* @"j_#sprint#501_7309"(i64 signext 0, {}* readonly inttoptr (i64 4706653632 to {}*))
     store {}* %511, {}** %56, align 16
; └└└
  call void @j_println_7306({}* inttoptr (i64 6015888832 to {}*), {}* nonnull %511)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ boot.jl:245 within `Typeof`
   br i1 %switch693, label %L482, label %L485

guard_pass:                                       ; preds = %L485
   %512 = getelementptr inbounds i8, i8* @small_typeof, i64 %315
   %513 = bitcast i8* %512 to {}**
   %514 = load {}*, {}** %513, align 8
   br label %L487

guard_pass188:                                    ; preds = %L457
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ boot.jl:245 within `Typeof`
     %515 = getelementptr inbounds i8, i8* @small_typeof, i64 %229
     %516 = bitcast i8* %515 to {}**
     %517 = load {}*, {}** %516, align 8
     br label %L459

guard_pass191:                                    ; preds = %L442
; │└└
; │┌ @ boot.jl:245 within `Typeof`
    %518 = getelementptr inbounds i8, i8* @small_typeof, i64 %315
    %519 = bitcast i8* %518 to {}**
    %520 = load {}*, {}** %519, align 8
    br label %L444

guard_pass194:                                    ; preds = %L399
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ boot.jl:245 within `Typeof`
     %521 = getelementptr inbounds i8, i8* @small_typeof, i64 %203
     %522 = bitcast i8* %521 to {}**
     %523 = load {}*, {}** %522, align 8
     br label %L401

guard_pass197:                                    ; preds = %L384
; │└└
; │┌ @ boot.jl:245 within `Typeof`
    %524 = getelementptr inbounds i8, i8* @small_typeof, i64 %315
    %525 = bitcast i8* %524 to {}**
    %526 = load {}*, {}** %525, align 8
    br label %L386

post_box_union:                                   ; preds = %L257
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4759728896 to {}*), {}* inttoptr (i64 4708703712 to {}*))
     unreachable

pass206:                                          ; preds = %post_is242, %L271
     %unionalloca.sroa.0.0.ph = phi i8 [ %150, %L271 ], [ %534, %post_is242 ]
     %.not611 = icmp eq i8 %unionalloca.sroa.0.0.ph, 0
     br i1 %.not611, label %L285, label %L307

post_box_union223:                                ; preds = %L285
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4759728896 to {}*), {}* inttoptr (i64 4708703712 to {}*))
     unreachable

pass228:                                          ; preds = %post_is, %L289
     %unionalloca217.sroa.0.0.ph = phi i8 [ %156, %L289 ], [ %530, %post_is ]
     %.not616 = icmp eq i8 %unionalloca217.sroa.0.0.ph, 0
     br i1 %.not616, label %L303, label %L307

is:                                               ; preds = %L285
; │││┌ @ Base.jl:159 within `==`
      %527 = bitcast {}* %151 to i32*
      %unbox234 = load i32, i32* %527, align 4
      %528 = icmp eq i32 %unbox234, 0
      br label %post_is

post_is:                                          ; preds = %is, %L285
      %529 = phi i1 [ %528, %is ], [ false, %L285 ]
      %530 = zext i1 %529 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass228

is241:                                            ; preds = %L257
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
; │││┌ @ Base.jl:159 within `==`
      %531 = bitcast {}* %145 to i32*
      %unbox243 = load i32, i32* %531, align 4
      %532 = icmp eq i32 %unbox243, 0
      br label %post_is242

post_is242:                                       ; preds = %is241, %L257
      %533 = phi i1 [ %532, %is241 ], [ false, %L257 ]
      %534 = zext i1 %533 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass206

post_box_union258:                                ; preds = %L136
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4759728896 to {}*), {}* inttoptr (i64 4708703712 to {}*))
     unreachable

pass263:                                          ; preds = %post_is301, %L150
     %unionalloca252.sroa.0.0.ph = phi i8 [ %95, %L150 ], [ %542, %post_is301 ]
     %.not618 = icmp eq i8 %unionalloca252.sroa.0.0.ph, 0
     br i1 %.not618, label %L164, label %L186

post_box_union280:                                ; preds = %L164
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4759728896 to {}*), {}* inttoptr (i64 4708703712 to {}*))
     unreachable

pass285:                                          ; preds = %post_is292, %L168
     %unionalloca274.sroa.0.0.ph = phi i8 [ %101, %L168 ], [ %538, %post_is292 ]
     %.not623 = icmp eq i8 %unionalloca274.sroa.0.0.ph, 0
     br i1 %.not623, label %L182, label %L186

is291:                                            ; preds = %L164
; │││┌ @ Base.jl:159 within `==`
      %535 = bitcast {}* %96 to i32*
      %unbox293 = load i32, i32* %535, align 4
      %536 = icmp eq i32 %unbox293, 0
      br label %post_is292

post_is292:                                       ; preds = %is291, %L164
      %537 = phi i1 [ %536, %is291 ], [ false, %L164 ]
      %538 = zext i1 %537 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass285

is300:                                            ; preds = %L136
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
; │││┌ @ Base.jl:159 within `==`
      %539 = bitcast {}* %90 to i32*
      %unbox302 = load i32, i32* %539, align 4
      %540 = icmp eq i32 %unbox302, 0
      br label %post_is301

post_is301:                                       ; preds = %is300, %L136
      %541 = phi i1 [ %540, %is300 ], [ false, %L136 ]
      %542 = zext i1 %541 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass263

post_box_union319:                                ; preds = %L11
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4759728896 to {}*), {}* inttoptr (i64 4708703712 to {}*))
     unreachable

pass324:                                          ; preds = %post_is362, %L25
     %unionalloca313.sroa.0.0.ph = phi i8 [ %32, %L25 ], [ %550, %post_is362 ]
     %.not625 = icmp eq i8 %unionalloca313.sroa.0.0.ph, 0
     br i1 %.not625, label %L39, label %L61

post_box_union341:                                ; preds = %L39
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4759728896 to {}*), {}* inttoptr (i64 4708703712 to {}*))
     unreachable

pass346:                                          ; preds = %post_is353, %L43
     %unionalloca335.sroa.0.0.ph = phi i8 [ %38, %L43 ], [ %546, %post_is353 ]
     %.not630 = icmp eq i8 %unionalloca335.sroa.0.0.ph, 0
     br i1 %.not630, label %L57, label %L61

is352:                                            ; preds = %L39
; │││┌ @ Base.jl:159 within `==`
      %543 = bitcast {}* %33 to i32*
      %unbox354 = load i32, i32* %543, align 4
      %544 = icmp eq i32 %unbox354, 0
      br label %post_is353

post_is353:                                       ; preds = %is352, %L39
      %545 = phi i1 [ %544, %is352 ], [ false, %L39 ]
      %546 = zext i1 %545 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass346

is361:                                            ; preds = %L11
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1219 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
; │││┌ @ Base.jl:159 within `==`
      %547 = bitcast {}* %27 to i32*
      %unbox363 = load i32, i32* %547, align 4
      %548 = icmp eq i32 %unbox363, 0
      br label %post_is362

post_is362:                                       ; preds = %is361, %L11
      %549 = phi i1 [ %548, %is361 ], [ false, %L11 ]
      %550 = zext i1 %549 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass324

guard_pass411:                                    ; preds = %L238, %L229.guard_pass411_crit_edge
     %.pre-phi779 = phi {}** [ %.phi.trans.insert772, %L229.guard_pass411_crit_edge ], [ %128, %L238 ]
     %unbox413.unpack = phi {}* [ %unbox452.unpack, %L238 ], [ %unbox413.unpack.pre, %L229.guard_pass411_crit_edge ]
     %value_phi62 = phi {}* [ %box439, %L238 ], [ %115, %L229.guard_pass411_crit_edge ]
     br label %L525

guard_pass418:                                    ; preds = %merge_own84._crit_edge.guard_pass418_crit_edge, %L521
     %.pre-phi778 = phi {}** [ %.phi.trans.insert774, %merge_own84._crit_edge.guard_pass418_crit_edge ], [ %246, %L521 ]
     %unbox420.unpack = phi {}* [ %unbox475.unpack, %L521 ], [ %unbox420.unpack.pre, %merge_own84._crit_edge.guard_pass418_crit_edge ]
     %value_phi97 = phi {}* [ %box462, %L521 ], [ %302, %merge_own84._crit_edge.guard_pass418_crit_edge ]
     br label %L525
; └└└
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
y = Core.Box(#undef)
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1272 within `make_zero`
define double @julia_make_zero_7311({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
  ret double 0xC19321B1E3AE3D7A
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
("end", y) = ("end", Core.Box(-8.024383292015639e7))
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1272 within `make_zero`
define double @julia_make_zero_7313({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
  ret double 0xC19321B1E3AE3D7A
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Vector{Int64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Vector{Int64}, %15)::Vector{Int64}
13 ┄ %26 = φ (#11 => %15, #12 => %25)::Any
│    %27 = π (%26, Vector{Int64})
└───       return %27
14 ─ %29 = Base.arraysize(prev, 1)::Int64
│    %30 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Int64}, svec(Any, Int64), 0, :(:ccall), Vector{Int64}, :(%29), :(%29)))::Vector{Int64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %30::Any, prev::Any)::Any
│    %32 = Base.arraysize(prev, 1)::Int64
│    %33 = Base.slt_int(%32, 0)::Bool
│    %34 = Core.ifelse(%33, 0, %32)::Int64
│    %35 = Base.slt_int(%34, 1)::Bool
└───       goto #16 if not %35
15 ─       goto #17
16 ─       goto #17
17 ┄ %39 = φ (#15 => true, #16 => false)::Bool
│    %40 = φ (#16 => 1)::Int64
│    %41 = φ (#16 => 1)::Int64
│    %42 = Base.not_int(%39)::Bool
└───       goto #30 if not %42
18 ┄ %44 = φ (#17 => %40, #29 => %75)::Int64
│    %45 = φ (#17 => %41, #29 => %76)::Int64
└───       goto #22 if not true
19 ─ %47 = Base.arraysize(prev, 1)::Int64
│    %48 = Base.slt_int(%47, 0)::Bool
│    %49 = Core.ifelse(%48, 0, %47)::Int64
│    %50 = Base.sub_int(%44, 1)::Int64
│    %51 = Base.bitcast(UInt64, %50)::UInt64
│    %52 = Base.bitcast(UInt64, %49)::UInt64
│    %53 = Base.ult_int(%51, %52)::Bool
└───       goto #21 if not %53
20 ─       goto #22
21 ─       goto #23
22 ┄ %57 = Base.sub_int(%44, 1)::Int64
│    %58 = Base.mul_int(%57, 1)::Int64
│    %59 = Base.add_int(1, %58)::Int64
│    %60 = Base.bitcast(UInt64, %59)::UInt64
│    %61 = Base.sub_int(%60, 0x0000000000000001)::UInt64
│    %62 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%61), :(%61)))::Int32
│    %63 = Core.sext_int(Core.Int64, %62)::Int64
│    %64 = (%63 === 1)::Bool
└───       goto #23
23 ┄ %66 = φ (#21 => false, #22 => %64)::Bool
└───       goto #25 if not %66
24 ─ %68 = Base.arrayref(true, prev, %44)::Int64
└───       Base.arrayset(false, %30, %68, %44)::Vector{Int64}
25 ┄ %70 = (%45 === %34)::Bool
└───       goto #27 if not %70
26 ─       goto #28
27 ─ %73 = Base.add_int(%45, 1)::Int64
└───       goto #28
28 ┄ %75 = φ (#27 => %73)::Int64
│    %76 = φ (#27 => %73)::Int64
│    %77 = φ (#26 => true, #27 => false)::Bool
│    %78 = Base.not_int(%77)::Bool
└───       goto #30 if not %78
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %30
) => Vector{Int64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_7315({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe32 = alloca [3 x {}*], align 16
  %gcframe32.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe32, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe32 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe32, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe32.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe32, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L29, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not24 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not24, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4688010064 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4688010064 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  br label %common.ret

common.ret:                                       ; preds = %L70, %L29, %L25, %L22
  %common.ret.op = phi {}* [ %23, %L25 ], [ %15, %L22 ], [ %27, %L29 ], [ %27, %L70 ]
  %24 = load {}*, {}** %5, align 8
  %25 = bitcast {}*** %2 to {}**
  store {}* %24, {}** %25, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L29:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:191 within `size`
   %26 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
   %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %26, i64 0, i32 1
   %arraylen = load i64, i64* %arraylen_ptr, align 8
; └
; ┌ @ boot.jl:484 within `Array` @ boot.jl:475
   %27 = call nonnull {}* inttoptr (i64 4304360888 to {}* ({}*, i64)*)({}* inttoptr (i64 4688010064 to {}*), i64 %arraylen)
   store {}* %27, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %28 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %27, {}** %28, align 8
  %29 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %29, align 8
  %30 = call nonnull {}* @"j1_setindex!_7316"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:318 within `eachindex`
; │┌ @ abstractarray.jl:134 within `axes1`
; ││┌ @ abstractarray.jl:98 within `axes`
; │││┌ @ array.jl:191 within `size`
      %arraylen5 = load i64, i64* %arraylen_ptr, align 8
; └└└└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not25.not = icmp eq i64 %arraylen5, 0
; └└└└
  br i1 %.not25.not, label %common.ret, label %L44.preheader

L44.preheader:                                    ; preds = %L29
  %31 = bitcast {}* %11 to i64**
  %arrayptr27 = load i64*, i64** %31, align 8
  %32 = bitcast {}* %27 to i64**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L44

L44:                                              ; preds = %L70, %L44.preheader
  %value_phi9 = phi i64 [ %34, %L70 ], [ 1, %L44.preheader ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %33 = add nsw i64 %value_phi9, -1
; │││└
; │││┌ @ int.jl:513 within `<`
      %.not26.not = icmp ult i64 %33, %arraylen5
; └└└└
  br i1 %.not26.not, label %idxend, label %L70

L70:                                              ; preds = %idxend, %L44
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not29.not = icmp eq i64 %value_phi9, %arraylen5
; │└
   %34 = add nuw nsw i64 %value_phi9, 1
; └
  br i1 %.not29.not, label %common.ret, label %L44

idxend:                                           ; preds = %L44
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
; ┌ @ essentials.jl:13 within `getindex`
   %35 = getelementptr inbounds i64, i64* %arrayptr27, i64 %33
   %arrayref = load i64, i64* %35, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr1828 = load i64*, i64** %32, align 8
   %36 = getelementptr inbounds i64, i64* %arrayptr1828, i64 %33
   store i64 %arrayref, i64* %36, align 8
   br label %L70
; └
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_7317({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7318"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_7319({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7320"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_7321({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7322"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_7323({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7324"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_7325({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7326"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_7327({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7328"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_7329({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7330"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_7331({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7332"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1272 within `make_zero`
define double @julia_make_zero_7333({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
  ret double 0xC19321B1E3AE3D7A
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_7335({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7336"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_7337({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7338"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_7339({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7340"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1239 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1280 within `make_zero`
define nonnull {}* @japi1_make_zero_7341({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4301375048 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4304284656 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4301375048 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4301375048 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4740339984 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4353003472 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4706653120 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4353003472 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1284 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4304360928 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4353003472 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7342"({}* inttoptr (i64 4687659280 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1291 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4353003472 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
("end", y) = ("end", Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 -8.024383292015639e7
  x: Array{Float64}((6,)) [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
  u: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  n: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  k: Float64 -8.024383292015639e7
  r: Float64 -8.024383292015639e7
  q: q_kf (function of type Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
  J: Float64 -8.024383292015639e7
  data_steps: Array{Int64}((21,)) [3000, 3200, 3400, 3600, 3800, 4000, 4200, 4400, 4600, 4800  …  5200, 5400, 5600, 5800, 6000, 6200, 6400, 6600, 6800, 7000]
  data: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  states: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  energy: Array{Float64}((3, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  A: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  B: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Gamma: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  E: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q_inv: Float64 -8.024383292015639e7
  R: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  R_inv: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  K: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Kc: Array{Float64}((3, 3)) [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]
)
dparams_adjoint2 = Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 -8.024383292015639e7
  x: Array{Float64}((6,)) [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
  u: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  n: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  k: Float64 -8.024383292015639e7
  r: Float64 -8.024383292015639e7
  q: q_kf (function of type Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
  J: Float64 -8.024383292015639e7
  data_steps: Array{Int64}((21,)) [3000, 3200, 3400, 3600, 3800, 4000, 4200, 4400, 4600, 4800  …  5200, 5400, 5600, 5800, 6000, 6200, 6400, 6600, 6800, 7000]
  data: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  states: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  energy: Array{Float64}((3, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  A: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  B: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Gamma: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  E: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q_inv: Float64 -8.024383292015639e7
  R: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  R_inv: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  K: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Kc: Array{Float64}((3, 3)) [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]

total_cost = 8.089526008233672e9
total_cost = 8.09305243851048e7
total_cost = 809125.2431171616
total_cost = 8190.154598154145
total_cost = 208.3665231671202
total_cost = 131.30417620367544
total_cost = 130.80910533675768
total_cost = 130.83170986348932
total_cost = 130.8346914249844
total_cost = 130.83499680906013
diffs = Any[8.08952587739864e10, 8.093039355007402e9, 8.089944080863773e8, 8.059319567369953e7, 7.753149238292817e6, 469145.41948342504, -259254.47434332228, -332092.070269141, -339359.20760086447, -339751.3188474477]
dparams_adjoint2.k = -8.058402127520761e7
