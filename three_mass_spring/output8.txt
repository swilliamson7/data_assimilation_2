┌ Warning: Using fallback BLAS replacements, performance may be degraded
└ @ Enzyme.Compiler ~/.julia/packages/GPUCompiler/U36Ed/src/utils.jl:59
warning: didn't implement memmove, using memcpy as fallback which can result in errors
warning: didn't implement memmove, using memcpy as fallback which can result in errors
params_adjoint2 = Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.001
  x: Array{Float64}((6,)) [1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
  u: Array{Float64}((6, 10001)) [0.053789363540378256 -0.034477948177364076 … -0.14986767532029263 0.20624645389996643; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  n: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  k: Float64 20.0
  r: Float64 0.5
  q: q_kf (function of type Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
  J: Float64 0.0
  data_steps: Array{Int64}((21,)) [3000, 3200, 3400, 3600, 3800, 4000, 4200, 4400, 4600, 4800  …  5200, 5400, 5600, 5800, 6000, 6200, 6400, 6600, 6800, 7000]
  data: Array{Float64}((6, 10001)) [0.99990874916679 1.153662067810838 … -0.9571195397042735 -1.100676445843749; -3.174525549058001e-5 1.9232965189829104e-5 … 0.7732345424757039 0.7719635416570036; … ; -0.0001260456441650153 0.020048621447258965 … -1.2843958254226309 -1.3063042728740202; -0.00012361397362475215 -8.813508269354106e-5 … 1.395158739478939 1.323931700479082]
  states: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  energy: Array{Float64}((3, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  A: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.001 0.0; … ; 0.02 -0.06 … 0.9995 0.0; 0.0 0.02 … 0.0 0.9995]
  B: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Gamma: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  E: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.0 0.0; … ; 0.0 0.0 … 1.0 0.0; 0.0 0.0 … 0.0 1.0]
  Q: Array{Float64}((6, 6)) [0.001653213969959386 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q_inv: Float64 0.0
  R: Array{Float64}((6, 6)) [1.0009134387242822e-8 0.0 … 0.0 0.0; 0.0 1.0009134387242822e-8 … 0.0 0.0; … ; 0.0 0.0 … 1.0009134387242822e-8 0.0; 0.0 0.0 … 0.0 1.0009134387242822e-8]
  R_inv: Array{Float64}((6, 6)) [9.990873948845702e7 0.0 … 0.0 0.0; 0.0 9.990873948845702e7 … 0.0 0.0; … ; 0.0 0.0 … 9.990873948845702e7 0.0; 0.0 0.0 … 0.0 9.990873948845702e7]
  K: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Kc: Array{Float64}((3, 3)) [-40.0 20.0 0.0; 20.0 -60.0 20.0; 0.0 20.0 -40.0]

y = Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 0
  t: Int64 0
  dt: Float64 0.0
  x: #undef
  u: #undef
  n: #undef
  k: Float64 0.0
  r: Float64 0.0
  q: #undef
  J: Float64 0.0
  data_steps: #undef
  data: #undef
  states: #undef
  energy: #undef
  A: #undef
  B: #undef
  Gamma: #undef
  E: #undef
  Q: #undef
  Q_inv: Float64 0.0
  R: #undef
  R_inv: #undef
  K: #undef
  Kc: #undef

#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return prev
) => Int64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1218 within `make_zero`
define i64 @julia_make_zero_5774({}* noundef nonnull align 8 dereferenceable(24) %0, i64 signext %1) #0 {
top:
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1221 within `make_zero`
  ret i64 %1
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return prev
) => Int64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1218 within `make_zero`
define i64 @julia_make_zero_5778({}* noundef nonnull align 8 dereferenceable(24) %0, i64 signext %1) #0 {
top:
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1221 within `make_zero`
  ret i64 %1
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
(i, xi, Core.Typeof(xi), seen) = (3, 0.001, Float64, IdDict{Any, Any}(Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.001
  x: Array{Float64}((6,)) [1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
  u: Array{Float64}((6, 10001)) [0.053789363540378256 -0.034477948177364076 … -0.14986767532029263 0.20624645389996643; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  n: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  k: Float64 20.0
  r: Float64 0.5
  q: q_kf (function of type Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
  J: Float64 0.0
  data_steps: Array{Int64}((21,)) [3000, 3200, 3400, 3600, 3800, 4000, 4200, 4400, 4600, 4800  …  5200, 5400, 5600, 5800, 6000, 6200, 6400, 6600, 6800, 7000]
  data: Array{Float64}((6, 10001)) [0.99990874916679 1.153662067810838 … -0.9571195397042735 -1.100676445843749; -3.174525549058001e-5 1.9232965189829104e-5 … 0.7732345424757039 0.7719635416570036; … ; -0.0001260456441650153 0.020048621447258965 … -1.2843958254226309 -1.3063042728740202; -0.00012361397362475215 -8.813508269354106e-5 … 1.395158739478939 1.323931700479082]
  states: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  energy: Array{Float64}((3, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  A: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.001 0.0; … ; 0.02 -0.06 … 0.9995 0.0; 0.0 0.02 … 0.0 0.9995]
  B: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Gamma: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  E: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.0 0.0; … ; 0.0 0.0 … 1.0 0.0; 0.0 0.0 … 0.0 1.0]
  Q: Array{Float64}((6, 6)) [0.001653213969959386 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q_inv: Float64 0.0
  R: Array{Float64}((6, 6)) [1.0009134387242822e-8 0.0 … 0.0 0.0; 0.0 1.0009134387242822e-8 … 0.0 0.0; … ; 0.0 0.0 … 1.0009134387242822e-8 0.0; 0.0 0.0 … 0.0 1.0009134387242822e-8]
  R_inv: Array{Float64}((6, 6)) [9.990873948845702e7 0.0 … 0.0 0.0; 0.0 9.990873948845702e7 … 0.0 0.0; … ; 0.0 0.0 … 9.990873948845702e7 0.0; 0.0 0.0 … 0.0 9.990873948845702e7]
  K: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Kc: Array{Float64}((3, 3)) [-40.0 20.0 0.0; 20.0 -60.0 20.0; 0.0 20.0 -40.0]
 => Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.0
  x: #undef
  u: #undef
  n: #undef
  k: Float64 0.0
  r: Float64 0.0
  q: #undef
  J: Float64 0.0
  data_steps: #undef
  data: #undef
  states: #undef
  energy: #undef
  A: #undef
  B: #undef
  Gamma: #undef
  E: #undef
  Q: #undef
  Q_inv: Float64 0.0
  R: #undef
  R_inv: #undef
  K: #undef
  Kc: #undef
))
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1273 within `make_zero`
define double @julia_make_zero_5811({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1274 within `make_zero`
  ret double 0.000000e+00
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
("res", i, xi, Core.Typeof(xi), seen) = ("res", 3, 0.0, Float64, IdDict{Any, Any}(Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.001
  x: Array{Float64}((6,)) [1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
  u: Array{Float64}((6, 10001)) [0.053789363540378256 -0.034477948177364076 … -0.14986767532029263 0.20624645389996643; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  n: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  k: Float64 20.0
  r: Float64 0.5
  q: q_kf (function of type Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
  J: Float64 0.0
  data_steps: Array{Int64}((21,)) [3000, 3200, 3400, 3600, 3800, 4000, 4200, 4400, 4600, 4800  …  5200, 5400, 5600, 5800, 6000, 6200, 6400, 6600, 6800, 7000]
  data: Array{Float64}((6, 10001)) [0.99990874916679 1.153662067810838 … -0.9571195397042735 -1.100676445843749; -3.174525549058001e-5 1.9232965189829104e-5 … 0.7732345424757039 0.7719635416570036; … ; -0.0001260456441650153 0.020048621447258965 … -1.2843958254226309 -1.3063042728740202; -0.00012361397362475215 -8.813508269354106e-5 … 1.395158739478939 1.323931700479082]
  states: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  energy: Array{Float64}((3, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  A: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.001 0.0; … ; 0.02 -0.06 … 0.9995 0.0; 0.0 0.02 … 0.0 0.9995]
  B: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Gamma: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  E: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.0 0.0; … ; 0.0 0.0 … 1.0 0.0; 0.0 0.0 … 0.0 1.0]
  Q: Array{Float64}((6, 6)) [0.001653213969959386 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q_inv: Float64 0.0
  R: Array{Float64}((6, 6)) [1.0009134387242822e-8 0.0 … 0.0 0.0; 0.0 1.0009134387242822e-8 … 0.0 0.0; … ; 0.0 0.0 … 1.0009134387242822e-8 0.0; 0.0 0.0 … 0.0 1.0009134387242822e-8]
  R_inv: Array{Float64}((6, 6)) [9.990873948845702e7 0.0 … 0.0 0.0; 0.0 9.990873948845702e7 … 0.0 0.0; … ; 0.0 0.0 … 9.990873948845702e7 0.0; 0.0 0.0 … 0.0 9.990873948845702e7]
  K: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Kc: Array{Float64}((3, 3)) [-40.0 20.0 0.0; 20.0 -60.0 20.0; 0.0 20.0 -40.0]
 => Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.0
  x: #undef
  u: #undef
  n: #undef
  k: Float64 0.0
  r: Float64 0.0
  q: #undef
  J: Float64 0.0
  data_steps: #undef
  data: #undef
  states: #undef
  energy: #undef
  A: #undef
  B: #undef
  Gamma: #undef
  E: #undef
  Q: #undef
  Q_inv: Float64 0.0
  R: #undef
  R_inv: #undef
  K: #undef
  Kc: #undef
))
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Vector{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Vector{Float64}, %15)::Vector{Float64}
13 ┄ %26 = φ (#11 => %15, #12 => %25)::Any
│    %27 = π (%26, Vector{Float64})
└───       return %27
14 ─ %29 = Base.arraysize(prev, 1)::Int64
│    %30 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Float64}, svec(Any, Int64), 0, :(:ccall), Vector{Float64}, :(%29), :(%29)))::Vector{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %30::Any, prev::Any)::Any
│    %32 = Base.arraysize(prev, 1)::Int64
│    %33 = Base.slt_int(%32, 0)::Bool
│    %34 = Core.ifelse(%33, 0, %32)::Int64
│    %35 = Base.slt_int(%34, 1)::Bool
└───       goto #16 if not %35
15 ─       goto #17
16 ─       goto #17
17 ┄ %39 = φ (#15 => true, #16 => false)::Bool
│    %40 = φ (#16 => 1)::Int64
│    %41 = φ (#16 => 1)::Int64
│    %42 = Base.not_int(%39)::Bool
└───       goto #30 if not %42
18 ┄ %44 = φ (#17 => %40, #29 => %75)::Int64
│    %45 = φ (#17 => %41, #29 => %76)::Int64
└───       goto #22 if not true
19 ─ %47 = Base.arraysize(prev, 1)::Int64
│    %48 = Base.slt_int(%47, 0)::Bool
│    %49 = Core.ifelse(%48, 0, %47)::Int64
│    %50 = Base.sub_int(%44, 1)::Int64
│    %51 = Base.bitcast(UInt64, %50)::UInt64
│    %52 = Base.bitcast(UInt64, %49)::UInt64
│    %53 = Base.ult_int(%51, %52)::Bool
└───       goto #21 if not %53
20 ─       goto #22
21 ─       goto #23
22 ┄ %57 = Base.sub_int(%44, 1)::Int64
│    %58 = Base.mul_int(%57, 1)::Int64
│    %59 = Base.add_int(1, %58)::Int64
│    %60 = Base.bitcast(UInt64, %59)::UInt64
│    %61 = Base.sub_int(%60, 0x0000000000000001)::UInt64
│    %62 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%61), :(%61)))::Int32
│    %63 = Core.sext_int(Core.Int64, %62)::Int64
│    %64 = (%63 === 1)::Bool
└───       goto #23
23 ┄ %66 = φ (#21 => false, #22 => %64)::Bool
└───       goto #25 if not %66
24 ─       Base.arrayref(true, prev, %44)::Float64
└───       Base.arrayset(false, %30, 0.0, %44)::Vector{Float64}
25 ┄ %70 = (%45 === %34)::Bool
└───       goto #27 if not %70
26 ─       goto #28
27 ─ %73 = Base.add_int(%45, 1)::Int64
└───       goto #28
28 ┄ %75 = φ (#27 => %73)::Int64
│    %76 = φ (#27 => %73)::Int64
│    %77 = φ (#26 => true, #27 => false)::Bool
│    %78 = Base.not_int(%77)::Bool
└───       goto #30 if not %78
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %30
) => Vector{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_5877({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe31 = alloca [3 x {}*], align 16
  %gcframe31.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe31, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe31 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe31, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe31.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe31, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L29, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not24 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not24, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4694774032 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4694774032 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  br label %common.ret

common.ret:                                       ; preds = %L70, %L29, %L25, %L22
  %common.ret.op = phi {}* [ %23, %L25 ], [ %15, %L22 ], [ %27, %L29 ], [ %27, %L70 ]
  %24 = load {}*, {}** %5, align 8
  %25 = bitcast {}*** %2 to {}**
  store {}* %24, {}** %25, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L29:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:191 within `size`
   %26 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
   %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %26, i64 0, i32 1
   %arraylen = load i64, i64* %arraylen_ptr, align 8
; └
; ┌ @ boot.jl:484 within `Array` @ boot.jl:475
   %27 = call nonnull {}* inttoptr (i64 4311340472 to {}* ({}*, i64)*)({}* inttoptr (i64 4694774032 to {}*), i64 %arraylen)
   store {}* %27, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %28 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %27, {}** %28, align 8
  %29 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %29, align 8
  %30 = call nonnull {}* @"j1_setindex!_5878"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:318 within `eachindex`
; │┌ @ abstractarray.jl:134 within `axes1`
; ││┌ @ abstractarray.jl:98 within `axes`
; │││┌ @ array.jl:191 within `size`
      %arraylen5 = load i64, i64* %arraylen_ptr, align 8
; └└└└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not25.not = icmp eq i64 %arraylen5, 0
; └└└└
  br i1 %.not25.not, label %common.ret, label %L44.preheader

L44.preheader:                                    ; preds = %L29
  %31 = bitcast {}* %27 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L44

L44:                                              ; preds = %L70, %L44.preheader
  %value_phi9 = phi i64 [ %33, %L70 ], [ 1, %L44.preheader ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %32 = add nsw i64 %value_phi9, -1
; │││└
; │││┌ @ int.jl:513 within `<`
      %.not26.not = icmp ult i64 %32, %arraylen5
; └└└└
  br i1 %.not26.not, label %idxend, label %L70

L70:                                              ; preds = %idxend, %L44
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not28.not = icmp eq i64 %value_phi9, %arraylen5
; │└
   %33 = add nuw nsw i64 %value_phi9, 1
; └
  br i1 %.not28.not, label %common.ret, label %L44

idxend:                                           ; preds = %L44
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr1827 = load double*, double** %31, align 8
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr1827, i64 %32
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
   br label %L70
; └
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_5880({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_5881"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_5883({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_5884"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1273 within `make_zero`
define double @julia_make_zero_5885({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
  ret double 0.000000e+00
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1273 within `make_zero`
define double @julia_make_zero_5887({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
  ret double 0.000000e+00
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─── %1   = Enzyme.Compiler.nothing::Nothing
└────        goto #3 if not true
2 ───        goto #4
3 ───        $(Expr(:throw_undef_if_not, :seen, false))::Any
4 ┄── %5   = ($(QuoteNode(Val{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}())) ∈ ())::Any
└────        goto #6 if not %5
5 ───        goto #39
6 ───        goto #8 if not true
7 ───        goto #9
8 ───        $(Expr(:throw_undef_if_not, :seen, false))::Any
9 ┄── %11  = Core._apply_iterate(Base.iterate, Core.tuple, (Val{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}(),), ())::Tuple{Val{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}, Vararg{Any}}
└────        goto #11 if not true
10 ──        goto #12
11 ──        $(Expr(:throw_undef_if_not, :seen, false))::Any
12 ┄─ %15  = Core.apply_type(Enzyme.Compiler.Merger, %11, Nothing, false, false)::Type{Enzyme.Compiler.Merger{_A, Nothing, false, false}} where _A
│     %16  = %new(%15, %1)::Enzyme.Compiler.Merger{_A, Nothing, false, false} where _A
│     %17  = (%16)(1)::Val
│     %18  = Enzyme.Compiler.forcefold::typeof(Enzyme.Compiler.forcefold)
│     %19  = (Core._compute_sparams)(forcefold(::Val{ty}, ::Val{sty}, C::Vararg{Any, N}) where {ty, sty, N} @ Enzyme.Compiler ~/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330, %18, $(QuoteNode(Val{Enzyme.Compiler.AnyState}())), %17)::Core.SimpleVector
│     %20  = (Core._svec_ref)(%19, 2)::Any
│     %21  = Enzyme.Compiler.:(==)::typeof(==)
│     %22  = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %23  = (isa)(%20, WeakRef)::Bool
└────        goto #14 if not %23
13 ── %25  = π (%20, WeakRef)
│     %26  = invoke %21(%25::WeakRef, %22::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #19
14 ── %28  = (isa)(%20, Missing)::Bool
└────        goto #16 if not %28
15 ──        goto #19
16 ──        goto #18 if not true
17 ── %32  = (%20 === %22)::Bool
└────        goto #19
18 ──        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
19 ┄─ %36  = φ (#13 => %26, #15 => $(QuoteNode(missing)), #17 => %32)::Union{Missing, Bool}
└────        goto #21 if not %36
20 ──        goto #31
21 ── %39  = (Core._svec_ref)(%19, 2)::Any
│     %40  = Enzyme.Compiler.:(==)::typeof(==)
│     %41  = (isa)(%39, WeakRef)::Bool
└────        goto #23 if not %41
22 ── %43  = π (%39, WeakRef)
│     %44  = invoke %40(%43::WeakRef, $(QuoteNode(Enzyme.Compiler.AnyState))::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #28
23 ── %46  = (isa)(%39, Missing)::Bool
└────        goto #25 if not %46
24 ──        goto #28
25 ──        goto #27 if not true
26 ── %50  = (%39 === $(QuoteNode(Enzyme.Compiler.AnyState)))::Bool
└────        goto #28
27 ──        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
28 ┄─ %54  = φ (#22 => %44, #24 => $(QuoteNode(missing)), #26 => %50)::Union{Missing, Bool}
└────        goto #30 if not %54
29 ──        goto #31
30 ── %57  = (Core._svec_ref)(%19, 2)::Any
│            Core.apply_type(Base.Val, %57)::Type{Val{_A}} where _A
└────        goto #32
31 ┄─        goto #32
32 ┄─ %61  = φ (#30 => %57, #31 => $(QuoteNode(Enzyme.Compiler.AnyState)))::Any
│     %62  = (%61 isa Enzyme.Compiler.ActivityState)::Bool
└────        goto #34 if not %62
33 ──        goto #38
34 ── %65  = (isa)(%61, Enzyme.Compiler.ActivityState)::Bool
└────        goto #36 if not %65
35 ── %67  = π (%61, Enzyme.Compiler.ActivityState)
└────        goto #37
36 ── %69  = Base.convert(Enzyme.Compiler.ActivityState, %61)::Enzyme.Compiler.ActivityState
└────        goto #37
37 ┄─ %71  = φ (#35 => %67, #36 => %69)::Enzyme.Compiler.ActivityState
38 ┄─ %72  = φ (#33 => %61, #37 => %71)::Any
│     %73  = π (%72, Enzyme.Compiler.ActivityState)
└────        goto #39
39 ┄─ %75  = φ (#5 => Enzyme.Compiler.MixedState, #38 => %73)::Enzyme.Compiler.ActivityState
└────        goto #40
40 ──        goto #41
41 ── %78  = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %79  = (%75 === %78)::Bool
└────        goto #42
42 ──        goto #44 if not %79
43 ──        nothing::Nothing
└────        return prev
44 ── %84  = Base.secret_table_token::Symbol
│     %85  = Base.getfield(seen, :ht)::Vector{Any}
│     %86  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%85), Core.Argument(4), :(%84)))::Any
│     %87  = (%86 === %84)::Bool
└────        goto #46 if not %87
45 ──        goto #47
46 ──        goto #47
47 ┄─ %91  = φ (#45 => %84, #46 => %86)::Any
│     %92  = (%91 === Base.secret_table_token)::Bool
│     %93  = Core.Intrinsics.not_int(%92)::Bool
└────        goto #48
48 ──        goto #49
49 ──        goto #54 if not %93
50 ── %97  = Base.getfield(seen, :ht)::Vector{Any}
│     %98  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%97), Core.Argument(4), :(Base.secret_table_token)))::Any
│     %99  = (%98 === Base.secret_table_token)::Bool
└────        goto #52 if not %99
51 ── %101 = Base.KeyError(prev)::Any
│            Base.throw(%101)::Union{}
└────        unreachable
52 ──        goto #53
53 ──        return %98
54 ──        nothing::Nothing
│            nothing::Nothing
│            nothing::Nothing
│            nothing::Nothing
│     %110 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Any}, svec(Any, Int64), 0, :(:ccall), Vector{Any}, 1, 1))::Vector{Any}
└────        goto #210 if not true
55 ── %112 = Enzyme.Compiler.getfield(prev, 1)::Main.ThreeMassSpring.var"#q_true#35"
│     %113 = Enzyme.Compiler.nothing::Nothing
└────        goto #57 if not true
56 ──        goto #58
57 ──        $(Expr(:throw_undef_if_not, :seen, false))::Any
58 ┄─ %117 = ($(QuoteNode(Val{Main.ThreeMassSpring.var"#q_true#35"}())) ∈ ())::Any
└────        goto #60 if not %117
59 ──        goto #93
60 ──        goto #62 if not true
61 ──        goto #63
62 ──        $(Expr(:throw_undef_if_not, :seen, false))::Any
63 ┄─ %123 = Core._apply_iterate(Base.iterate, Core.tuple, (Val{Main.ThreeMassSpring.var"#q_true#35"}(),), ())::Tuple{Val{Main.ThreeMassSpring.var"#q_true#35"}, Vararg{Any}}
└────        goto #65 if not true
64 ──        goto #66
65 ──        $(Expr(:throw_undef_if_not, :seen, false))::Any
66 ┄─ %127 = Core.apply_type(Enzyme.Compiler.Merger, %123, Nothing, false, false)::Type{Enzyme.Compiler.Merger{_A, Nothing, false, false}} where _A
│     %128 = %new(%127, %113)::Enzyme.Compiler.Merger{_A, Nothing, false, false} where _A
│     %129 = (%128)(1)::Val
│     %130 = Enzyme.Compiler.forcefold::typeof(Enzyme.Compiler.forcefold)
│     %131 = (Core._compute_sparams)(forcefold(::Val{ty}, ::Val{sty}, C::Vararg{Any, N}) where {ty, sty, N} @ Enzyme.Compiler ~/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330, %130, $(QuoteNode(Val{Enzyme.Compiler.AnyState}())), %129)::Core.SimpleVector
│     %132 = (Core._svec_ref)(%131, 2)::Any
│     %133 = Enzyme.Compiler.:(==)::typeof(==)
│     %134 = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %135 = (isa)(%132, WeakRef)::Bool
└────        goto #68 if not %135
67 ── %137 = π (%132, WeakRef)
│     %138 = invoke %133(%137::WeakRef, %134::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #73
68 ── %140 = (isa)(%132, Missing)::Bool
└────        goto #70 if not %140
69 ──        goto #73
70 ──        goto #72 if not true
71 ── %144 = (%132 === %134)::Bool
└────        goto #73
72 ──        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
73 ┄─ %148 = φ (#67 => %138, #69 => $(QuoteNode(missing)), #71 => %144)::Union{Missing, Bool}
└────        goto #75 if not %148
74 ──        goto #85
75 ── %151 = (Core._svec_ref)(%131, 2)::Any
│     %152 = Enzyme.Compiler.:(==)::typeof(==)
│     %153 = (isa)(%151, WeakRef)::Bool
└────        goto #77 if not %153
76 ── %155 = π (%151, WeakRef)
│     %156 = invoke %152(%155::WeakRef, $(QuoteNode(Enzyme.Compiler.AnyState))::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #82
77 ── %158 = (isa)(%151, Missing)::Bool
└────        goto #79 if not %158
78 ──        goto #82
79 ──        goto #81 if not true
80 ── %162 = (%151 === $(QuoteNode(Enzyme.Compiler.AnyState)))::Bool
└────        goto #82
81 ──        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
82 ┄─ %166 = φ (#76 => %156, #78 => $(QuoteNode(missing)), #80 => %162)::Union{Missing, Bool}
└────        goto #84 if not %166
83 ──        goto #85
84 ── %169 = (Core._svec_ref)(%131, 2)::Any
│            Core.apply_type(Base.Val, %169)::Type{Val{_A}} where _A
└────        goto #86
85 ┄─        goto #86
86 ┄─ %173 = φ (#84 => %169, #85 => $(QuoteNode(Enzyme.Compiler.AnyState)))::Any
│     %174 = (%173 isa Enzyme.Compiler.ActivityState)::Bool
└────        goto #88 if not %174
87 ──        goto #92
88 ── %177 = (isa)(%173, Enzyme.Compiler.ActivityState)::Bool
└────        goto #90 if not %177
89 ── %179 = π (%173, Enzyme.Compiler.ActivityState)
└────        goto #91
90 ── %181 = Base.convert(Enzyme.Compiler.ActivityState, %173)::Enzyme.Compiler.ActivityState
└────        goto #91
91 ┄─ %183 = φ (#89 => %179, #90 => %181)::Enzyme.Compiler.ActivityState
92 ┄─ %184 = φ (#87 => %173, #91 => %183)::Any
│     %185 = π (%184, Enzyme.Compiler.ActivityState)
└────        goto #93
93 ┄─ %187 = φ (#59 => Enzyme.Compiler.MixedState, #92 => %185)::Enzyme.Compiler.ActivityState
└────        goto #94
94 ──        goto #95
95 ── %190 = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %191 = (%187 === %190)::Bool
└────        goto #96
96 ──        goto #98 if not %191
97 ──        goto #209
98 ── %195 = Base.secret_table_token::Symbol
│     %196 = Base.getfield(seen, :ht)::Vector{Any}
│     %197 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%196), :(%112), :(%195)))::Any
│     %198 = (%197 === %195)::Bool
└────        goto #100 if not %198
99 ──        goto #101
100 ─        goto #101
101 ┄ %202 = φ (#99 => %195, #100 => %197)::Any
│     %203 = (%202 === Base.secret_table_token)::Bool
│     %204 = Core.Intrinsics.not_int(%203)::Bool
└────        goto #102
102 ─        goto #103
103 ─        goto #108 if not %204
104 ─ %208 = Base.getfield(seen, :ht)::Vector{Any}
│     %209 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%208), :(%112), :(Base.secret_table_token)))::Any
│     %210 = (%209 === Base.secret_table_token)::Bool
└────        goto #106 if not %210
105 ─ %212 = Base.KeyError(%112)::Any
│            Base.throw(%212)::Union{}
└────        unreachable
106 ─        goto #107
107 ─        goto #209
108 ─ %217 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Any}, svec(Any, Int64), 0, :(:ccall), Vector{Any}, 1, 1))::Vector{Any}
└────        goto #208 if not true
109 ─ %219 = Enzyme.Compiler.getfield(%112, 1)::Core.Box
│     %220 = Enzyme.Compiler.nothing::Nothing
└────        goto #111 if not true
110 ─        nothing::Nothing
111 ┄        goto #113 if not true
112 ─        goto #114
113 ─        $(Expr(:throw_undef_if_not, :seen, false))::Any
114 ┄ %226 = ($(QuoteNode(Val{Core.Box}())) ∈ ())::Any
└────        goto #116 if not %226
115 ─        goto #149
116 ─        goto #118 if not true
117 ─        goto #119
118 ─        $(Expr(:throw_undef_if_not, :seen, false))::Any
119 ┄ %232 = Core._apply_iterate(Base.iterate, Core.tuple, (Val{Core.Box}(),), ())::Tuple{Val{Core.Box}, Vararg{Any}}
└────        goto #121 if not true
120 ─        goto #122
121 ─        $(Expr(:throw_undef_if_not, :seen, false))::Any
122 ┄ %236 = Core.apply_type(Enzyme.Compiler.Merger, %232, Nothing, false, false)::Type{Enzyme.Compiler.Merger{_A, Nothing, false, false}} where _A
│     %237 = %new(%236, %220)::Enzyme.Compiler.Merger{_A, Nothing, false, false} where _A
│     %238 = (%237)(1)::Val
│     %239 = Enzyme.Compiler.forcefold::typeof(Enzyme.Compiler.forcefold)
│     %240 = (Core._compute_sparams)(forcefold(::Val{ty}, ::Val{sty}, C::Vararg{Any, N}) where {ty, sty, N} @ Enzyme.Compiler ~/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330, %239, $(QuoteNode(Val{Enzyme.Compiler.AnyState}())), %238)::Core.SimpleVector
│     %241 = (Core._svec_ref)(%240, 2)::Any
│     %242 = Enzyme.Compiler.:(==)::typeof(==)
│     %243 = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %244 = (isa)(%241, WeakRef)::Bool
└────        goto #124 if not %244
123 ─ %246 = π (%241, WeakRef)
│     %247 = invoke %242(%246::WeakRef, %243::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #129
124 ─ %249 = (isa)(%241, Missing)::Bool
└────        goto #126 if not %249
125 ─        goto #129
126 ─        goto #128 if not true
127 ─ %253 = (%241 === %243)::Bool
└────        goto #129
128 ─        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
129 ┄ %257 = φ (#123 => %247, #125 => $(QuoteNode(missing)), #127 => %253)::Union{Missing, Bool}
└────        goto #131 if not %257
130 ─        goto #141
131 ─ %260 = (Core._svec_ref)(%240, 2)::Any
│     %261 = Enzyme.Compiler.:(==)::typeof(==)
│     %262 = (isa)(%260, WeakRef)::Bool
└────        goto #133 if not %262
132 ─ %264 = π (%260, WeakRef)
│     %265 = invoke %261(%264::WeakRef, $(QuoteNode(Enzyme.Compiler.AnyState))::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #138
133 ─ %267 = (isa)(%260, Missing)::Bool
└────        goto #135 if not %267
134 ─        goto #138
135 ─        goto #137 if not true
136 ─ %271 = (%260 === $(QuoteNode(Enzyme.Compiler.AnyState)))::Bool
└────        goto #138
137 ─        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
138 ┄ %275 = φ (#132 => %265, #134 => $(QuoteNode(missing)), #136 => %271)::Union{Missing, Bool}
└────        goto #140 if not %275
139 ─        goto #141
140 ─ %278 = (Core._svec_ref)(%240, 2)::Any
│            Core.apply_type(Base.Val, %278)::Type{Val{_A}} where _A
└────        goto #142
141 ┄        goto #142
142 ┄ %282 = φ (#140 => %278, #141 => $(QuoteNode(Enzyme.Compiler.AnyState)))::Any
│     %283 = (%282 isa Enzyme.Compiler.ActivityState)::Bool
└────        goto #144 if not %283
143 ─        goto #148
144 ─ %286 = (isa)(%282, Enzyme.Compiler.ActivityState)::Bool
└────        goto #146 if not %286
145 ─ %288 = π (%282, Enzyme.Compiler.ActivityState)
└────        goto #147
146 ─ %290 = Base.convert(Enzyme.Compiler.ActivityState, %282)::Enzyme.Compiler.ActivityState
└────        goto #147
147 ┄ %292 = φ (#145 => %288, #146 => %290)::Enzyme.Compiler.ActivityState
148 ┄ %293 = φ (#143 => %282, #147 => %292)::Any
│     %294 = π (%293, Enzyme.Compiler.ActivityState)
└────        goto #149
149 ┄ %296 = φ (#115 => Enzyme.Compiler.MixedState, #148 => %294)::Enzyme.Compiler.ActivityState
└────        goto #150
150 ─        goto #151
151 ─ %299 = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %300 = (%296 === %299)::Bool
└────        goto #152
152 ─        goto #154 if not %300
153 ─        goto #207
154 ─ %304 = Base.secret_table_token::Symbol
│     %305 = Base.getfield(seen, :ht)::Vector{Any}
│     %306 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%305), :(%219), :(%304)))::Any
│     %307 = (%306 === %304)::Bool
└────        goto #156 if not %307
155 ─        goto #157
156 ─        goto #157
157 ┄ %311 = φ (#155 => %304, #156 => %306)::Any
│     %312 = (%311 === Base.secret_table_token)::Bool
│     %313 = Core.Intrinsics.not_int(%312)::Bool
└────        goto #158
158 ─        goto #159
159 ─        goto #164 if not %313
160 ─ %317 = Base.getfield(seen, :ht)::Vector{Any}
│     %318 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%317), :(%219), :(Base.secret_table_token)))::Any
│     %319 = (%318 === Base.secret_table_token)::Bool
└────        goto #162 if not %319
161 ─ %321 = Base.KeyError(%219)::Any
│            Base.throw(%321)::Union{}
└────        unreachable
162 ─        goto #163
163 ─        goto #207
164 ─ %326 = $(Expr(:foreigncall, :(:jl_new_struct_uninit), Any, svec(Any), 0, :(:ccall), Core.Box))::Any
│            invoke Base.setindex!(seen::IdDict{Any, Any}, %326::Any, %219::Any)::Any
│     %328 = Base.repr::typeof(repr)
│     %329 = (isa)(%326, Base.BinaryPlatforms.Platform)::Bool
└────        goto #166 if not %329
165 ─ %331 = π (%326, Base.BinaryPlatforms.Platform)
│     %332 = invoke Base.BinaryPlatforms.:(var"#repr#12")(Base.BinaryPlatforms.nothing::Nothing, %328::typeof(repr), %331::Base.BinaryPlatforms.Platform)::String
└────        goto #167
166 ─ %334 = Base.repr(%326)::String
└────        goto #167
167 ┄ %336 = φ (#165 => %332, #166 => %334)::String
│            invoke Base.println("y = "::String, %336::String)::Any
└────        goto #206 if not true
168 ─ %339 = Enzyme.Compiler.isdefined(%219, 1)::Bool
└────        goto #205 if not %339
169 ─ %341 = Enzyme.Compiler.getfield(%219, 1)::Any
│     %342 = (%341 isa Core.Type)::Bool
└────        goto #171 if not %342
170 ─ %344 = π (%341, Type)
│     %345 = Core.apply_type(Core.Type, %344)::Type{Type{T}} where T
└────        goto #172
171 ─ %347 = Core.typeof(%341)::DataType
└────        goto #172
172 ┄ %349 = φ (#170 => %345, #171 => %347)::DataType
│     %350 = Core.tuple(%349, seen, %341, $(QuoteNode(Val{false}())))::Tuple{DataType, IdDict{Any, Any}, Any, Val{false}}
│     %351 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Any}, svec(Any, Int64), 0, :(:ccall), Vector{Any}, 4, 4))::Vector{Any}
└────        goto #181 if not true
173 ┄ %353 = φ (#172 => 1, #180 => %372)::Int64
│     %354 = φ (#172 => 1, #180 => %373)::Int64
│     %355 = φ (#172 => 1, #180 => %366)::Int64
│     %356 = Base.getfield(%350, %353, true)::Any
│     %357 = (%356 isa Core.Type)::Bool
└────        goto #175 if not %357
174 ─ %359 = π (%356, Type)
│     %360 = Core.apply_type(Core.Type, %359)::Type{Type{T}} where T
└────        goto #176
175 ─ %362 = Core.typeof(%356)::DataType
└────        goto #176
176 ┄ %364 = φ (#174 => %360, #175 => %362)::DataType
│            Base.arrayset(false, %351, %364, %355)::Vector{Any}
│     %366 = Base.add_int(%355, 1)::Int64
│     %367 = (%354 === 4)::Bool
└────        goto #178 if not %367
177 ─        goto #179
178 ─ %370 = Base.add_int(%354, 1)::Int64
└────        goto #179
179 ┄ %372 = φ (#178 => %370)::Int64
│     %373 = φ (#178 => %370)::Int64
│     %374 = φ (#177 => true, #178 => false)::Bool
│     %375 = Base.not_int(%374)::Bool
└────        goto #181 if not %375
180 ─        goto #173
181 ┄ %378 = Core._apply_iterate(Base.iterate, Core.apply_type, (Tuple,), %351)::Type
└────        goto #182
182 ─ %380 = InteractiveUtils.code_typed::typeof(code_typed)
│     %381 = EnzymeCore.make_zero::typeof(EnzymeCore.make_zero)
│     %382 = invoke Base.:(var"#code_typed#25")($(QuoteNode(Base.Pairs{Symbol, Union{}, Tuple{}, @NamedTuple{}}()))::Base.Pairs{Symbol, Union{}, Tuple{}, @NamedTuple{}}, %380::typeof(code_typed), %381::Any, %378::Any)::Vector{Any}
│     %383 = Base.arraylen(%382)::Int64
│     %384 = (%383 === 1)::Bool
└────        goto #184 if not %384
183 ─ %386 = Base.arrayref(true, %382, 1)::Any
└────        goto #185
184 ─        nothing::Nothing
185 ┄ %389 = φ (#183 => %386, #184 => %382)::Any
│     %390 = Base.repr::typeof(repr)
│     %391 = (isa)(%389, Base.BinaryPlatforms.Platform)::Bool
└────        goto #187 if not %391
186 ─ %393 = π (%389, Base.BinaryPlatforms.Platform)
│     %394 = invoke Base.BinaryPlatforms.:(var"#repr#12")(Base.BinaryPlatforms.nothing::Nothing, %390::typeof(repr), %393::Base.BinaryPlatforms.Platform)::String
└────        goto #188
187 ─ %396 = Base.repr(%389)::String
└────        goto #188
188 ┄ %398 = φ (#186 => %394, #187 => %396)::String
│            invoke Base.println("#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = "::String, %398::String)::Any
│     %400 = (%341 isa Core.Type)::Bool
└────        goto #190 if not %400
189 ─ %402 = π (%341, Type)
│     %403 = Core.apply_type(Core.Type, %402)::Type{Type{T}} where T
└────        goto #191
190 ─ %405 = Core.typeof(%341)::DataType
└────        goto #191
191 ┄ %407 = φ (#189 => %403, #190 => %405)::DataType
│     %408 = Core.tuple(%407, seen, %341, $(QuoteNode(Val{false}())))::Tuple{DataType, IdDict{Any, Any}, Any, Val{false}}
│     %409 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Any}, svec(Any, Int64), 0, :(:ccall), Vector{Any}, 4, 4))::Vector{Any}
└────        goto #200 if not true
192 ┄ %411 = φ (#191 => 1, #199 => %430)::Int64
│     %412 = φ (#191 => 1, #199 => %431)::Int64
│     %413 = φ (#191 => 1, #199 => %424)::Int64
│     %414 = Base.getfield(%408, %411, true)::Any
│     %415 = (%414 isa Core.Type)::Bool
└────        goto #194 if not %415
193 ─ %417 = π (%414, Type)
│     %418 = Core.apply_type(Core.Type, %417)::Type{Type{T}} where T
└────        goto #195
194 ─ %420 = Core.typeof(%414)::DataType
└────        goto #195
195 ┄ %422 = φ (#193 => %418, #194 => %420)::DataType
│            Base.arrayset(false, %409, %422, %413)::Vector{Any}
│     %424 = Base.add_int(%413, 1)::Int64
│     %425 = (%412 === 4)::Bool
└────        goto #197 if not %425
196 ─        goto #198
197 ─ %428 = Base.add_int(%412, 1)::Int64
└────        goto #198
198 ┄ %430 = φ (#197 => %428)::Int64
│     %431 = φ (#197 => %428)::Int64
│     %432 = φ (#196 => true, #197 => false)::Bool
│     %433 = Base.not_int(%432)::Bool
└────        goto #200 if not %433
199 ─        goto #192
200 ┄ %436 = Core._apply_iterate(Base.iterate, Core.apply_type, (Tuple,), %409)::Type
└────        goto #201
201 ─ %438 = InteractiveUtils.code_llvm::typeof(InteractiveUtils.code_llvm)
│     %439 = EnzymeCore.make_zero::typeof(EnzymeCore.make_zero)
│            invoke InteractiveUtils.:(var"#code_llvm#39")(false::Bool, false::Bool, true::Bool, :default::Symbol, %438::typeof(InteractiveUtils.code_llvm), %439::Any, %436::Any)::Nothing
│     %441 = invoke Base.:(var"#sprint#501")(nothing::Nothing, 0::Int64, sprint::typeof(sprint), show::Function, nothing::Nothing)::String
│            invoke Base.println("#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = "::String, %441::String)::Any
│     %443 = (%341 isa Core.Type)::Bool
└────        goto #203 if not %443
202 ─ %445 = π (%341, Type)
│     %446 = Core.apply_type(Core.Type, %445)::Type{Type{T}} where T
└────        goto #204
203 ─ %448 = Core.typeof(%341)::DataType
└────        goto #204
204 ┄ %450 = φ (#202 => %446, #203 => %448)::DataType
│     %451 = EnzymeCore.make_zero(%450, seen, %341, $(QuoteNode(Val{false}())))::Any
└────        $(Expr(:foreigncall, :(:jl_set_nth_field), Nothing, svec(Any, UInt64, Any), 0, :(:ccall), :(%326), 0x0000000000000000, :(%451), 0x0000000000000000))::Nothing
205 ┄        nothing::Nothing
206 ┄ %454 = Core.tuple("end", %326)::Tuple{String, Any}
│     %455 = Base.repr(%454)::String
│            invoke Base.println("(\"end\", y) = "::String, %455::String)::Any
└────        goto #207
207 ┄ %458 = φ (#153 => %219, #163 => %318, #206 => %326)::Any
└────        Base.arrayset(true, %217, %458, 1)::Vector{Any}
208 ┄ %460 = $(Expr(:foreigncall, :(:jl_array_ptr), Ptr{Any}, svec(Any), 0, :(:ccall), :(%217)))::Ptr{Any}
│     %461 = $(Expr(:foreigncall, :(:jl_new_structv), Any, svec(Any, Ptr{Any}, UInt32), 0, :(:ccall), Main.ThreeMassSpring.var"#q_true#35", :(%460), 0x00000001, 0x00000001, :(%217)))::Any
│            invoke Base.setindex!(seen::IdDict{Any, Any}, %461::Any, %112::Any)::Any
└────        goto #209
209 ┄ %464 = φ (#97 => %112, #107 => %209, #208 => %461)::Any
│            Base.arrayset(true, %110, %464, 1)::Vector{Any}
└────        nothing::Nothing
210 ┄ %467 = $(Expr(:foreigncall, :(:jl_array_ptr), Ptr{Any}, svec(Any), 0, :(:ccall), :(%110)))::Ptr{Any}
│     %468 = $(Expr(:foreigncall, :(:jl_new_structv), Any, svec(Any, Ptr{Any}, UInt32), 0, :(:ccall), Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}, :(%467), 0x00000001, 0x00000001, :(%110)))::Any
│            invoke Base.setindex!(seen::IdDict{Any, Any}, %468::Any, prev::Any)::Any
└────        return %468
) => Any
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1218 within `make_zero`
define nonnull {}* @julia_make_zero_5981({}* noundef nonnull align 8 dereferenceable(24) %0, [1 x [1 x {}*]]* nocapture noundef nonnull readonly align 8 dereferenceable(8) %1) #0 {
top:
  %2 = alloca [5 x {}*], align 8
  %gcframe595 = alloca [9 x {}*], align 16
  %gcframe595.sub = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe595, i64 0, i64 0
  %.sub = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 0
  %3 = bitcast [9 x {}*]* %gcframe595 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %3, i8 0, i64 72, i1 true)
  %4 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #3
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    %5 = bitcast [9 x {}*]* %gcframe595 to i64*
    store i64 28, i64* %5, align 16
    %6 = load {}**, {}*** %4, align 8
    %7 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe595, i64 0, i64 1
    %8 = bitcast {}** %7 to {}***
    store {}** %6, {}*** %8, align 8
    %9 = bitcast {}*** %4 to {}***
    store {}** %gcframe595.sub, {}*** %9, align 8
    store {}* inttoptr (i64 10870433304 to {}*), {}** %.sub, align 8
    %10 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 1
    store {}* inttoptr (i64 4765553104 to {}*), {}** %10, align 8
    %11 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4695151264 to {}*), {}** nonnull %.sub, i32 2)
    %12 = bitcast {}* %11 to i64*
    %13 = getelementptr inbounds i64, i64* %12, i64 -1
    %14 = load atomic i64, i64* %13 unordered, align 8
    %15 = and i64 %14, -16
    %16 = inttoptr i64 %15 to {}*
    %exactly_isa = icmp eq {}* %16, inttoptr (i64 192 to {}*)
    br i1 %exactly_isa, label %pass, label %fail

L11:                                              ; preds = %pass
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:519
    store {}* inttoptr (i64 4694782816 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4755589184 to {}*), {}** %10, align 8
    %17 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
    store {}* inttoptr (i64 10870433312 to {}*), {}** %17, align 8
    %18 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 3
    store {}* inttoptr (i64 4765553104 to {}*), {}** %18, align 8
    %19 = call nonnull {}* @jl_f__apply_iterate({}* null, {}** nonnull %.sub, i32 4)
    %20 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe595, i64 0, i64 2
    store {}* %19, {}** %20, align 16
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:521
    store {}* inttoptr (i64 6051398144 to {}*), {}** %.sub, align 8
    store {}* %19, {}** %10, align 8
    store {}* inttoptr (i64 4766712496 to {}*), {}** %17, align 8
    store {}* inttoptr (i64 4834800096 to {}*), {}** %18, align 8
    %21 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 4
    store {}* inttoptr (i64 4834800096 to {}*), {}** %21, align 8
    %22 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 5)
    store {}* %22, {}** %20, align 16
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:287 within `Merger`
     store {}* inttoptr (i64 4306583560 to {}*), {}** %.sub, align 8
     %23 = call nonnull {}* @ijl_new_structv({}* nonnull %22, {}** nonnull %.sub, i32 1)
     store {}* %23, {}** %20, align 16
; ││└
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ ntuple.jl:48 within `ntuple`
     store {}* inttoptr (i64 4306731360 to {}*), {}** %.sub, align 8
     %24 = call nonnull {}* @ijl_apply_generic({}* nonnull %23, {}** nonnull %.sub, i32 1)
     store {}* %24, {}** %20, align 16
; ││└
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330 within `forcefold`
     store {}* inttoptr (i64 6051393936 to {}*), {}** %.sub, align 8
     store {}* inttoptr (i64 6051393440 to {}*), {}** %10, align 8
     store {}* inttoptr (i64 6051396352 to {}*), {}** %17, align 8
     store {}* %24, {}** %18, align 8
     %25 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4741445872 to {}*), {}** nonnull %.sub, i32 4)
     %26 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe595, i64 0, i64 3
     store {}* %25, {}** %26, align 8
; │││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %25, {}** %.sub, align 8
     store {}* inttoptr (i64 4306731648 to {}*), {}** %10, align 8
     %27 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %28 = bitcast {}* %27 to i64*
     %29 = getelementptr inbounds i64, i64* %28, i64 -1
     %30 = load atomic i64, i64* %29 unordered, align 8
     %31 = and i64 %30, -16
     switch i64 %31, label %post_is325 [
    i64 4766708064, label %L25
    i64 4748075488, label %post_box_union282
    i64 6042230432, label %is324
  ]

L25:                                              ; preds = %L11
     store {}* %27, {}** %20, align 16
     %32 = call i8 @"j_==_5989"({}* nonnull %27, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass287

L39:                                              ; preds = %pass287
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %25, {}** %.sub, align 8
     store {}* inttoptr (i64 4306731648 to {}*), {}** %10, align 8
     %33 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %34 = bitcast {}* %33 to i64*
     %35 = getelementptr inbounds i64, i64* %34, i64 -1
     %36 = load atomic i64, i64* %35 unordered, align 8
     %37 = and i64 %36, -16
     switch i64 %37, label %post_is316 [
    i64 4766708064, label %L43
    i64 4748075488, label %post_box_union304
    i64 6042230432, label %is315
  ]

L43:                                              ; preds = %L39
     store {}* %33, {}** %20, align 16
     %38 = call i8 @"j_==_5989"({}* nonnull %33, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass309

L57:                                              ; preds = %pass309
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:335 within `forcefold`
     store {}* %25, {}** %.sub, align 8
     store {}* inttoptr (i64 4306731648 to {}*), {}** %10, align 8
     %39 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     store {}* %39, {}** %20, align 16
; │││┌ @ essentials.jl:869 within `Val`
      store {}* inttoptr (i64 4695625552 to {}*), {}** %.sub, align 8
      store {}* %39, {}** %10, align 8
      %40 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L61

L61:                                              ; preds = %pass309, %pass287, %L57
     %value_phi289 = phi {}* [ %39, %L57 ], [ inttoptr (i64 5869115840 to {}*), %pass309 ], [ inttoptr (i64 5869115840 to {}*), %pass287 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:525
    %41 = bitcast {}* %value_phi289 to i64*
    %42 = getelementptr inbounds i64, i64* %41, i64 -1
    %43 = load atomic i64, i64* %42 unordered, align 8
    %44 = and i64 %43, -16
    %45 = inttoptr i64 %44 to {}*
    %exactly_isa291.not = icmp eq {}* %45, inttoptr (i64 6042230432 to {}*)
    br i1 %exactly_isa291.not, label %L72, label %L72.thread

L72.thread:                                       ; preds = %L61
    store {}* %value_phi289, {}** %20, align 16
    store {}* inttoptr (i64 6042230432 to {}*), {}** %.sub, align 8
    store {}* %value_phi289, {}** %10, align 8
    %46 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
    br label %L78

L72:                                              ; preds = %L61
    %.not473 = icmp eq {}* %value_phi289, null
    br i1 %.not473, label %L82, label %L78

L78:                                              ; preds = %L72, %L72.thread
    %unbox339.in.in = phi {}* [ %46, %L72.thread ], [ %value_phi289, %L72 ]
    %unbox339.in = bitcast {}* %unbox339.in.in to i32*
    %unbox339 = load i32, i32* %unbox339.in, align 4
; │└
; │ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:556 within `guaranteed_const_nongen`
; │┌ @ Base.jl:159 within `==`
    %.not = icmp eq i32 %unbox339, 0
; └└
  br i1 %.not, label %L82, label %L84

common.ret:                                       ; preds = %merge_own._crit_edge, %L97, %L82
  %common.ret.op = phi {}* [ %box, %L82 ], [ %243, %merge_own._crit_edge ], [ %63, %L97 ]
  %47 = load {}*, {}** %7, align 8
  %48 = bitcast {}*** %4 to {}**
  store {}* %47, {}** %48, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L82:                                              ; preds = %L78, %L72
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1221 within `make_zero`
  %ptls_field615 = getelementptr inbounds {}**, {}*** %4, i64 2
  %49 = bitcast {}*** %ptls_field615 to i8**
  %ptls_load616617 = load i8*, i8** %49, align 8
  %box = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load616617, i32 1136, i32 16) #13
  %50 = bitcast {}* %box to i64*
  %51 = getelementptr inbounds i64, i64* %50, i64 -1
  store atomic i64 10967227792, i64* %51 unordered, align 8
  %memcpy_refined_src = getelementptr inbounds [1 x [1 x {}*]], [1 x [1 x {}*]]* %1, i64 0, i64 0, i64 0
  %memcpy_refined_dst = bitcast {}* %box to {}**
  %52 = load {}*, {}** %memcpy_refined_src, align 8
  store {}* %52, {}** %memcpy_refined_dst, align 8
  br label %common.ret

L84:                                              ; preds = %pass, %L78
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1223 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %53 = bitcast {}* %0 to {}**
      %getfield = load atomic {}*, {}** %53 unordered, align 8
      %54 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe595, i64 0, i64 3
      store {}* %getfield, {}** %54, align 8
; │││└
     %ptls_field542596 = getelementptr inbounds {}**, {}*** %4, i64 2
     %55 = bitcast {}*** %ptls_field542596 to i8**
     %ptls_load543597598 = load i8*, i8** %55, align 8
     %box3 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load543597598, i32 1136, i32 16) #13
     %56 = bitcast {}* %box3 to i64*
     %57 = getelementptr inbounds i64, i64* %56, i64 -1
     store atomic i64 10967227792, i64* %57 unordered, align 8
     %memcpy_refined_src4 = getelementptr inbounds [1 x [1 x {}*]], [1 x [1 x {}*]]* %1, i64 0, i64 0, i64 0
     %memcpy_refined_dst5 = bitcast {}* %box3 to {}**
     %58 = load {}*, {}** %memcpy_refined_src4, align 8
     store {}* %58, {}** %memcpy_refined_dst5, align 8
     %59 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe595, i64 0, i64 2
     store {}* %box3, {}** %59, align 16
     %60 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %box3, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not435 = icmp eq {}* %60, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not435, label %L106, label %L97

L97:                                              ; preds = %L84
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1224 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield8 = load atomic {}*, {}** %53 unordered, align 8
    store {}* %getfield8, {}** %54, align 8
; │└
   %ptls_load546599600 = load i8*, i8** %55, align 8
   %box10 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load546599600, i32 1136, i32 16) #13
   %61 = bitcast {}* %box10 to i64*
   %62 = getelementptr inbounds i64, i64* %61, i64 -1
   store atomic i64 10967227792, i64* %62 unordered, align 8
   %memcpy_refined_dst12 = bitcast {}* %box10 to {}**
   store {}* %58, {}** %memcpy_refined_dst12, align 8
   store {}* %box10, {}** %59, align 16
   %63 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield8, {}* nonnull %box10, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not437 = icmp eq {}* %63, inttoptr (i64 4308354632 to {}*)
   br i1 %.not437, label %L101, label %common.ret

L101:                                             ; preds = %L97
   %ptls_load549601602 = load i8*, i8** %55, align 8
   %box14 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load549601602, i32 1136, i32 16) #13
   %64 = bitcast {}* %box14 to i64*
   %65 = getelementptr inbounds i64, i64* %64, i64 -1
   store atomic i64 10967227792, i64* %65 unordered, align 8
   %memcpy_refined_dst16 = bitcast {}* %box14 to {}**
   store {}* %58, {}** %memcpy_refined_dst16, align 8
   store {}* %box14, {}** %59, align 16
   store {}* %box14, {}** %.sub, align 8
   %66 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %66)
   unreachable

L106:                                             ; preds = %L84
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1257 within `make_zero`
; ┌ @ boot.jl:475 within `Array`
   %67 = call nonnull {}* inttoptr (i64 4311340472 to {}* ({}*, i64)*)({}* inttoptr (i64 4766710736 to {}*), i64 1)
   %68 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe595, i64 0, i64 6
   store {}* %67, {}** %68, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    store {}* inttoptr (i64 10870432152 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4765553104 to {}*), {}** %10, align 8
    %69 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4695151264 to {}*), {}** nonnull %.sub, i32 2)
    %70 = bitcast {}* %69 to i64*
    %71 = getelementptr inbounds i64, i64* %70, i64 -1
    %72 = load atomic i64, i64* %71 unordered, align 8
    %73 = and i64 %72, -16
    %74 = inttoptr i64 %73 to {}*
    %exactly_isa18 = icmp eq {}* %74, inttoptr (i64 192 to {}*)
    br i1 %exactly_isa18, label %pass20, label %fail19

L123:                                             ; preds = %pass20
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:519
    store {}* inttoptr (i64 4694782816 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4755589184 to {}*), {}** %10, align 8
    %75 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
    store {}* inttoptr (i64 10870432160 to {}*), {}** %75, align 8
    %76 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 3
    store {}* inttoptr (i64 4765553104 to {}*), {}** %76, align 8
    %77 = call nonnull {}* @jl_f__apply_iterate({}* null, {}** nonnull %.sub, i32 4)
    store {}* %77, {}** %59, align 16
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:521
    store {}* inttoptr (i64 6051398144 to {}*), {}** %.sub, align 8
    store {}* %77, {}** %10, align 8
    store {}* inttoptr (i64 4766712496 to {}*), {}** %75, align 8
    store {}* inttoptr (i64 4834800096 to {}*), {}** %76, align 8
    %78 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 4
    store {}* inttoptr (i64 4834800096 to {}*), {}** %78, align 8
    %79 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 5)
    store {}* %79, {}** %59, align 16
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:287 within `Merger`
     store {}* inttoptr (i64 4306583560 to {}*), {}** %.sub, align 8
     %80 = call nonnull {}* @ijl_new_structv({}* nonnull %79, {}** nonnull %.sub, i32 1)
     store {}* %80, {}** %59, align 16
; ││└
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ ntuple.jl:48 within `ntuple`
     store {}* inttoptr (i64 4306731360 to {}*), {}** %.sub, align 8
     %81 = call nonnull {}* @ijl_apply_generic({}* nonnull %80, {}** nonnull %.sub, i32 1)
     store {}* %81, {}** %59, align 16
; ││└
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330 within `forcefold`
     store {}* inttoptr (i64 6051393936 to {}*), {}** %.sub, align 8
     store {}* inttoptr (i64 6051393440 to {}*), {}** %10, align 8
     store {}* inttoptr (i64 6051396352 to {}*), {}** %75, align 8
     store {}* %81, {}** %76, align 8
     %82 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4741445872 to {}*), {}** nonnull %.sub, i32 4)
     store {}* %82, {}** %54, align 8
; │││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %82, {}** %.sub, align 8
     store {}* inttoptr (i64 4306731648 to {}*), {}** %10, align 8
     %83 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %84 = bitcast {}* %83 to i64*
     %85 = getelementptr inbounds i64, i64* %84, i64 -1
     %86 = load atomic i64, i64* %85 unordered, align 8
     %87 = and i64 %86, -16
     switch i64 %87, label %post_is264 [
    i64 4766708064, label %L137
    i64 4748075488, label %post_box_union221
    i64 6042230432, label %is263
  ]

L137:                                             ; preds = %L123
     store {}* %83, {}** %59, align 16
     %88 = call i8 @"j_==_5989"({}* nonnull %83, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass226

L151:                                             ; preds = %pass226
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %82, {}** %.sub, align 8
     store {}* inttoptr (i64 4306731648 to {}*), {}** %10, align 8
     %89 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %90 = bitcast {}* %89 to i64*
     %91 = getelementptr inbounds i64, i64* %90, i64 -1
     %92 = load atomic i64, i64* %91 unordered, align 8
     %93 = and i64 %92, -16
     switch i64 %93, label %post_is255 [
    i64 4766708064, label %L155
    i64 4748075488, label %post_box_union243
    i64 6042230432, label %is254
  ]

L155:                                             ; preds = %L151
     store {}* %89, {}** %59, align 16
     %94 = call i8 @"j_==_5989"({}* nonnull %89, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass248

L169:                                             ; preds = %pass248
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:335 within `forcefold`
     store {}* %82, {}** %.sub, align 8
     store {}* inttoptr (i64 4306731648 to {}*), {}** %10, align 8
     %95 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     store {}* %95, {}** %59, align 16
; │││┌ @ essentials.jl:869 within `Val`
      store {}* inttoptr (i64 4695625552 to {}*), {}** %.sub, align 8
      store {}* %95, {}** %10, align 8
      %96 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L173

L173:                                             ; preds = %pass248, %pass226, %L169
     %value_phi228 = phi {}* [ %95, %L169 ], [ inttoptr (i64 5869115840 to {}*), %pass248 ], [ inttoptr (i64 5869115840 to {}*), %pass226 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:525
    %97 = bitcast {}* %value_phi228 to i64*
    %98 = getelementptr inbounds i64, i64* %97, i64 -1
    %99 = load atomic i64, i64* %98 unordered, align 8
    %100 = and i64 %99, -16
    %101 = inttoptr i64 %100 to {}*
    %exactly_isa230.not = icmp eq {}* %101, inttoptr (i64 6042230432 to {}*)
    br i1 %exactly_isa230.not, label %L184, label %L184.thread

L184.thread:                                      ; preds = %L173
    store {}* %value_phi228, {}** %59, align 16
    store {}* inttoptr (i64 6042230432 to {}*), {}** %.sub, align 8
    store {}* %value_phi228, {}** %10, align 8
    %102 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
    br label %L190

L184:                                             ; preds = %L173
    %.not466 = icmp eq {}* %value_phi228, null
    br i1 %.not466, label %L194, label %L190

L190:                                             ; preds = %L184, %L184.thread
    %unbox346.in.in = phi {}* [ %102, %L184.thread ], [ %value_phi228, %L184 ]
    %unbox346.in = bitcast {}* %unbox346.in.in to i32*
    %unbox346 = load i32, i32* %unbox346.in, align 4
; │└
; │ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:556 within `guaranteed_const_nongen`
; │┌ @ Base.jl:159 within `==`
    %.not439 = icmp eq i32 %unbox346, 0
; └└
  br i1 %.not439, label %L194, label %L195

L194:                                             ; preds = %L190, %L184
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1218 within `make_zero`
  %ptls_load552613614 = load i8*, i8** %55, align 8
  %box349 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load552613614, i32 1136, i32 16) #13
  %103 = bitcast {}* %box349 to i64*
  %104 = getelementptr inbounds i64, i64* %103, i64 -1
  store atomic i64 10967363344, i64* %104 unordered, align 8
  %memcpy_refined_dst351 = bitcast {}* %box349 to {}**
  store {}* %58, {}** %memcpy_refined_dst351, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1221
  br label %L464

L195:                                             ; preds = %pass20, %L190
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1223
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %getfield30 = load atomic {}*, {}** %53 unordered, align 8
      store {}* %getfield30, {}** %54, align 8
; │││└
     %ptls_load555603604 = load i8*, i8** %55, align 8
     %box32 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load555603604, i32 1136, i32 16) #13
     %105 = bitcast {}* %box32 to i64*
     %106 = getelementptr inbounds i64, i64* %105, i64 -1
     store atomic i64 10967363344, i64* %106 unordered, align 8
     %memcpy_refined_dst34 = bitcast {}* %box32 to {}**
     store {}* %58, {}** %memcpy_refined_dst34, align 8
     store {}* %box32, {}** %59, align 16
     %107 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield30, {}* nonnull %box32, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not443 = icmp eq {}* %107, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not443, label %L217, label %L208

L208:                                             ; preds = %L195
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1224
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield37 = load atomic {}*, {}** %53 unordered, align 8
    store {}* %getfield37, {}** %54, align 8
; │└
   %ptls_load558605606 = load i8*, i8** %55, align 8
   %box39 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load558605606, i32 1136, i32 16) #13
   %108 = bitcast {}* %box39 to i64*
   %109 = getelementptr inbounds i64, i64* %108, i64 -1
   store atomic i64 10967363344, i64* %109 unordered, align 8
   %memcpy_refined_dst41 = bitcast {}* %box39 to {}**
   store {}* %58, {}** %memcpy_refined_dst41, align 8
   store {}* %box39, {}** %59, align 16
   %110 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield37, {}* nonnull %box39, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not445 = icmp eq {}* %110, inttoptr (i64 4308354632 to {}*)
   br i1 %.not445, label %L212, label %L464

L212:                                             ; preds = %L208
   %ptls_load561609610 = load i8*, i8** %55, align 8
   %box43 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load561609610, i32 1136, i32 16) #13
   %111 = bitcast {}* %box43 to i64*
   %112 = getelementptr inbounds i64, i64* %111, i64 -1
   store atomic i64 10967363344, i64* %112 unordered, align 8
   %memcpy_refined_dst45 = bitcast {}* %box43 to {}**
   store {}* %58, {}** %memcpy_refined_dst45, align 8
   store {}* %box43, {}** %59, align 16
   store {}* %box43, {}** %.sub, align 8
   %113 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %113)
   unreachable

L217:                                             ; preds = %L195
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1257
; ┌ @ boot.jl:475 within `Array`
   %114 = call nonnull {}* inttoptr (i64 4311340472 to {}* ({}*, i64)*)({}* inttoptr (i64 4766710736 to {}*), i64 1)
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260
  %getfield49 = load atomic {}*, {}** %memcpy_refined_src4 unordered, align 8
  %115 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe595, i64 0, i64 5
  store {}* %114, {}** %115, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    store {}* inttoptr (i64 10870432192 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4765553104 to {}*), {}** %10, align 8
    %116 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4695151264 to {}*), {}** nonnull %.sub, i32 2)
    %117 = bitcast {}* %116 to i64*
    %118 = getelementptr inbounds i64, i64* %117, i64 -1
    %119 = load atomic i64, i64* %118 unordered, align 8
    %120 = and i64 %119, -16
    %121 = inttoptr i64 %120 to {}*
    %exactly_isa51 = icmp eq {}* %121, inttoptr (i64 192 to {}*)
    br i1 %exactly_isa51, label %pass53, label %fail52

L232:                                             ; preds = %pass53
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:519
    store {}* inttoptr (i64 4694782816 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4755589184 to {}*), {}** %10, align 8
    %122 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
    store {}* inttoptr (i64 10870432200 to {}*), {}** %122, align 8
    %123 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 3
    store {}* inttoptr (i64 4765553104 to {}*), {}** %123, align 8
    %124 = call nonnull {}* @jl_f__apply_iterate({}* null, {}** nonnull %.sub, i32 4)
    store {}* %124, {}** %59, align 16
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:521
    store {}* inttoptr (i64 6051398144 to {}*), {}** %.sub, align 8
    store {}* %124, {}** %10, align 8
    store {}* inttoptr (i64 4766712496 to {}*), {}** %122, align 8
    store {}* inttoptr (i64 4834800096 to {}*), {}** %123, align 8
    %125 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 4
    store {}* inttoptr (i64 4834800096 to {}*), {}** %125, align 8
    %126 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 5)
    store {}* %126, {}** %59, align 16
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:287 within `Merger`
     store {}* inttoptr (i64 4306583560 to {}*), {}** %.sub, align 8
     %127 = call nonnull {}* @ijl_new_structv({}* nonnull %126, {}** nonnull %.sub, i32 1)
     store {}* %127, {}** %59, align 16
; ││└
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ ntuple.jl:48 within `ntuple`
     store {}* inttoptr (i64 4306731360 to {}*), {}** %.sub, align 8
     %128 = call nonnull {}* @ijl_apply_generic({}* nonnull %127, {}** nonnull %.sub, i32 1)
     store {}* %128, {}** %59, align 16
; ││└
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330 within `forcefold`
     store {}* inttoptr (i64 6051393936 to {}*), {}** %.sub, align 8
     store {}* inttoptr (i64 6051393440 to {}*), {}** %10, align 8
     store {}* inttoptr (i64 6051396352 to {}*), {}** %122, align 8
     store {}* %128, {}** %123, align 8
     %129 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4741445872 to {}*), {}** nonnull %.sub, i32 4)
     store {}* %129, {}** %54, align 8
; │││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %129, {}** %.sub, align 8
     store {}* inttoptr (i64 4306731648 to {}*), {}** %10, align 8
     %130 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %131 = bitcast {}* %130 to i64*
     %132 = getelementptr inbounds i64, i64* %131, i64 -1
     %133 = load atomic i64, i64* %132 unordered, align 8
     %134 = and i64 %133, -16
     switch i64 %134, label %post_is205 [
    i64 4766708064, label %L246
    i64 4748075488, label %post_box_union
    i64 6042230432, label %is204
  ]

L246:                                             ; preds = %L232
     store {}* %130, {}** %59, align 16
     %135 = call i8 @"j_==_5989"({}* nonnull %130, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass169

L260:                                             ; preds = %pass169
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %129, {}** %.sub, align 8
     store {}* inttoptr (i64 4306731648 to {}*), {}** %10, align 8
     %136 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %137 = bitcast {}* %136 to i64*
     %138 = getelementptr inbounds i64, i64* %137, i64 -1
     %139 = load atomic i64, i64* %138 unordered, align 8
     %140 = and i64 %139, -16
     switch i64 %140, label %post_is [
    i64 4766708064, label %L264
    i64 4748075488, label %post_box_union186
    i64 6042230432, label %is
  ]

L264:                                             ; preds = %L260
     store {}* %136, {}** %59, align 16
     %141 = call i8 @"j_==_5989"({}* nonnull %136, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass191

L278:                                             ; preds = %pass191
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:335 within `forcefold`
     store {}* %129, {}** %.sub, align 8
     store {}* inttoptr (i64 4306731648 to {}*), {}** %10, align 8
     %142 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     store {}* %142, {}** %59, align 16
; │││┌ @ essentials.jl:869 within `Val`
      store {}* inttoptr (i64 4695625552 to {}*), {}** %.sub, align 8
      store {}* %142, {}** %10, align 8
      %143 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L282

L282:                                             ; preds = %pass191, %pass169, %L278
     %value_phi171 = phi {}* [ %142, %L278 ], [ inttoptr (i64 5869115840 to {}*), %pass191 ], [ inttoptr (i64 5869115840 to {}*), %pass169 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:525
    %144 = bitcast {}* %value_phi171 to i64*
    %145 = getelementptr inbounds i64, i64* %144, i64 -1
    %146 = load atomic i64, i64* %145 unordered, align 8
    %147 = and i64 %146, -16
    %148 = inttoptr i64 %147 to {}*
    %exactly_isa173.not = icmp eq {}* %148, inttoptr (i64 6042230432 to {}*)
    br i1 %exactly_isa173.not, label %L293, label %L293.thread

L293.thread:                                      ; preds = %L282
    store {}* %value_phi171, {}** %59, align 16
    store {}* inttoptr (i64 6042230432 to {}*), {}** %.sub, align 8
    store {}* %value_phi171, {}** %10, align 8
    %149 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
    br label %L299

L293:                                             ; preds = %L282
    %.not459 = icmp eq {}* %value_phi171, null
    br i1 %.not459, label %L304, label %L299

L299:                                             ; preds = %L293, %L293.thread
    %unbox357.in.in = phi {}* [ %149, %L293.thread ], [ %value_phi171, %L293 ]
    %unbox357.in = bitcast {}* %unbox357.in.in to i32*
    %unbox357 = load i32, i32* %unbox357.in, align 4
; │└
; │ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:556 within `guaranteed_const_nongen`
; │┌ @ Base.jl:159 within `==`
    %.not447 = icmp eq i32 %unbox357, 0
; └└
  br i1 %.not447, label %L458, label %L304

L304:                                             ; preds = %pass53, %L299, %L293
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1223
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %getfield78 = load atomic {}*, {}** %53 unordered, align 8
      store {}* %getfield78, {}** %59, align 16
; │││└
     %150 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield78, {}* nonnull %getfield49, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not449 = icmp eq {}* %150, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not449, label %L326, label %L317

L317:                                             ; preds = %L304
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1224
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield81 = load atomic {}*, {}** %53 unordered, align 8
    store {}* %getfield81, {}** %59, align 16
; │└
   %151 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield81, {}* nonnull %getfield49, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not450 = icmp eq {}* %151, inttoptr (i64 4308354632 to {}*)
   br i1 %.not450, label %L321, label %L458

L321:                                             ; preds = %L317
   store {}* %getfield49, {}** %.sub, align 8
   %152 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %152)
   unreachable

L326:                                             ; preds = %L304
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1231
  %153 = call nonnull {}* inttoptr (i64 4311439236 to {}* ({}*)*)({}* inttoptr (i64 4695403056 to {}*))
  %154 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe595, i64 0, i64 4
  store {}* %153, {}** %154, align 16
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1232
  store {}* %0, {}** %.sub, align 8
  store {}* %153, {}** %10, align 8
  %155 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
  store {}* %getfield49, {}** %155, align 8
  %156 = call nonnull {}* @"j1_setindex!_5983"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1233
  %157 = bitcast {}* %153 to i64*
  %158 = getelementptr inbounds i64, i64* %157, i64 -1
  %159 = load atomic i64, i64* %158 unordered, align 8
  %160 = and i64 %159, -16
  %161 = inttoptr i64 %160 to {}*
  %exactly_isa85.not = icmp eq {}* %161, inttoptr (i64 4694961600 to {}*)
  br i1 %exactly_isa85.not, label %L331, label %L334

L331:                                             ; preds = %L326
; ┌ @ binaryplatforms.jl:173 within `repr`
   %162 = bitcast {}* %153 to [2 x {}*]*
   %163 = call nonnull {}* @"j_#repr#12_5984"([2 x {}*]* nocapture readonly %162)
; └
  br label %L336

L334:                                             ; preds = %L326
  store {}* %153, {}** %.sub, align 8
  %164 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4699339408 to {}*), {}** nonnull %.sub, i32 1)
  br label %L336

L336:                                             ; preds = %L334, %L331
  %value_phi86 = phi {}* [ %163, %L331 ], [ %164, %L334 ]
  store {}* %value_phi86, {}** %59, align 16
  call void @j_println_5985({}* inttoptr (i64 6083832960 to {}*), {}* nonnull %value_phi86)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1235
  %165 = bitcast {}* %getfield49 to {}**
  %166 = load atomic {}*, {}** %165 unordered, align 8
  %isdefined.not = icmp eq {}* %166, null
  br i1 %isdefined.not, label %L454, label %pass90

L344:                                             ; preds = %pass90
  store {}* %166, {}** %54, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ boot.jl:245 within `Typeof`
    store {}* inttoptr (i64 4766713520 to {}*), {}** %.sub, align 8
    store {}* %166, {}** %10, align 8
    %167 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
    br label %L349

L347:                                             ; preds = %pass90
    %168 = icmp ult {}* %278, inttoptr (i64 1024 to {}*)
    br i1 %168, label %guard_pass161, label %L349

L349:                                             ; preds = %guard_pass161, %L347, %L344
    %value_phi92 = phi {}* [ %167, %L344 ], [ %278, %L347 ], [ %488, %guard_pass161 ]
    store {}* %166, {}** %54, align 8
    store {}* %value_phi92, {}** %59, align 16
; │└
; │┌ @ errorshow.jl:185 within `typesof`
    store {}* %value_phi92, {}** %.sub, align 8
    store {}* %0, {}** %10, align 8
    store {}* %166, {}** %155, align 8
    %169 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 3
    store {}* inttoptr (i64 4732369728 to {}*), {}** %169, align 8
    %170 = call nonnull {}* @jl_f_tuple({}* null, {}** nonnull %.sub, i32 4)
    %171 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe595, i64 0, i64 8
    store {}* %170, {}** %171, align 16
; ││┌ @ array.jl:724 within `_array_for` @ array.jl:721
; │││┌ @ abstractarray.jl:873 within `similar` @ abstractarray.jl:874
; ││││┌ @ boot.jl:484 within `Array` @ boot.jl:475
       %172 = call nonnull {}* inttoptr (i64 4311340472 to {}* ({}*, i64)*)({}* inttoptr (i64 4766710736 to {}*), i64 4)
       %173 = bitcast {}* %172 to { i8*, i64, i16, i16, i32 }*
       %arrayflags_ptr99 = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %173, i64 0, i32 2
       %174 = bitcast {}* %172 to {}**
       %175 = getelementptr inbounds {}*, {}** %174, i64 5
       %176 = bitcast {}* %172 to {}***
       %177 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe595, i64 0, i64 7
       store {}* %172, {}** %177, align 8
; ││└└└
; ││┌ @ tuple.jl:31 within `getindex`
     %178 = call {}* @ijl_get_nth_field_checked({}* nonnull %170, i64 0)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %179 = bitcast {}* %178 to i64*
     %180 = getelementptr inbounds i64, i64* %179, i64 -1
     %181 = load atomic i64, i64* %180 unordered, align 8
     %182 = and i64 %181, -16
     %183 = add i64 %182, -16
     %switch = icmp ult i64 %183, 64
     br i1 %switch, label %L359, label %L362

L359:                                             ; preds = %L349
     store {}* %178, {}** %59, align 16
     store {}* inttoptr (i64 4766713520 to {}*), {}** %.sub, align 8
     store {}* %178, {}** %10, align 8
     %184 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
     br label %L364

L362:                                             ; preds = %L349
     %185 = inttoptr i64 %182 to {}*
     %186 = icmp ult {}* %185, inttoptr (i64 1024 to {}*)
     br i1 %186, label %guard_pass158, label %L364

L364:                                             ; preds = %guard_pass158, %L362, %L359
     %value_phi98 = phi {}* [ %184, %L359 ], [ %185, %L362 ], [ %485, %guard_pass158 ]
; ││└
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags100 = load i16, i16* %arrayflags_ptr99, align 2
     %187 = and i16 %arrayflags100, 3
     %has_owner101 = icmp eq i16 %187, 3
     br i1 %has_owner101, label %array_owned102, label %merge_own103

L389:                                             ; preds = %idxend118, %373
     %value_phi123 = phi {}* [ %375, %373 ], [ %arrayref, %idxend118 ]
; └└└
  %188 = bitcast {}* %value_phi123 to i64*
  %189 = getelementptr inbounds i64, i64* %188, i64 -1
  %190 = load atomic i64, i64* %189 unordered, align 8
  %191 = and i64 %190, -16
  %192 = inttoptr i64 %191 to {}*
  %exactly_isa125.not = icmp eq {}* %192, inttoptr (i64 4694961600 to {}*)
  br i1 %exactly_isa125.not, label %L393, label %L396

L393:                                             ; preds = %L389
; ┌ @ binaryplatforms.jl:173 within `repr`
   %193 = bitcast {}* %value_phi123 to [2 x {}*]*
   store {}* %value_phi123, {}** %59, align 16
   %194 = call nonnull {}* @"j_#repr#12_5984"([2 x {}*]* nocapture readonly %193)
; └
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L398

L396:                                             ; preds = %L389
     store {}* %value_phi123, {}** %59, align 16
; └└└
  store {}* %value_phi123, {}** %.sub, align 8
  %195 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4699339408 to {}*), {}** nonnull %.sub, i32 1)
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L398

L398:                                             ; preds = %L396, %L393
     %value_phi126 = phi {}* [ %194, %L393 ], [ %195, %L396 ]
     store {}* %value_phi126, {}** %59, align 16
; └└└
  call void @j_println_5985({}* inttoptr (i64 6083832656 to {}*), {}* nonnull %value_phi126)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ boot.jl:245 within `Typeof`
    br i1 %switch540, label %L402, label %L405

L402:                                             ; preds = %L398
    store {}* inttoptr (i64 4766713520 to {}*), {}** %.sub, align 8
    store {}* %166, {}** %10, align 8
    %196 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L407

L405:                                             ; preds = %L398
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ boot.jl:245 within `Typeof`
    %197 = icmp ult {}* %278, inttoptr (i64 1024 to {}*)
    br i1 %197, label %guard_pass155, label %L407

L407:                                             ; preds = %guard_pass155, %L405, %L402
    %value_phi129 = phi {}* [ %196, %L402 ], [ %278, %L405 ], [ %482, %guard_pass155 ]
    store {}* %value_phi129, {}** %59, align 16
; │└
; │┌ @ errorshow.jl:185 within `typesof`
    store {}* %value_phi129, {}** %.sub, align 8
    store {}* %0, {}** %10, align 8
    store {}* %166, {}** %155, align 8
    store {}* inttoptr (i64 4732369728 to {}*), {}** %169, align 8
    %198 = call nonnull {}* @jl_f_tuple({}* null, {}** nonnull %.sub, i32 4)
    store {}* %198, {}** %171, align 16
; ││┌ @ array.jl:724 within `_array_for` @ array.jl:721
; │││┌ @ abstractarray.jl:873 within `similar` @ abstractarray.jl:874
; ││││┌ @ boot.jl:484 within `Array` @ boot.jl:475
       %199 = call nonnull {}* inttoptr (i64 4311340472 to {}* ({}*, i64)*)({}* inttoptr (i64 4766710736 to {}*), i64 4)
       %200 = bitcast {}* %199 to { i8*, i64, i16, i16, i32 }*
       %arrayflags_ptr136 = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %200, i64 0, i32 2
       %201 = bitcast {}* %199 to {}**
       %202 = getelementptr inbounds {}*, {}** %201, i64 5
       %203 = bitcast {}* %199 to {}***
       store {}* %199, {}** %177, align 8
; ││└└└
; ││┌ @ tuple.jl:31 within `getindex`
     %204 = call {}* @ijl_get_nth_field_checked({}* nonnull %198, i64 0)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %205 = bitcast {}* %204 to i64*
     %206 = getelementptr inbounds i64, i64* %205, i64 -1
     %207 = load atomic i64, i64* %206 unordered, align 8
     %208 = and i64 %207, -16
     %209 = add i64 %208, -16
     %switch538 = icmp ult i64 %209, 64
     br i1 %switch538, label %L417, label %L420

L417:                                             ; preds = %L407
     store {}* %204, {}** %59, align 16
     store {}* inttoptr (i64 4766713520 to {}*), {}** %.sub, align 8
     store {}* %204, {}** %10, align 8
     %210 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L422

L420:                                             ; preds = %L407
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ boot.jl:245 within `Typeof`
     %211 = inttoptr i64 %208 to {}*
     %212 = icmp ult {}* %211, inttoptr (i64 1024 to {}*)
     br i1 %212, label %guard_pass152, label %L422

L422:                                             ; preds = %guard_pass152, %L420, %L417
     %value_phi135 = phi {}* [ %210, %L417 ], [ %211, %L420 ], [ %479, %guard_pass152 ]
; ││└
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags137 = load i16, i16* %arrayflags_ptr136, align 2
     %213 = and i16 %arrayflags137, 3
     %has_owner138 = icmp eq i16 %213, 3
     br i1 %has_owner138, label %array_owned139, label %merge_own140

L445:                                             ; preds = %471
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1242
; ┌ @ boot.jl:245 within `Typeof`
   store {}* inttoptr (i64 4766713520 to {}*), {}** %.sub, align 8
   store {}* %166, {}** %10, align 8
   %214 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L450

L448:                                             ; preds = %471
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1242
; ┌ @ boot.jl:245 within `Typeof`
   %215 = icmp ult {}* %278, inttoptr (i64 1024 to {}*)
   br i1 %215, label %guard_pass, label %L450

L450:                                             ; preds = %guard_pass, %L448, %L445
   %value_phi150 = phi {}* [ %214, %L445 ], [ %278, %L448 ], [ %476, %guard_pass ]
   store {}* %value_phi150, {}** %59, align 16
; └
  store {}* %value_phi150, {}** %.sub, align 8
  store {}* %0, {}** %10, align 8
  store {}* %166, {}** %155, align 8
  store {}* inttoptr (i64 4732369728 to {}*), {}** %169, align 8
  %216 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 5389776832 to {}*), {}** nonnull %.sub, i32 4)
  store {}* %216, {}** %59, align 16
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1246
  call void inttoptr (i64 4311674072 to void ({}*, i64, {}*)*)({}* nonnull %153, i64 0, {}* nonnull %216)
  br label %L454

L454:                                             ; preds = %L450, %L336
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1249
; ┌ @ show.jl:1181 within `macro expansion`
   store {}* inttoptr (i64 6083832288 to {}*), {}** %.sub, align 8
   store {}* %153, {}** %10, align 8
   %217 = call nonnull {}* @jl_f_tuple({}* null, {}** nonnull %.sub, i32 2)
   store {}* %217, {}** %59, align 16
; └
  store {}* %217, {}** %.sub, align 8
  %218 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4699339408 to {}*), {}** nonnull %.sub, i32 1)
  store {}* %218, {}** %59, align 16
  call void @j_println_5985({}* inttoptr (i64 6083832256 to {}*), {}* nonnull %218)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1250
  br label %L458

L458:                                             ; preds = %L454, %L317, %L299
  %value_phi55 = phi {}* [ %153, %L454 ], [ %getfield49, %L299 ], [ %151, %L317 ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1262
; ┌ @ essentials.jl:645 within `setindex!`
   %219 = bitcast {}* %114 to { i8*, i64, i16, i16, i32 }*
   %arraylen_ptr56 = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %219, i64 0, i32 1
   %arraylen57 = load i64, i64* %arraylen_ptr56, align 8
   %inbounds58.not = icmp eq i64 %arraylen57, 0
   br i1 %inbounds58.not, label %oob59, label %idxend61

L464:                                             ; preds = %merge_own66._crit_edge, %L208, %L194
   %value_phi22 = phi {}* [ %box349, %L194 ], [ %269, %merge_own66._crit_edge ], [ %110, %L208 ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1262 within `make_zero`
; ┌ @ essentials.jl:645 within `setindex!`
   %220 = bitcast {}* %67 to { i8*, i64, i16, i16, i32 }*
   %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %220, i64 0, i32 1
   %arraylen = load i64, i64* %arraylen_ptr, align 8
   %inbounds.not = icmp eq i64 %arraylen, 0
   br i1 %inbounds.not, label %oob, label %idxend

fail:                                             ; preds = %top
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4766708480 to {}*), {}* %11)
    unreachable

pass:                                             ; preds = %top
    %221 = icmp eq {}* %11, inttoptr (i64 4834800096 to {}*)
    br i1 %221, label %L11, label %L84

fail19:                                           ; preds = %L106
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4766708480 to {}*), {}* %69)
    unreachable

pass20:                                           ; preds = %L106
    %222 = icmp eq {}* %69, inttoptr (i64 4834800096 to {}*)
    br i1 %222, label %L123, label %L195

oob:                                              ; preds = %L464
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1262 within `make_zero`
; ┌ @ essentials.jl:645 within `setindex!`
   %errorbox = alloca i64, align 8
   store i64 1, i64* %errorbox, align 8
   call void @ijl_bounds_error_ints({}* %67, i64* nonnull %errorbox, i64 1)
   unreachable

idxend:                                           ; preds = %L464
   %arrayflags_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %220, i64 0, i32 2
   %arrayflags = load i16, i16* %arrayflags_ptr, align 2
   %223 = and i16 %arrayflags, 3
   %has_owner = icmp eq i16 %223, 3
   br i1 %has_owner, label %array_owned, label %merge_own

array_owned:                                      ; preds = %idxend
   %224 = bitcast {}* %67 to {}**
   %225 = getelementptr inbounds {}*, {}** %224, i64 5
   %external_owner = load {}*, {}** %225, align 8
   br label %merge_own

merge_own:                                        ; preds = %array_owned, %idxend
   %data_owner = phi {}* [ %67, %idxend ], [ %external_owner, %array_owned ]
   %226 = bitcast {}* %67 to {}***
   %arrayptr = load {}**, {}*** %226, align 8
   store atomic {}* %value_phi22, {}** %arrayptr release, align 8
   %227 = bitcast {}* %data_owner to i64*
   %228 = getelementptr inbounds i64, i64* %227, i64 -1
   %229 = load atomic i64, i64* %228 unordered, align 8
   %230 = and i64 %229, 3
   %231 = icmp eq i64 %230, 3
   %232 = ptrtoint {}** %arrayptr to i64
   %233 = inttoptr i64 %232 to i8*
   br i1 %231, label %234, label %merge_own._crit_edge

234:                                              ; preds = %merge_own
   %235 = bitcast {}* %value_phi22 to i64*
   %236 = getelementptr inbounds i64, i64* %235, i64 -1
   %237 = load atomic i64, i64* %236 unordered, align 8
   %238 = and i64 %237, 1
   %239 = icmp eq i64 %238, 0
   br i1 %239, label %240, label %merge_own._crit_edge

240:                                              ; preds = %234
   call void @ijl_gc_queue_root({}* nonnull %data_owner)
   %241 = bitcast {}* %67 to i8**
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1268 within `make_zero`
; ┌ @ pointer.jl:65 within `unsafe_convert`
   %arrayptr24.pre.pre = load i8*, i8** %241, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1262 within `make_zero`
; ┌ @ essentials.jl:645 within `setindex!`
   br label %merge_own._crit_edge

merge_own._crit_edge:                             ; preds = %240, %234, %merge_own
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1268 within `make_zero`
; ┌ @ pointer.jl:65 within `unsafe_convert`
   %arrayptr24 = phi i8* [ %233, %merge_own ], [ %arrayptr24.pre.pre, %240 ], [ %233, %234 ]
   %242 = ptrtoint i8* %arrayptr24 to i64
; └
  %243 = call nonnull {}* inttoptr (i64 4311447040 to {}* ({}*, i64, i32)*)({}* inttoptr (i64 10967227792 to {}*), i64 %242, i32 1)
  store {}* %243, {}** %54, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1269 within `make_zero`
  %ptls_load564607608 = load i8*, i8** %55, align 8
  %box26 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load564607608, i32 1136, i32 16) #13
  %244 = bitcast {}* %box26 to i64*
  %245 = getelementptr inbounds i64, i64* %244, i64 -1
  store atomic i64 10967227792, i64* %245 unordered, align 8
  %memcpy_refined_dst28 = bitcast {}* %box26 to {}**
  store {}* %58, {}** %memcpy_refined_dst28, align 8
  store {}* %box26, {}** %59, align 16
  store {}* %0, {}** %.sub, align 8
  store {}* %243, {}** %10, align 8
  %246 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
  store {}* %box26, {}** %246, align 8
  %247 = call nonnull {}* @"j1_setindex!_5983"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
  br label %common.ret

fail52:                                           ; preds = %L217
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4766708480 to {}*), {}* %116)
    unreachable

pass53:                                           ; preds = %L217
    %248 = icmp eq {}* %116, inttoptr (i64 4834800096 to {}*)
    br i1 %248, label %L232, label %L304

oob59:                                            ; preds = %L458
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1262
; ┌ @ essentials.jl:645 within `setindex!`
   %errorbox60 = alloca i64, align 8
   store i64 1, i64* %errorbox60, align 8
   call void @ijl_bounds_error_ints({}* %114, i64* nonnull %errorbox60, i64 1)
   unreachable

idxend61:                                         ; preds = %L458
   %arrayflags_ptr62 = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %219, i64 0, i32 2
   %arrayflags63 = load i16, i16* %arrayflags_ptr62, align 2
   %249 = and i16 %arrayflags63, 3
   %has_owner64 = icmp eq i16 %249, 3
   br i1 %has_owner64, label %array_owned65, label %merge_own66

array_owned65:                                    ; preds = %idxend61
   %250 = bitcast {}* %114 to {}**
   %251 = getelementptr inbounds {}*, {}** %250, i64 5
   %external_owner67 = load {}*, {}** %251, align 8
   br label %merge_own66

merge_own66:                                      ; preds = %array_owned65, %idxend61
   %data_owner68 = phi {}* [ %114, %idxend61 ], [ %external_owner67, %array_owned65 ]
   %252 = bitcast {}* %114 to {}***
   %arrayptr70 = load {}**, {}*** %252, align 8
   store atomic {}* %value_phi55, {}** %arrayptr70 release, align 8
   %253 = bitcast {}* %data_owner68 to i64*
   %254 = getelementptr inbounds i64, i64* %253, i64 -1
   %255 = load atomic i64, i64* %254 unordered, align 8
   %256 = and i64 %255, 3
   %257 = icmp eq i64 %256, 3
   %258 = ptrtoint {}** %arrayptr70 to i64
   %259 = inttoptr i64 %258 to i8*
   br i1 %257, label %260, label %merge_own66._crit_edge

260:                                              ; preds = %merge_own66
   %261 = bitcast {}* %value_phi55 to i64*
   %262 = getelementptr inbounds i64, i64* %261, i64 -1
   %263 = load atomic i64, i64* %262 unordered, align 8
   %264 = and i64 %263, 1
   %265 = icmp eq i64 %264, 0
   br i1 %265, label %266, label %merge_own66._crit_edge

266:                                              ; preds = %260
   call void @ijl_gc_queue_root({}* nonnull %data_owner68)
   %267 = bitcast {}* %114 to i8**
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1268
; ┌ @ pointer.jl:65 within `unsafe_convert`
   %arrayptr72.pre.pre = load i8*, i8** %267, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1262
; ┌ @ essentials.jl:645 within `setindex!`
   br label %merge_own66._crit_edge

merge_own66._crit_edge:                           ; preds = %266, %260, %merge_own66
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1268
; ┌ @ pointer.jl:65 within `unsafe_convert`
   %arrayptr72 = phi i8* [ %259, %merge_own66 ], [ %arrayptr72.pre.pre, %266 ], [ %259, %260 ]
   %268 = ptrtoint i8* %arrayptr72 to i64
; └
  %269 = call nonnull {}* inttoptr (i64 4311447040 to {}* ({}*, i64, i32)*)({}* inttoptr (i64 10967363344 to {}*), i64 %268, i32 1)
  store {}* %269, {}** %54, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1269
  %ptls_load567611612 = load i8*, i8** %55, align 8
  %box74 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load567611612, i32 1136, i32 16) #13
  %270 = bitcast {}* %box74 to i64*
  %271 = getelementptr inbounds i64, i64* %270, i64 -1
  store atomic i64 10967363344, i64* %271 unordered, align 8
  %memcpy_refined_dst76 = bitcast {}* %box74 to {}**
  store {}* %getfield49, {}** %memcpy_refined_dst76, align 8
  store {}* %box74, {}** %59, align 16
  store {}* %0, {}** %.sub, align 8
  store {}* %269, {}** %10, align 8
  %272 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
  store {}* %box74, {}** %272, align 8
  %273 = call nonnull {}* @"j1_setindex!_5983"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1270
  br label %L464

pass90:                                           ; preds = %L336
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ boot.jl:245 within `Typeof`
    %274 = bitcast {}* %166 to i64*
    %275 = getelementptr inbounds i64, i64* %274, i64 -1
    %276 = load atomic i64, i64* %275 unordered, align 8
    %277 = and i64 %276, -16
    %278 = inttoptr i64 %277 to {}*
    %279 = add i64 %277, -16
    %switch540 = icmp ult i64 %279, 64
    br i1 %switch540, label %L344, label %L347

array_owned102:                                   ; preds = %L364
; │└
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ essentials.jl:645 within `setindex!`
     %external_owner104 = load {}*, {}** %175, align 8
     br label %merge_own103

merge_own103:                                     ; preds = %array_owned102, %L364
     %data_owner105 = phi {}* [ %172, %L364 ], [ %external_owner104, %array_owned102 ]
     %arrayptr107 = load {}**, {}*** %176, align 8
     store atomic {}* %value_phi98, {}** %arrayptr107 release, align 8
     %280 = bitcast {}* %data_owner105 to i64*
     %281 = getelementptr inbounds i64, i64* %280, i64 -1
     %282 = load atomic i64, i64* %281 unordered, align 8
     %283 = and i64 %282, 3
     %284 = icmp eq i64 %283, 3
     br i1 %284, label %285, label %292

285:                                              ; preds = %merge_own103
     %286 = bitcast {}* %value_phi98 to i64*
     %287 = getelementptr inbounds i64, i64* %286, i64 -1
     %288 = load atomic i64, i64* %287 unordered, align 8
     %289 = and i64 %288, 1
     %290 = icmp eq i64 %289, 0
     br i1 %290, label %291, label %292

291:                                              ; preds = %285
     call void @ijl_gc_queue_root({}* nonnull %data_owner105)
     br label %292

292:                                              ; preds = %291, %285, %merge_own103
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %293 = call {}* @ijl_get_nth_field_checked({}* nonnull %170, i64 1)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %294 = bitcast {}* %293 to i64*
     %295 = getelementptr inbounds i64, i64* %294, i64 -1
     %296 = load atomic i64, i64* %295 unordered, align 8
     %297 = and i64 %296, -16
     %298 = add i64 %297, -16
     %switch.1 = icmp ult i64 %298, 64
     br i1 %switch.1, label %L359.1, label %L362.1

L362.1:                                           ; preds = %292
     %299 = inttoptr i64 %297 to {}*
     %300 = icmp ult {}* %299, inttoptr (i64 1024 to {}*)
     br i1 %300, label %guard_pass158.1, label %L364.1

guard_pass158.1:                                  ; preds = %L362.1
     %301 = getelementptr inbounds i8, i8* @small_typeof, i64 %297
     %302 = bitcast i8* %301 to {}**
     %303 = load {}*, {}** %302, align 8
     br label %L364.1

L359.1:                                           ; preds = %292
     store {}* %293, {}** %59, align 16
     store {}* inttoptr (i64 4766713520 to {}*), {}** %.sub, align 8
     store {}* %293, {}** %10, align 8
     %304 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
     br label %L364.1

L364.1:                                           ; preds = %L359.1, %guard_pass158.1, %L362.1
     %value_phi98.1 = phi {}* [ %304, %L359.1 ], [ %299, %L362.1 ], [ %303, %guard_pass158.1 ]
; ││└
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags100.1 = load i16, i16* %arrayflags_ptr99, align 2
     %305 = and i16 %arrayflags100.1, 3
     %has_owner101.1 = icmp eq i16 %305, 3
     br i1 %has_owner101.1, label %array_owned102.1, label %merge_own103.1

array_owned102.1:                                 ; preds = %L364.1
     %external_owner104.1 = load {}*, {}** %175, align 8
     br label %merge_own103.1

merge_own103.1:                                   ; preds = %array_owned102.1, %L364.1
     %data_owner105.1 = phi {}* [ %172, %L364.1 ], [ %external_owner104.1, %array_owned102.1 ]
     %arrayptr107.1 = load {}**, {}*** %176, align 8
     %306 = getelementptr inbounds {}*, {}** %arrayptr107.1, i64 1
     store atomic {}* %value_phi98.1, {}** %306 release, align 8
     %307 = bitcast {}* %data_owner105.1 to i64*
     %308 = getelementptr inbounds i64, i64* %307, i64 -1
     %309 = load atomic i64, i64* %308 unordered, align 8
     %310 = and i64 %309, 3
     %311 = icmp eq i64 %310, 3
     br i1 %311, label %312, label %319

312:                                              ; preds = %merge_own103.1
     %313 = bitcast {}* %value_phi98.1 to i64*
     %314 = getelementptr inbounds i64, i64* %313, i64 -1
     %315 = load atomic i64, i64* %314 unordered, align 8
     %316 = and i64 %315, 1
     %317 = icmp eq i64 %316, 0
     br i1 %317, label %318, label %319

318:                                              ; preds = %312
     call void @ijl_gc_queue_root({}* nonnull %data_owner105.1)
     br label %319

319:                                              ; preds = %318, %312, %merge_own103.1
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %320 = call {}* @ijl_get_nth_field_checked({}* nonnull %170, i64 2)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %321 = bitcast {}* %320 to i64*
     %322 = getelementptr inbounds i64, i64* %321, i64 -1
     %323 = load atomic i64, i64* %322 unordered, align 8
     %324 = and i64 %323, -16
     %325 = add i64 %324, -16
     %switch.2 = icmp ult i64 %325, 64
     br i1 %switch.2, label %L359.2, label %L362.2

L362.2:                                           ; preds = %319
     %326 = inttoptr i64 %324 to {}*
     %327 = icmp ult {}* %326, inttoptr (i64 1024 to {}*)
     br i1 %327, label %guard_pass158.2, label %L364.2

guard_pass158.2:                                  ; preds = %L362.2
     %328 = getelementptr inbounds i8, i8* @small_typeof, i64 %324
     %329 = bitcast i8* %328 to {}**
     %330 = load {}*, {}** %329, align 8
     br label %L364.2

L359.2:                                           ; preds = %319
     store {}* %320, {}** %59, align 16
     store {}* inttoptr (i64 4766713520 to {}*), {}** %.sub, align 8
     store {}* %320, {}** %10, align 8
     %331 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
     br label %L364.2

L364.2:                                           ; preds = %L359.2, %guard_pass158.2, %L362.2
     %value_phi98.2 = phi {}* [ %331, %L359.2 ], [ %326, %L362.2 ], [ %330, %guard_pass158.2 ]
; ││└
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags100.2 = load i16, i16* %arrayflags_ptr99, align 2
     %332 = and i16 %arrayflags100.2, 3
     %has_owner101.2 = icmp eq i16 %332, 3
     br i1 %has_owner101.2, label %array_owned102.2, label %merge_own103.2

array_owned102.2:                                 ; preds = %L364.2
     %external_owner104.2 = load {}*, {}** %175, align 8
     br label %merge_own103.2

merge_own103.2:                                   ; preds = %array_owned102.2, %L364.2
     %data_owner105.2 = phi {}* [ %172, %L364.2 ], [ %external_owner104.2, %array_owned102.2 ]
     %arrayptr107.2 = load {}**, {}*** %176, align 8
     %333 = getelementptr inbounds {}*, {}** %arrayptr107.2, i64 2
     store atomic {}* %value_phi98.2, {}** %333 release, align 8
     %334 = bitcast {}* %data_owner105.2 to i64*
     %335 = getelementptr inbounds i64, i64* %334, i64 -1
     %336 = load atomic i64, i64* %335 unordered, align 8
     %337 = and i64 %336, 3
     %338 = icmp eq i64 %337, 3
     br i1 %338, label %339, label %346

339:                                              ; preds = %merge_own103.2
     %340 = bitcast {}* %value_phi98.2 to i64*
     %341 = getelementptr inbounds i64, i64* %340, i64 -1
     %342 = load atomic i64, i64* %341 unordered, align 8
     %343 = and i64 %342, 1
     %344 = icmp eq i64 %343, 0
     br i1 %344, label %345, label %346

345:                                              ; preds = %339
     call void @ijl_gc_queue_root({}* nonnull %data_owner105.2)
     br label %346

346:                                              ; preds = %345, %339, %merge_own103.2
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %347 = call {}* @ijl_get_nth_field_checked({}* nonnull %170, i64 3)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %348 = bitcast {}* %347 to i64*
     %349 = getelementptr inbounds i64, i64* %348, i64 -1
     %350 = load atomic i64, i64* %349 unordered, align 8
     %351 = and i64 %350, -16
     %352 = add i64 %351, -16
     %switch.3 = icmp ult i64 %352, 64
     br i1 %switch.3, label %L359.3, label %L362.3

L362.3:                                           ; preds = %346
     %353 = inttoptr i64 %351 to {}*
     %354 = icmp ult {}* %353, inttoptr (i64 1024 to {}*)
     br i1 %354, label %guard_pass158.3, label %L364.3

guard_pass158.3:                                  ; preds = %L362.3
     %355 = getelementptr inbounds i8, i8* @small_typeof, i64 %351
     %356 = bitcast i8* %355 to {}**
     %357 = load {}*, {}** %356, align 8
     br label %L364.3

L359.3:                                           ; preds = %346
     store {}* %347, {}** %59, align 16
     store {}* inttoptr (i64 4766713520 to {}*), {}** %.sub, align 8
     store {}* %347, {}** %10, align 8
     %358 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
     br label %L364.3

L364.3:                                           ; preds = %L359.3, %guard_pass158.3, %L362.3
     %value_phi98.3 = phi {}* [ %358, %L359.3 ], [ %353, %L362.3 ], [ %357, %guard_pass158.3 ]
; ││└
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags100.3 = load i16, i16* %arrayflags_ptr99, align 2
     %359 = and i16 %arrayflags100.3, 3
     %has_owner101.3 = icmp eq i16 %359, 3
     br i1 %has_owner101.3, label %array_owned102.3, label %merge_own103.3

array_owned102.3:                                 ; preds = %L364.3
     %external_owner104.3 = load {}*, {}** %175, align 8
     br label %merge_own103.3

merge_own103.3:                                   ; preds = %array_owned102.3, %L364.3
     %data_owner105.3 = phi {}* [ %172, %L364.3 ], [ %external_owner104.3, %array_owned102.3 ]
     %arrayptr107.3 = load {}**, {}*** %176, align 8
     %360 = getelementptr inbounds {}*, {}** %arrayptr107.3, i64 3
     store atomic {}* %value_phi98.3, {}** %360 release, align 8
     %361 = bitcast {}* %data_owner105.3 to i64*
     %362 = getelementptr inbounds i64, i64* %361, i64 -1
     %363 = load atomic i64, i64* %362 unordered, align 8
     %364 = and i64 %363, 3
     %365 = icmp eq i64 %364, 3
     br i1 %365, label %366, label %373

366:                                              ; preds = %merge_own103.3
     %367 = bitcast {}* %value_phi98.3 to i64*
     %368 = getelementptr inbounds i64, i64* %367, i64 -1
     %369 = load atomic i64, i64* %368 unordered, align 8
     %370 = and i64 %369, 1
     %371 = icmp eq i64 %370, 0
     br i1 %371, label %372, label %373

372:                                              ; preds = %366
     call void @ijl_gc_queue_root({}* nonnull %data_owner105.3)
     br label %373

373:                                              ; preds = %372, %366, %merge_own103.3
; ││└
    store {}* inttoptr (i64 4694782816 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4755586496 to {}*), {}** %10, align 8
    store {}* inttoptr (i64 4704443072 to {}*), {}** %155, align 8
    store {}* %172, {}** %169, align 8
    %374 = call nonnull {}* @jl_f__apply_iterate({}* null, {}** nonnull %.sub, i32 4)
    store {}* %374, {}** %59, align 16
; │└
; │┌ @ reflection.jl:1353 within `code_typed`
    store {}* inttoptr (i64 4704453792 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4696380016 to {}*), {}** %10, align 8
    store {}* inttoptr (i64 5389776832 to {}*), {}** %155, align 8
    store {}* %374, {}** %169, align 8
    %375 = call nonnull {}* @"j1_#code_typed#25_5986"({}* inttoptr (i64 4696381584 to {}*), {}** nonnull %.sub, i32 4)
; │└
; │ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:227
; │┌ @ essentials.jl:10 within `length`
    %376 = bitcast {}* %375 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr111 = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %376, i64 0, i32 1
    %arraylen112 = load i64, i64* %arraylen_ptr111, align 8
; │└
; │┌ @ promotion.jl:521 within `==`
    %.not453 = icmp eq i64 %arraylen112, 1
; │└
   br i1 %.not453, label %idxend118, label %L389

idxend118:                                        ; preds = %373
; │┌ @ essentials.jl:13 within `getindex`
    %377 = bitcast {}* %375 to {}***
    %arrayptr120454 = load {}**, {}*** %377, align 8
    %arrayref = load {}*, {}** %arrayptr120454, align 8
    %.not455 = icmp eq {}* %arrayref, null
    br i1 %.not455, label %fail121, label %L389

fail121:                                          ; preds = %idxend118
    call void @ijl_throw({}* inttoptr (i64 4765553248 to {}*))
    unreachable

array_owned139:                                   ; preds = %L422
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ essentials.jl:645 within `setindex!`
     %external_owner141 = load {}*, {}** %202, align 8
     br label %merge_own140

merge_own140:                                     ; preds = %array_owned139, %L422
     %data_owner142 = phi {}* [ %199, %L422 ], [ %external_owner141, %array_owned139 ]
     %arrayptr144 = load {}**, {}*** %203, align 8
     store atomic {}* %value_phi135, {}** %arrayptr144 release, align 8
     %378 = bitcast {}* %data_owner142 to i64*
     %379 = getelementptr inbounds i64, i64* %378, i64 -1
     %380 = load atomic i64, i64* %379 unordered, align 8
     %381 = and i64 %380, 3
     %382 = icmp eq i64 %381, 3
     br i1 %382, label %383, label %390

383:                                              ; preds = %merge_own140
     %384 = bitcast {}* %value_phi135 to i64*
     %385 = getelementptr inbounds i64, i64* %384, i64 -1
     %386 = load atomic i64, i64* %385 unordered, align 8
     %387 = and i64 %386, 1
     %388 = icmp eq i64 %387, 0
     br i1 %388, label %389, label %390

389:                                              ; preds = %383
     call void @ijl_gc_queue_root({}* nonnull %data_owner142)
     br label %390

390:                                              ; preds = %389, %383, %merge_own140
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %391 = call {}* @ijl_get_nth_field_checked({}* nonnull %198, i64 1)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %392 = bitcast {}* %391 to i64*
     %393 = getelementptr inbounds i64, i64* %392, i64 -1
     %394 = load atomic i64, i64* %393 unordered, align 8
     %395 = and i64 %394, -16
     %396 = add i64 %395, -16
     %switch538.1 = icmp ult i64 %396, 64
     br i1 %switch538.1, label %L417.1, label %L420.1

L420.1:                                           ; preds = %390
     %397 = inttoptr i64 %395 to {}*
     %398 = icmp ult {}* %397, inttoptr (i64 1024 to {}*)
     br i1 %398, label %guard_pass152.1, label %L422.1

guard_pass152.1:                                  ; preds = %L420.1
     %399 = getelementptr inbounds i8, i8* @small_typeof, i64 %395
     %400 = bitcast i8* %399 to {}**
     %401 = load {}*, {}** %400, align 8
     br label %L422.1

L417.1:                                           ; preds = %390
     store {}* %391, {}** %59, align 16
     store {}* inttoptr (i64 4766713520 to {}*), {}** %.sub, align 8
     store {}* %391, {}** %10, align 8
     %402 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L422.1

L422.1:                                           ; preds = %L417.1, %guard_pass152.1, %L420.1
     %value_phi135.1 = phi {}* [ %402, %L417.1 ], [ %397, %L420.1 ], [ %401, %guard_pass152.1 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags137.1 = load i16, i16* %arrayflags_ptr136, align 2
     %403 = and i16 %arrayflags137.1, 3
     %has_owner138.1 = icmp eq i16 %403, 3
     br i1 %has_owner138.1, label %array_owned139.1, label %merge_own140.1

array_owned139.1:                                 ; preds = %L422.1
     %external_owner141.1 = load {}*, {}** %202, align 8
     br label %merge_own140.1

merge_own140.1:                                   ; preds = %array_owned139.1, %L422.1
     %data_owner142.1 = phi {}* [ %199, %L422.1 ], [ %external_owner141.1, %array_owned139.1 ]
     %arrayptr144.1 = load {}**, {}*** %203, align 8
     %404 = getelementptr inbounds {}*, {}** %arrayptr144.1, i64 1
     store atomic {}* %value_phi135.1, {}** %404 release, align 8
     %405 = bitcast {}* %data_owner142.1 to i64*
     %406 = getelementptr inbounds i64, i64* %405, i64 -1
     %407 = load atomic i64, i64* %406 unordered, align 8
     %408 = and i64 %407, 3
     %409 = icmp eq i64 %408, 3
     br i1 %409, label %410, label %417

410:                                              ; preds = %merge_own140.1
     %411 = bitcast {}* %value_phi135.1 to i64*
     %412 = getelementptr inbounds i64, i64* %411, i64 -1
     %413 = load atomic i64, i64* %412 unordered, align 8
     %414 = and i64 %413, 1
     %415 = icmp eq i64 %414, 0
     br i1 %415, label %416, label %417

416:                                              ; preds = %410
     call void @ijl_gc_queue_root({}* nonnull %data_owner142.1)
     br label %417

417:                                              ; preds = %416, %410, %merge_own140.1
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %418 = call {}* @ijl_get_nth_field_checked({}* nonnull %198, i64 2)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %419 = bitcast {}* %418 to i64*
     %420 = getelementptr inbounds i64, i64* %419, i64 -1
     %421 = load atomic i64, i64* %420 unordered, align 8
     %422 = and i64 %421, -16
     %423 = add i64 %422, -16
     %switch538.2 = icmp ult i64 %423, 64
     br i1 %switch538.2, label %L417.2, label %L420.2

L420.2:                                           ; preds = %417
     %424 = inttoptr i64 %422 to {}*
     %425 = icmp ult {}* %424, inttoptr (i64 1024 to {}*)
     br i1 %425, label %guard_pass152.2, label %L422.2

guard_pass152.2:                                  ; preds = %L420.2
     %426 = getelementptr inbounds i8, i8* @small_typeof, i64 %422
     %427 = bitcast i8* %426 to {}**
     %428 = load {}*, {}** %427, align 8
     br label %L422.2

L417.2:                                           ; preds = %417
     store {}* %418, {}** %59, align 16
     store {}* inttoptr (i64 4766713520 to {}*), {}** %.sub, align 8
     store {}* %418, {}** %10, align 8
     %429 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L422.2

L422.2:                                           ; preds = %L417.2, %guard_pass152.2, %L420.2
     %value_phi135.2 = phi {}* [ %429, %L417.2 ], [ %424, %L420.2 ], [ %428, %guard_pass152.2 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags137.2 = load i16, i16* %arrayflags_ptr136, align 2
     %430 = and i16 %arrayflags137.2, 3
     %has_owner138.2 = icmp eq i16 %430, 3
     br i1 %has_owner138.2, label %array_owned139.2, label %merge_own140.2

array_owned139.2:                                 ; preds = %L422.2
     %external_owner141.2 = load {}*, {}** %202, align 8
     br label %merge_own140.2

merge_own140.2:                                   ; preds = %array_owned139.2, %L422.2
     %data_owner142.2 = phi {}* [ %199, %L422.2 ], [ %external_owner141.2, %array_owned139.2 ]
     %arrayptr144.2 = load {}**, {}*** %203, align 8
     %431 = getelementptr inbounds {}*, {}** %arrayptr144.2, i64 2
     store atomic {}* %value_phi135.2, {}** %431 release, align 8
     %432 = bitcast {}* %data_owner142.2 to i64*
     %433 = getelementptr inbounds i64, i64* %432, i64 -1
     %434 = load atomic i64, i64* %433 unordered, align 8
     %435 = and i64 %434, 3
     %436 = icmp eq i64 %435, 3
     br i1 %436, label %437, label %444

437:                                              ; preds = %merge_own140.2
     %438 = bitcast {}* %value_phi135.2 to i64*
     %439 = getelementptr inbounds i64, i64* %438, i64 -1
     %440 = load atomic i64, i64* %439 unordered, align 8
     %441 = and i64 %440, 1
     %442 = icmp eq i64 %441, 0
     br i1 %442, label %443, label %444

443:                                              ; preds = %437
     call void @ijl_gc_queue_root({}* nonnull %data_owner142.2)
     br label %444

444:                                              ; preds = %443, %437, %merge_own140.2
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %445 = call {}* @ijl_get_nth_field_checked({}* nonnull %198, i64 3)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %446 = bitcast {}* %445 to i64*
     %447 = getelementptr inbounds i64, i64* %446, i64 -1
     %448 = load atomic i64, i64* %447 unordered, align 8
     %449 = and i64 %448, -16
     %450 = add i64 %449, -16
     %switch538.3 = icmp ult i64 %450, 64
     br i1 %switch538.3, label %L417.3, label %L420.3

L420.3:                                           ; preds = %444
     %451 = inttoptr i64 %449 to {}*
     %452 = icmp ult {}* %451, inttoptr (i64 1024 to {}*)
     br i1 %452, label %guard_pass152.3, label %L422.3

guard_pass152.3:                                  ; preds = %L420.3
     %453 = getelementptr inbounds i8, i8* @small_typeof, i64 %449
     %454 = bitcast i8* %453 to {}**
     %455 = load {}*, {}** %454, align 8
     br label %L422.3

L417.3:                                           ; preds = %444
     store {}* %445, {}** %59, align 16
     store {}* inttoptr (i64 4766713520 to {}*), {}** %.sub, align 8
     store {}* %445, {}** %10, align 8
     %456 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L422.3

L422.3:                                           ; preds = %L417.3, %guard_pass152.3, %L420.3
     %value_phi135.3 = phi {}* [ %456, %L417.3 ], [ %451, %L420.3 ], [ %455, %guard_pass152.3 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags137.3 = load i16, i16* %arrayflags_ptr136, align 2
     %457 = and i16 %arrayflags137.3, 3
     %has_owner138.3 = icmp eq i16 %457, 3
     br i1 %has_owner138.3, label %array_owned139.3, label %merge_own140.3

array_owned139.3:                                 ; preds = %L422.3
     %external_owner141.3 = load {}*, {}** %202, align 8
     br label %merge_own140.3

merge_own140.3:                                   ; preds = %array_owned139.3, %L422.3
     %data_owner142.3 = phi {}* [ %199, %L422.3 ], [ %external_owner141.3, %array_owned139.3 ]
     %arrayptr144.3 = load {}**, {}*** %203, align 8
     %458 = getelementptr inbounds {}*, {}** %arrayptr144.3, i64 3
     store atomic {}* %value_phi135.3, {}** %458 release, align 8
     %459 = bitcast {}* %data_owner142.3 to i64*
     %460 = getelementptr inbounds i64, i64* %459, i64 -1
     %461 = load atomic i64, i64* %460 unordered, align 8
     %462 = and i64 %461, 3
     %463 = icmp eq i64 %462, 3
     br i1 %463, label %464, label %471

464:                                              ; preds = %merge_own140.3
     %465 = bitcast {}* %value_phi135.3 to i64*
     %466 = getelementptr inbounds i64, i64* %465, i64 -1
     %467 = load atomic i64, i64* %466 unordered, align 8
     %468 = and i64 %467, 1
     %469 = icmp eq i64 %468, 0
     br i1 %469, label %470, label %471

470:                                              ; preds = %464
     call void @ijl_gc_queue_root({}* nonnull %data_owner142.3)
     br label %471

471:                                              ; preds = %470, %464, %merge_own140.3
; ││└
    store {}* inttoptr (i64 4694782816 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4755586496 to {}*), {}** %10, align 8
    store {}* inttoptr (i64 4704443072 to {}*), {}** %155, align 8
    store {}* %199, {}** %169, align 8
    %472 = call nonnull {}* @jl_f__apply_iterate({}* null, {}** nonnull %.sub, i32 4)
    store {}* %472, {}** %59, align 16
; │└
; │┌ @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/codeview.jl:295 within `code_llvm`
    call void @"j_#code_llvm#39_5987"(i8 zeroext 0, i8 zeroext 0, i8 zeroext 1, {}* inttoptr (i64 4307272216 to {}*), {}* readonly inttoptr (i64 5389776832 to {}*), {}* nonnull readonly %472)
; └└
; ┌ @ strings/io.jl:286 within `repr`
; │┌ @ strings/io.jl:286 within `#repr#504`
; ││┌ @ strings/io.jl:107 within `sprint`
     %473 = call nonnull {}* @"j_#sprint#501_5988"(i64 signext 0, {}* readonly inttoptr (i64 4713633216 to {}*))
     store {}* %473, {}** %59, align 16
; └└└
  call void @j_println_5985({}* inttoptr (i64 6083832416 to {}*), {}* nonnull %473)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1242
; ┌ @ boot.jl:245 within `Typeof`
   br i1 %switch540, label %L445, label %L448

guard_pass:                                       ; preds = %L448
   %474 = getelementptr inbounds i8, i8* @small_typeof, i64 %277
   %475 = bitcast i8* %474 to {}**
   %476 = load {}*, {}** %475, align 8
   br label %L450

guard_pass152:                                    ; preds = %L420
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ boot.jl:245 within `Typeof`
     %477 = getelementptr inbounds i8, i8* @small_typeof, i64 %208
     %478 = bitcast i8* %477 to {}**
     %479 = load {}*, {}** %478, align 8
     br label %L422

guard_pass155:                                    ; preds = %L405
; │└└
; │┌ @ boot.jl:245 within `Typeof`
    %480 = getelementptr inbounds i8, i8* @small_typeof, i64 %277
    %481 = bitcast i8* %480 to {}**
    %482 = load {}*, {}** %481, align 8
    br label %L407

guard_pass158:                                    ; preds = %L362
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ boot.jl:245 within `Typeof`
     %483 = getelementptr inbounds i8, i8* @small_typeof, i64 %182
     %484 = bitcast i8* %483 to {}**
     %485 = load {}*, {}** %484, align 8
     br label %L364

guard_pass161:                                    ; preds = %L347
; │└└
; │┌ @ boot.jl:245 within `Typeof`
    %486 = getelementptr inbounds i8, i8* @small_typeof, i64 %277
    %487 = bitcast i8* %486 to {}**
    %488 = load {}*, {}** %487, align 8
    br label %L349

post_box_union:                                   ; preds = %L232
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4766708480 to {}*), {}* inttoptr (i64 4715683296 to {}*))
     unreachable

pass169:                                          ; preds = %post_is205, %L246
     %unionalloca.sroa.0.0.ph = phi i8 [ %135, %L246 ], [ %496, %post_is205 ]
     %.not458 = icmp eq i8 %unionalloca.sroa.0.0.ph, 0
     br i1 %.not458, label %L260, label %L282

post_box_union186:                                ; preds = %L260
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4766708480 to {}*), {}* inttoptr (i64 4715683296 to {}*))
     unreachable

pass191:                                          ; preds = %post_is, %L264
     %unionalloca180.sroa.0.0.ph = phi i8 [ %141, %L264 ], [ %492, %post_is ]
     %.not463 = icmp eq i8 %unionalloca180.sroa.0.0.ph, 0
     br i1 %.not463, label %L278, label %L282

is:                                               ; preds = %L260
; │││┌ @ Base.jl:159 within `==`
      %489 = bitcast {}* %136 to i32*
      %unbox197 = load i32, i32* %489, align 4
      %490 = icmp eq i32 %unbox197, 0
      br label %post_is

post_is:                                          ; preds = %is, %L260
      %491 = phi i1 [ %490, %is ], [ false, %L260 ]
      %492 = zext i1 %491 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass191

is204:                                            ; preds = %L232
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
; │││┌ @ Base.jl:159 within `==`
      %493 = bitcast {}* %130 to i32*
      %unbox206 = load i32, i32* %493, align 4
      %494 = icmp eq i32 %unbox206, 0
      br label %post_is205

post_is205:                                       ; preds = %is204, %L232
      %495 = phi i1 [ %494, %is204 ], [ false, %L232 ]
      %496 = zext i1 %495 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass169

post_box_union221:                                ; preds = %L123
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4766708480 to {}*), {}* inttoptr (i64 4715683296 to {}*))
     unreachable

pass226:                                          ; preds = %post_is264, %L137
     %unionalloca215.sroa.0.0.ph = phi i8 [ %88, %L137 ], [ %504, %post_is264 ]
     %.not465 = icmp eq i8 %unionalloca215.sroa.0.0.ph, 0
     br i1 %.not465, label %L151, label %L173

post_box_union243:                                ; preds = %L151
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4766708480 to {}*), {}* inttoptr (i64 4715683296 to {}*))
     unreachable

pass248:                                          ; preds = %post_is255, %L155
     %unionalloca237.sroa.0.0.ph = phi i8 [ %94, %L155 ], [ %500, %post_is255 ]
     %.not470 = icmp eq i8 %unionalloca237.sroa.0.0.ph, 0
     br i1 %.not470, label %L169, label %L173

is254:                                            ; preds = %L151
; │││┌ @ Base.jl:159 within `==`
      %497 = bitcast {}* %89 to i32*
      %unbox256 = load i32, i32* %497, align 4
      %498 = icmp eq i32 %unbox256, 0
      br label %post_is255

post_is255:                                       ; preds = %is254, %L151
      %499 = phi i1 [ %498, %is254 ], [ false, %L151 ]
      %500 = zext i1 %499 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass248

is263:                                            ; preds = %L123
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
; │││┌ @ Base.jl:159 within `==`
      %501 = bitcast {}* %83 to i32*
      %unbox265 = load i32, i32* %501, align 4
      %502 = icmp eq i32 %unbox265, 0
      br label %post_is264

post_is264:                                       ; preds = %is263, %L123
      %503 = phi i1 [ %502, %is263 ], [ false, %L123 ]
      %504 = zext i1 %503 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass226

post_box_union282:                                ; preds = %L11
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4766708480 to {}*), {}* inttoptr (i64 4715683296 to {}*))
     unreachable

pass287:                                          ; preds = %post_is325, %L25
     %unionalloca276.sroa.0.0.ph = phi i8 [ %32, %L25 ], [ %512, %post_is325 ]
     %.not472 = icmp eq i8 %unionalloca276.sroa.0.0.ph, 0
     br i1 %.not472, label %L39, label %L61

post_box_union304:                                ; preds = %L39
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4766708480 to {}*), {}* inttoptr (i64 4715683296 to {}*))
     unreachable

pass309:                                          ; preds = %post_is316, %L43
     %unionalloca298.sroa.0.0.ph = phi i8 [ %38, %L43 ], [ %508, %post_is316 ]
     %.not477 = icmp eq i8 %unionalloca298.sroa.0.0.ph, 0
     br i1 %.not477, label %L57, label %L61

is315:                                            ; preds = %L39
; │││┌ @ Base.jl:159 within `==`
      %505 = bitcast {}* %33 to i32*
      %unbox317 = load i32, i32* %505, align 4
      %506 = icmp eq i32 %unbox317, 0
      br label %post_is316

post_is316:                                       ; preds = %is315, %L39
      %507 = phi i1 [ %506, %is315 ], [ false, %L39 ]
      %508 = zext i1 %507 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass309

is324:                                            ; preds = %L11
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
; │││┌ @ Base.jl:159 within `==`
      %509 = bitcast {}* %27 to i32*
      %unbox326 = load i32, i32* %509, align 4
      %510 = icmp eq i32 %unbox326, 0
      br label %post_is325

post_is325:                                       ; preds = %is324, %L11
      %511 = phi i1 [ %510, %is324 ], [ false, %L11 ]
      %512 = zext i1 %511 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass287
; └└└
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
y = Core.Box(#undef)
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1273 within `make_zero`
define double @julia_make_zero_6032({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
  ret double 0.000000e+00
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
("end", y) = ("end", Core.Box(0.0))
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1273 within `make_zero`
define double @julia_make_zero_6044({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
  ret double 0.000000e+00
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Vector{Int64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Vector{Int64}, %15)::Vector{Int64}
13 ┄ %26 = φ (#11 => %15, #12 => %25)::Any
│    %27 = π (%26, Vector{Int64})
└───       return %27
14 ─ %29 = Base.arraysize(prev, 1)::Int64
│    %30 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Int64}, svec(Any, Int64), 0, :(:ccall), Vector{Int64}, :(%29), :(%29)))::Vector{Int64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %30::Any, prev::Any)::Any
│    %32 = Base.arraysize(prev, 1)::Int64
│    %33 = Base.slt_int(%32, 0)::Bool
│    %34 = Core.ifelse(%33, 0, %32)::Int64
│    %35 = Base.slt_int(%34, 1)::Bool
└───       goto #16 if not %35
15 ─       goto #17
16 ─       goto #17
17 ┄ %39 = φ (#15 => true, #16 => false)::Bool
│    %40 = φ (#16 => 1)::Int64
│    %41 = φ (#16 => 1)::Int64
│    %42 = Base.not_int(%39)::Bool
└───       goto #30 if not %42
18 ┄ %44 = φ (#17 => %40, #29 => %75)::Int64
│    %45 = φ (#17 => %41, #29 => %76)::Int64
└───       goto #22 if not true
19 ─ %47 = Base.arraysize(prev, 1)::Int64
│    %48 = Base.slt_int(%47, 0)::Bool
│    %49 = Core.ifelse(%48, 0, %47)::Int64
│    %50 = Base.sub_int(%44, 1)::Int64
│    %51 = Base.bitcast(UInt64, %50)::UInt64
│    %52 = Base.bitcast(UInt64, %49)::UInt64
│    %53 = Base.ult_int(%51, %52)::Bool
└───       goto #21 if not %53
20 ─       goto #22
21 ─       goto #23
22 ┄ %57 = Base.sub_int(%44, 1)::Int64
│    %58 = Base.mul_int(%57, 1)::Int64
│    %59 = Base.add_int(1, %58)::Int64
│    %60 = Base.bitcast(UInt64, %59)::UInt64
│    %61 = Base.sub_int(%60, 0x0000000000000001)::UInt64
│    %62 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%61), :(%61)))::Int32
│    %63 = Core.sext_int(Core.Int64, %62)::Int64
│    %64 = (%63 === 1)::Bool
└───       goto #23
23 ┄ %66 = φ (#21 => false, #22 => %64)::Bool
└───       goto #25 if not %66
24 ─ %68 = Base.arrayref(true, prev, %44)::Int64
└───       Base.arrayset(false, %30, %68, %44)::Vector{Int64}
25 ┄ %70 = (%45 === %34)::Bool
└───       goto #27 if not %70
26 ─       goto #28
27 ─ %73 = Base.add_int(%45, 1)::Int64
└───       goto #28
28 ┄ %75 = φ (#27 => %73)::Int64
│    %76 = φ (#27 => %73)::Int64
│    %77 = φ (#26 => true, #27 => false)::Bool
│    %78 = Base.not_int(%77)::Bool
└───       goto #30 if not %78
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %30
) => Vector{Int64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_6046({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe32 = alloca [3 x {}*], align 16
  %gcframe32.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe32, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe32 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe32, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe32.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe32, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L29, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not24 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not24, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4694989648 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4694989648 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  br label %common.ret

common.ret:                                       ; preds = %L70, %L29, %L25, %L22
  %common.ret.op = phi {}* [ %23, %L25 ], [ %15, %L22 ], [ %27, %L29 ], [ %27, %L70 ]
  %24 = load {}*, {}** %5, align 8
  %25 = bitcast {}*** %2 to {}**
  store {}* %24, {}** %25, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L29:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:191 within `size`
   %26 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
   %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %26, i64 0, i32 1
   %arraylen = load i64, i64* %arraylen_ptr, align 8
; └
; ┌ @ boot.jl:484 within `Array` @ boot.jl:475
   %27 = call nonnull {}* inttoptr (i64 4311340472 to {}* ({}*, i64)*)({}* inttoptr (i64 4694989648 to {}*), i64 %arraylen)
   store {}* %27, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %28 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %27, {}** %28, align 8
  %29 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %29, align 8
  %30 = call nonnull {}* @"j1_setindex!_6047"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:318 within `eachindex`
; │┌ @ abstractarray.jl:134 within `axes1`
; ││┌ @ abstractarray.jl:98 within `axes`
; │││┌ @ array.jl:191 within `size`
      %arraylen5 = load i64, i64* %arraylen_ptr, align 8
; └└└└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not25.not = icmp eq i64 %arraylen5, 0
; └└└└
  br i1 %.not25.not, label %common.ret, label %L44.preheader

L44.preheader:                                    ; preds = %L29
  %31 = bitcast {}* %11 to i64**
  %arrayptr27 = load i64*, i64** %31, align 8
  %32 = bitcast {}* %27 to i64**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L44

L44:                                              ; preds = %L70, %L44.preheader
  %value_phi9 = phi i64 [ %34, %L70 ], [ 1, %L44.preheader ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %33 = add nsw i64 %value_phi9, -1
; │││└
; │││┌ @ int.jl:513 within `<`
      %.not26.not = icmp ult i64 %33, %arraylen5
; └└└└
  br i1 %.not26.not, label %idxend, label %L70

L70:                                              ; preds = %idxend, %L44
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not29.not = icmp eq i64 %value_phi9, %arraylen5
; │└
   %34 = add nuw nsw i64 %value_phi9, 1
; └
  br i1 %.not29.not, label %common.ret, label %L44

idxend:                                           ; preds = %L44
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ essentials.jl:13 within `getindex`
   %35 = getelementptr inbounds i64, i64* %arrayptr27, i64 %33
   %arrayref = load i64, i64* %35, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr1828 = load i64*, i64** %32, align 8
   %36 = getelementptr inbounds i64, i64* %arrayptr1828, i64 %33
   store i64 %arrayref, i64* %36, align 8
   br label %L70
; └
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_6049({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6050"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_6051({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6052"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_6053({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6054"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_6055({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6056"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_6057({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6058"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_6059({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6060"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_6061({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6062"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_6063({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6064"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1273 within `make_zero`
define double @julia_make_zero_6065({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
  ret double 0.000000e+00
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_6067({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6068"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_6069({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6070"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_6071({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6072"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = ┌ Warning: Using fallback BLAS replacements, performance may be degraded
└ @ Enzyme.Compiler ~/.julia/packages/GPUCompiler/U36Ed/src/utils.jl:59
warning: didn't implement memmove, using memcpy as fallback which can result in errors
CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, 0.0, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_6073({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_6074"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
("end", y) = ("end", Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.0
  x: Array{Float64}((6,)) [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
  u: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  n: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  k: Float64 0.0
  r: Float64 0.0
  q: q_kf (function of type Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
  J: Float64 0.0
  data_steps: Array{Int64}((21,)) [3000, 3200, 3400, 3600, 3800, 4000, 4200, 4400, 4600, 4800  …  5200, 5400, 5600, 5800, 6000, 6200, 6400, 6600, 6800, 7000]
  data: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  states: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  energy: Array{Float64}((3, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  A: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  B: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Gamma: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  E: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q_inv: Float64 0.0
  R: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  R_inv: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  K: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Kc: Array{Float64}((3, 3)) [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]
)
dparams_adjoint2 = Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.0
  x: Array{Float64}((6,)) [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
  u: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  n: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  k: Float64 0.0
  r: Float64 0.0
  q: q_kf (function of type Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
  J: Float64 0.0
  data_steps: Array{Int64}((21,)) [3000, 3200, 3400, 3600, 3800, 4000, 4200, 4400, 4600, 4800  …  5200, 5400, 5600, 5800, 6000, 6200, 6400, 6600, 6800, 7000]
  data: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  states: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  energy: Array{Float64}((3, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  A: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  B: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Gamma: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  E: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q_inv: Float64 0.0
  R: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  R_inv: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  K: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Kc: Array{Float64}((3, 3)) [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]

total_cost = 5.400808714556297e9
total_cost = 5.3679730944700055e7
total_cost = 537540.1786888904
total_cost = 5589.7912929806125
total_cost = 181.65068064529535
total_cost = 118.66958251069924
total_cost = 117.1497662733329
total_cost = 117.04556752939268
total_cost = 117.0356255118871
total_cost = 117.03463605588048
diffs = Any[5.400808597521771e10, 5.367961391017387e9, 5.374231441627052e8, 5.472756766795406e7, 6.461615446008886e6, 1.635056325492755e6, 1.1524008812641285e6, 1.104134418619651e6, 1.099326680616741e6, 1.098706739952604e6]
dparams_adjoint2.k = 1.0987723610527872e6
params_adjoint2 = Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.001
  x: Array{Float64}((6,)) [1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
  u: Array{Float64}((6, 10001)) [0.052395543001624204 -0.01847574879001025 … 0.18721419070430684 -0.06810507386775214; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  n: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  k: Float64 20.0
  r: Float64 0.5
  q: q_kf (function of type Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
  J: Float64 0.0
  data_steps: Array{Int64}((21,)) [3000, 3200, 3400, 3600, 3800, 4000, 4200, 4400, 4600, 4800  …  5200, 5400, 5600, 5800, 6000, 6200, 6400, 6600, 6800, 7000]
  data: Array{Float64}((6, 10001)) [0.9999446409092436 1.1525794268071203 … 0.6924427848624592 0.8931613151804149; -3.7567838697127794e-5 -3.917733514944822e-5 … 0.7427559633742338 0.7281661041552325; … ; -0.0001205556652503151 0.019972820276045137 … -14.555660145344751 -14.543768666792007; -0.0001567879022888281 6.826700639017644e-5 … 9.517793648715898 9.457060222258452]
  states: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  energy: Array{Float64}((3, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  A: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.001 0.0; … ; 0.02 -0.06 … 0.9995 0.0; 0.0 0.02 … 0.0 0.9995]
  B: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Gamma: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  E: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.0 0.0; … ; 0.0 0.0 … 1.0 0.0; 0.0 0.0 … 0.0 1.0]
  Q: Array{Float64}((6, 6)) [0.001643631836583314 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q_inv: Float64 0.0
  R: Array{Float64}((6, 6)) [9.922366783915163e-9 0.0 … 0.0 0.0; 0.0 9.922366783915163e-9 … 0.0 0.0; … ; 0.0 0.0 … 9.922366783915163e-9 0.0; 0.0 0.0 … 0.0 9.922366783915163e-9]
  R_inv: Array{Float64}((6, 6)) [1.007824062320563e8 0.0 … 0.0 0.0; 0.0 1.007824062320563e8 … 0.0 0.0; … ; 0.0 0.0 … 1.007824062320563e8 0.0; 0.0 0.0 … 0.0 1.007824062320563e8]
  K: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Kc: Array{Float64}((3, 3)) [-40.0 20.0 0.0; 20.0 -60.0 20.0; 0.0 20.0 -40.0]

y = Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 0
  t: Int64 0
  dt: Float64 0.0
  x: #undef
  u: #undef
  n: #undef
  k: Float64 0.0
  r: Float64 0.0
  q: #undef
  J: Float64 0.0
  data_steps: #undef
  data: #undef
  states: #undef
  energy: #undef
  A: #undef
  B: #undef
  Gamma: #undef
  E: #undef
  Q: #undef
  Q_inv: Float64 0.0
  R: #undef
  R_inv: #undef
  K: #undef
  Kc: #undef

#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return prev
) => Int64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1218 within `make_zero`
define i64 @julia_make_zero_7303({}* noundef nonnull align 8 dereferenceable(24) %0, i64 signext %1) #0 {
top:
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1221 within `make_zero`
  ret i64 %1
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return prev
) => Int64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1218 within `make_zero`
define i64 @julia_make_zero_7305({}* noundef nonnull align 8 dereferenceable(24) %0, i64 signext %1) #0 {
top:
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1221 within `make_zero`
  ret i64 %1
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
(i, xi, Core.Typeof(xi), seen) = (3, 0.001, Float64, IdDict{Any, Any}(Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.001
  x: Array{Float64}((6,)) [1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
  u: Array{Float64}((6, 10001)) [0.052395543001624204 -0.01847574879001025 … 0.18721419070430684 -0.06810507386775214; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  n: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  k: Float64 20.0
  r: Float64 0.5
  q: q_kf (function of type Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
  J: Float64 0.0
  data_steps: Array{Int64}((21,)) [3000, 3200, 3400, 3600, 3800, 4000, 4200, 4400, 4600, 4800  …  5200, 5400, 5600, 5800, 6000, 6200, 6400, 6600, 6800, 7000]
  data: Array{Float64}((6, 10001)) [0.9999446409092436 1.1525794268071203 … 0.6924427848624592 0.8931613151804149; -3.7567838697127794e-5 -3.917733514944822e-5 … 0.7427559633742338 0.7281661041552325; … ; -0.0001205556652503151 0.019972820276045137 … -14.555660145344751 -14.543768666792007; -0.0001567879022888281 6.826700639017644e-5 … 9.517793648715898 9.457060222258452]
  states: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  energy: Array{Float64}((3, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  A: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.001 0.0; … ; 0.02 -0.06 … 0.9995 0.0; 0.0 0.02 … 0.0 0.9995]
  B: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Gamma: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  E: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.0 0.0; … ; 0.0 0.0 … 1.0 0.0; 0.0 0.0 … 0.0 1.0]
  Q: Array{Float64}((6, 6)) [0.001643631836583314 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q_inv: Float64 0.0
  R: Array{Float64}((6, 6)) [9.922366783915163e-9 0.0 … 0.0 0.0; 0.0 9.922366783915163e-9 … 0.0 0.0; … ; 0.0 0.0 … 9.922366783915163e-9 0.0; 0.0 0.0 … 0.0 9.922366783915163e-9]
  R_inv: Array{Float64}((6, 6)) [1.007824062320563e8 0.0 … 0.0 0.0; 0.0 1.007824062320563e8 … 0.0 0.0; … ; 0.0 0.0 … 1.007824062320563e8 0.0; 0.0 0.0 … 0.0 1.007824062320563e8]
  K: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Kc: Array{Float64}((3, 3)) [-40.0 20.0 0.0; 20.0 -60.0 20.0; 0.0 20.0 -40.0]
 => Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.0
  x: #undef
  u: #undef
  n: #undef
  k: Float64 0.0
  r: Float64 0.0
  q: #undef
  J: Float64 0.0
  data_steps: #undef
  data: #undef
  states: #undef
  energy: #undef
  A: #undef
  B: #undef
  Gamma: #undef
  E: #undef
  Q: #undef
  Q_inv: Float64 0.0
  R: #undef
  R_inv: #undef
  K: #undef
  Kc: #undef
))
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1273 within `make_zero`
define double @julia_make_zero_7307({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
  ret double 0xC19321B1E3AE3D7A
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
("res", i, xi, Core.Typeof(xi), seen) = ("res", 3, -8.024383292015639e7, Float64, IdDict{Any, Any}(Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.001
  x: Array{Float64}((6,)) [1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
  u: Array{Float64}((6, 10001)) [0.052395543001624204 -0.01847574879001025 … 0.18721419070430684 -0.06810507386775214; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  n: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  k: Float64 20.0
  r: Float64 0.5
  q: q_kf (function of type Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
  J: Float64 0.0
  data_steps: Array{Int64}((21,)) [3000, 3200, 3400, 3600, 3800, 4000, 4200, 4400, 4600, 4800  …  5200, 5400, 5600, 5800, 6000, 6200, 6400, 6600, 6800, 7000]
  data: Array{Float64}((6, 10001)) [0.9999446409092436 1.1525794268071203 … 0.6924427848624592 0.8931613151804149; -3.7567838697127794e-5 -3.917733514944822e-5 … 0.7427559633742338 0.7281661041552325; … ; -0.0001205556652503151 0.019972820276045137 … -14.555660145344751 -14.543768666792007; -0.0001567879022888281 6.826700639017644e-5 … 9.517793648715898 9.457060222258452]
  states: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  energy: Array{Float64}((3, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  A: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.001 0.0; … ; 0.02 -0.06 … 0.9995 0.0; 0.0 0.02 … 0.0 0.9995]
  B: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Gamma: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  E: Array{Float64}((6, 6)) [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.0 0.0; … ; 0.0 0.0 … 1.0 0.0; 0.0 0.0 … 0.0 1.0]
  Q: Array{Float64}((6, 6)) [0.001643631836583314 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q_inv: Float64 0.0
  R: Array{Float64}((6, 6)) [9.922366783915163e-9 0.0 … 0.0 0.0; 0.0 9.922366783915163e-9 … 0.0 0.0; … ; 0.0 0.0 … 9.922366783915163e-9 0.0; 0.0 0.0 … 0.0 9.922366783915163e-9]
  R_inv: Array{Float64}((6, 6)) [1.007824062320563e8 0.0 … 0.0 0.0; 0.0 1.007824062320563e8 … 0.0 0.0; … ; 0.0 0.0 … 1.007824062320563e8 0.0; 0.0 0.0 … 0.0 1.007824062320563e8]
  K: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Kc: Array{Float64}((3, 3)) [-40.0 20.0 0.0; 20.0 -60.0 20.0; 0.0 20.0 -40.0]
 => Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 0.0
  x: #undef
  u: #undef
  n: #undef
  k: Float64 0.0
  r: Float64 0.0
  q: #undef
  J: Float64 0.0
  data_steps: #undef
  data: #undef
  states: #undef
  energy: #undef
  A: #undef
  B: #undef
  Gamma: #undef
  E: #undef
  Q: #undef
  Q_inv: Float64 0.0
  R: #undef
  R_inv: #undef
  K: #undef
  Kc: #undef
))
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Vector{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Vector{Float64}, %15)::Vector{Float64}
13 ┄ %26 = φ (#11 => %15, #12 => %25)::Any
│    %27 = π (%26, Vector{Float64})
└───       return %27
14 ─ %29 = Base.arraysize(prev, 1)::Int64
│    %30 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Float64}, svec(Any, Int64), 0, :(:ccall), Vector{Float64}, :(%29), :(%29)))::Vector{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %30::Any, prev::Any)::Any
│    %32 = Base.arraysize(prev, 1)::Int64
│    %33 = Base.slt_int(%32, 0)::Bool
│    %34 = Core.ifelse(%33, 0, %32)::Int64
│    %35 = Base.slt_int(%34, 1)::Bool
└───       goto #16 if not %35
15 ─       goto #17
16 ─       goto #17
17 ┄ %39 = φ (#15 => true, #16 => false)::Bool
│    %40 = φ (#16 => 1)::Int64
│    %41 = φ (#16 => 1)::Int64
│    %42 = Base.not_int(%39)::Bool
└───       goto #30 if not %42
18 ┄ %44 = φ (#17 => %40, #29 => %75)::Int64
│    %45 = φ (#17 => %41, #29 => %76)::Int64
└───       goto #22 if not true
19 ─ %47 = Base.arraysize(prev, 1)::Int64
│    %48 = Base.slt_int(%47, 0)::Bool
│    %49 = Core.ifelse(%48, 0, %47)::Int64
│    %50 = Base.sub_int(%44, 1)::Int64
│    %51 = Base.bitcast(UInt64, %50)::UInt64
│    %52 = Base.bitcast(UInt64, %49)::UInt64
│    %53 = Base.ult_int(%51, %52)::Bool
└───       goto #21 if not %53
20 ─       goto #22
21 ─       goto #23
22 ┄ %57 = Base.sub_int(%44, 1)::Int64
│    %58 = Base.mul_int(%57, 1)::Int64
│    %59 = Base.add_int(1, %58)::Int64
│    %60 = Base.bitcast(UInt64, %59)::UInt64
│    %61 = Base.sub_int(%60, 0x0000000000000001)::UInt64
│    %62 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%61), :(%61)))::Int32
│    %63 = Core.sext_int(Core.Int64, %62)::Int64
│    %64 = (%63 === 1)::Bool
└───       goto #23
23 ┄ %66 = φ (#21 => false, #22 => %64)::Bool
└───       goto #25 if not %66
24 ─       Base.arrayref(true, prev, %44)::Float64
└───       Base.arrayset(false, %30, -8.024383292015639e7, %44)::Vector{Float64}
25 ┄ %70 = (%45 === %34)::Bool
└───       goto #27 if not %70
26 ─       goto #28
27 ─ %73 = Base.add_int(%45, 1)::Int64
└───       goto #28
28 ┄ %75 = φ (#27 => %73)::Int64
│    %76 = φ (#27 => %73)::Int64
│    %77 = φ (#26 => true, #27 => false)::Bool
│    %78 = Base.not_int(%77)::Bool
└───       goto #30 if not %78
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %30
) => Vector{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_7309({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe31 = alloca [3 x {}*], align 16
  %gcframe31.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe31, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe31 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe31, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe31.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe31, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L29, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not24 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not24, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4694774032 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4694774032 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  br label %common.ret

common.ret:                                       ; preds = %L70, %L29, %L25, %L22
  %common.ret.op = phi {}* [ %23, %L25 ], [ %15, %L22 ], [ %27, %L29 ], [ %27, %L70 ]
  %24 = load {}*, {}** %5, align 8
  %25 = bitcast {}*** %2 to {}**
  store {}* %24, {}** %25, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L29:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:191 within `size`
   %26 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
   %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %26, i64 0, i32 1
   %arraylen = load i64, i64* %arraylen_ptr, align 8
; └
; ┌ @ boot.jl:484 within `Array` @ boot.jl:475
   %27 = call nonnull {}* inttoptr (i64 4311340472 to {}* ({}*, i64)*)({}* inttoptr (i64 4694774032 to {}*), i64 %arraylen)
   store {}* %27, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %28 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %27, {}** %28, align 8
  %29 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %29, align 8
  %30 = call nonnull {}* @"j1_setindex!_7310"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:318 within `eachindex`
; │┌ @ abstractarray.jl:134 within `axes1`
; ││┌ @ abstractarray.jl:98 within `axes`
; │││┌ @ array.jl:191 within `size`
      %arraylen5 = load i64, i64* %arraylen_ptr, align 8
; └└└└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not25.not = icmp eq i64 %arraylen5, 0
; └└└└
  br i1 %.not25.not, label %common.ret, label %L44.preheader

L44.preheader:                                    ; preds = %L29
  %31 = bitcast {}* %27 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L44

L44:                                              ; preds = %L70, %L44.preheader
  %value_phi9 = phi i64 [ %33, %L70 ], [ 1, %L44.preheader ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %32 = add nsw i64 %value_phi9, -1
; │││└
; │││┌ @ int.jl:513 within `<`
      %.not26.not = icmp ult i64 %32, %arraylen5
; └└└└
  br i1 %.not26.not, label %idxend, label %L70

L70:                                              ; preds = %idxend, %L44
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not28.not = icmp eq i64 %value_phi9, %arraylen5
; │└
   %33 = add nuw nsw i64 %value_phi9, 1
; └
  br i1 %.not28.not, label %common.ret, label %L44

idxend:                                           ; preds = %L44
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr1827 = load double*, double** %31, align 8
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr1827, i64 %32
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
   br label %L70
; └
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_7311({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7312"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_7313({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7314"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1273 within `make_zero`
define double @julia_make_zero_7315({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
  ret double 0xC19321B1E3AE3D7A
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1273 within `make_zero`
define double @julia_make_zero_7317({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
  ret double 0xC19321B1E3AE3D7A
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─── %1   = Enzyme.Compiler.nothing::Nothing
└────        goto #3 if not true
2 ───        goto #4
3 ───        $(Expr(:throw_undef_if_not, :seen, false))::Any
4 ┄── %5   = ($(QuoteNode(Val{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}())) ∈ ())::Any
└────        goto #6 if not %5
5 ───        goto #39
6 ───        goto #8 if not true
7 ───        goto #9
8 ───        $(Expr(:throw_undef_if_not, :seen, false))::Any
9 ┄── %11  = Core._apply_iterate(Base.iterate, Core.tuple, (Val{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}(),), ())::Tuple{Val{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}, Vararg{Any}}
└────        goto #11 if not true
10 ──        goto #12
11 ──        $(Expr(:throw_undef_if_not, :seen, false))::Any
12 ┄─ %15  = Core.apply_type(Enzyme.Compiler.Merger, %11, Nothing, false, false)::Type{Enzyme.Compiler.Merger{_A, Nothing, false, false}} where _A
│     %16  = %new(%15, %1)::Enzyme.Compiler.Merger{_A, Nothing, false, false} where _A
│     %17  = (%16)(1)::Val
│     %18  = Enzyme.Compiler.forcefold::typeof(Enzyme.Compiler.forcefold)
│     %19  = (Core._compute_sparams)(forcefold(::Val{ty}, ::Val{sty}, C::Vararg{Any, N}) where {ty, sty, N} @ Enzyme.Compiler ~/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330, %18, $(QuoteNode(Val{Enzyme.Compiler.AnyState}())), %17)::Core.SimpleVector
│     %20  = (Core._svec_ref)(%19, 2)::Any
│     %21  = Enzyme.Compiler.:(==)::typeof(==)
│     %22  = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %23  = (isa)(%20, WeakRef)::Bool
└────        goto #14 if not %23
13 ── %25  = π (%20, WeakRef)
│     %26  = invoke %21(%25::WeakRef, %22::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #19
14 ── %28  = (isa)(%20, Missing)::Bool
└────        goto #16 if not %28
15 ──        goto #19
16 ──        goto #18 if not true
17 ── %32  = (%20 === %22)::Bool
└────        goto #19
18 ──        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
19 ┄─ %36  = φ (#13 => %26, #15 => $(QuoteNode(missing)), #17 => %32)::Union{Missing, Bool}
└────        goto #21 if not %36
20 ──        goto #31
21 ── %39  = (Core._svec_ref)(%19, 2)::Any
│     %40  = Enzyme.Compiler.:(==)::typeof(==)
│     %41  = (isa)(%39, WeakRef)::Bool
└────        goto #23 if not %41
22 ── %43  = π (%39, WeakRef)
│     %44  = invoke %40(%43::WeakRef, $(QuoteNode(Enzyme.Compiler.AnyState))::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #28
23 ── %46  = (isa)(%39, Missing)::Bool
└────        goto #25 if not %46
24 ──        goto #28
25 ──        goto #27 if not true
26 ── %50  = (%39 === $(QuoteNode(Enzyme.Compiler.AnyState)))::Bool
└────        goto #28
27 ──        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
28 ┄─ %54  = φ (#22 => %44, #24 => $(QuoteNode(missing)), #26 => %50)::Union{Missing, Bool}
└────        goto #30 if not %54
29 ──        goto #31
30 ── %57  = (Core._svec_ref)(%19, 2)::Any
│            Core.apply_type(Base.Val, %57)::Type{Val{_A}} where _A
└────        goto #32
31 ┄─        goto #32
32 ┄─ %61  = φ (#30 => %57, #31 => $(QuoteNode(Enzyme.Compiler.AnyState)))::Any
│     %62  = (%61 isa Enzyme.Compiler.ActivityState)::Bool
└────        goto #34 if not %62
33 ──        goto #38
34 ── %65  = (isa)(%61, Enzyme.Compiler.ActivityState)::Bool
└────        goto #36 if not %65
35 ── %67  = π (%61, Enzyme.Compiler.ActivityState)
└────        goto #37
36 ── %69  = Base.convert(Enzyme.Compiler.ActivityState, %61)::Enzyme.Compiler.ActivityState
└────        goto #37
37 ┄─ %71  = φ (#35 => %67, #36 => %69)::Enzyme.Compiler.ActivityState
38 ┄─ %72  = φ (#33 => %61, #37 => %71)::Any
│     %73  = π (%72, Enzyme.Compiler.ActivityState)
└────        goto #39
39 ┄─ %75  = φ (#5 => Enzyme.Compiler.MixedState, #38 => %73)::Enzyme.Compiler.ActivityState
└────        goto #40
40 ──        goto #41
41 ── %78  = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %79  = (%75 === %78)::Bool
└────        goto #42
42 ──        goto #44 if not %79
43 ──        nothing::Nothing
└────        return prev
44 ── %84  = Base.secret_table_token::Symbol
│     %85  = Base.getfield(seen, :ht)::Vector{Any}
│     %86  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%85), Core.Argument(4), :(%84)))::Any
│     %87  = (%86 === %84)::Bool
└────        goto #46 if not %87
45 ──        goto #47
46 ──        goto #47
47 ┄─ %91  = φ (#45 => %84, #46 => %86)::Any
│     %92  = (%91 === Base.secret_table_token)::Bool
│     %93  = Core.Intrinsics.not_int(%92)::Bool
└────        goto #48
48 ──        goto #49
49 ──        goto #54 if not %93
50 ── %97  = Base.getfield(seen, :ht)::Vector{Any}
│     %98  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%97), Core.Argument(4), :(Base.secret_table_token)))::Any
│     %99  = (%98 === Base.secret_table_token)::Bool
└────        goto #52 if not %99
51 ── %101 = Base.KeyError(prev)::Any
│            Base.throw(%101)::Union{}
└────        unreachable
52 ──        goto #53
53 ──        return %98
54 ──        nothing::Nothing
│            nothing::Nothing
│            nothing::Nothing
│            nothing::Nothing
│     %110 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Any}, svec(Any, Int64), 0, :(:ccall), Vector{Any}, 1, 1))::Vector{Any}
└────        goto #210 if not true
55 ── %112 = Enzyme.Compiler.getfield(prev, 1)::Main.ThreeMassSpring.var"#q_true#35"
│     %113 = Enzyme.Compiler.nothing::Nothing
└────        goto #57 if not true
56 ──        goto #58
57 ──        $(Expr(:throw_undef_if_not, :seen, false))::Any
58 ┄─ %117 = ($(QuoteNode(Val{Main.ThreeMassSpring.var"#q_true#35"}())) ∈ ())::Any
└────        goto #60 if not %117
59 ──        goto #93
60 ──        goto #62 if not true
61 ──        goto #63
62 ──        $(Expr(:throw_undef_if_not, :seen, false))::Any
63 ┄─ %123 = Core._apply_iterate(Base.iterate, Core.tuple, (Val{Main.ThreeMassSpring.var"#q_true#35"}(),), ())::Tuple{Val{Main.ThreeMassSpring.var"#q_true#35"}, Vararg{Any}}
└────        goto #65 if not true
64 ──        goto #66
65 ──        $(Expr(:throw_undef_if_not, :seen, false))::Any
66 ┄─ %127 = Core.apply_type(Enzyme.Compiler.Merger, %123, Nothing, false, false)::Type{Enzyme.Compiler.Merger{_A, Nothing, false, false}} where _A
│     %128 = %new(%127, %113)::Enzyme.Compiler.Merger{_A, Nothing, false, false} where _A
│     %129 = (%128)(1)::Val
│     %130 = Enzyme.Compiler.forcefold::typeof(Enzyme.Compiler.forcefold)
│     %131 = (Core._compute_sparams)(forcefold(::Val{ty}, ::Val{sty}, C::Vararg{Any, N}) where {ty, sty, N} @ Enzyme.Compiler ~/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330, %130, $(QuoteNode(Val{Enzyme.Compiler.AnyState}())), %129)::Core.SimpleVector
│     %132 = (Core._svec_ref)(%131, 2)::Any
│     %133 = Enzyme.Compiler.:(==)::typeof(==)
│     %134 = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %135 = (isa)(%132, WeakRef)::Bool
└────        goto #68 if not %135
67 ── %137 = π (%132, WeakRef)
│     %138 = invoke %133(%137::WeakRef, %134::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #73
68 ── %140 = (isa)(%132, Missing)::Bool
└────        goto #70 if not %140
69 ──        goto #73
70 ──        goto #72 if not true
71 ── %144 = (%132 === %134)::Bool
└────        goto #73
72 ──        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
73 ┄─ %148 = φ (#67 => %138, #69 => $(QuoteNode(missing)), #71 => %144)::Union{Missing, Bool}
└────        goto #75 if not %148
74 ──        goto #85
75 ── %151 = (Core._svec_ref)(%131, 2)::Any
│     %152 = Enzyme.Compiler.:(==)::typeof(==)
│     %153 = (isa)(%151, WeakRef)::Bool
└────        goto #77 if not %153
76 ── %155 = π (%151, WeakRef)
│     %156 = invoke %152(%155::WeakRef, $(QuoteNode(Enzyme.Compiler.AnyState))::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #82
77 ── %158 = (isa)(%151, Missing)::Bool
└────        goto #79 if not %158
78 ──        goto #82
79 ──        goto #81 if not true
80 ── %162 = (%151 === $(QuoteNode(Enzyme.Compiler.AnyState)))::Bool
└────        goto #82
81 ──        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
82 ┄─ %166 = φ (#76 => %156, #78 => $(QuoteNode(missing)), #80 => %162)::Union{Missing, Bool}
└────        goto #84 if not %166
83 ──        goto #85
84 ── %169 = (Core._svec_ref)(%131, 2)::Any
│            Core.apply_type(Base.Val, %169)::Type{Val{_A}} where _A
└────        goto #86
85 ┄─        goto #86
86 ┄─ %173 = φ (#84 => %169, #85 => $(QuoteNode(Enzyme.Compiler.AnyState)))::Any
│     %174 = (%173 isa Enzyme.Compiler.ActivityState)::Bool
└────        goto #88 if not %174
87 ──        goto #92
88 ── %177 = (isa)(%173, Enzyme.Compiler.ActivityState)::Bool
└────        goto #90 if not %177
89 ── %179 = π (%173, Enzyme.Compiler.ActivityState)
└────        goto #91
90 ── %181 = Base.convert(Enzyme.Compiler.ActivityState, %173)::Enzyme.Compiler.ActivityState
└────        goto #91
91 ┄─ %183 = φ (#89 => %179, #90 => %181)::Enzyme.Compiler.ActivityState
92 ┄─ %184 = φ (#87 => %173, #91 => %183)::Any
│     %185 = π (%184, Enzyme.Compiler.ActivityState)
└────        goto #93
93 ┄─ %187 = φ (#59 => Enzyme.Compiler.MixedState, #92 => %185)::Enzyme.Compiler.ActivityState
└────        goto #94
94 ──        goto #95
95 ── %190 = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %191 = (%187 === %190)::Bool
└────        goto #96
96 ──        goto #98 if not %191
97 ──        goto #209
98 ── %195 = Base.secret_table_token::Symbol
│     %196 = Base.getfield(seen, :ht)::Vector{Any}
│     %197 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%196), :(%112), :(%195)))::Any
│     %198 = (%197 === %195)::Bool
└────        goto #100 if not %198
99 ──        goto #101
100 ─        goto #101
101 ┄ %202 = φ (#99 => %195, #100 => %197)::Any
│     %203 = (%202 === Base.secret_table_token)::Bool
│     %204 = Core.Intrinsics.not_int(%203)::Bool
└────        goto #102
102 ─        goto #103
103 ─        goto #108 if not %204
104 ─ %208 = Base.getfield(seen, :ht)::Vector{Any}
│     %209 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%208), :(%112), :(Base.secret_table_token)))::Any
│     %210 = (%209 === Base.secret_table_token)::Bool
└────        goto #106 if not %210
105 ─ %212 = Base.KeyError(%112)::Any
│            Base.throw(%212)::Union{}
└────        unreachable
106 ─        goto #107
107 ─        goto #209
108 ─ %217 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Any}, svec(Any, Int64), 0, :(:ccall), Vector{Any}, 1, 1))::Vector{Any}
└────        goto #208 if not true
109 ─ %219 = Enzyme.Compiler.getfield(%112, 1)::Core.Box
│     %220 = Enzyme.Compiler.nothing::Nothing
└────        goto #111 if not true
110 ─        nothing::Nothing
111 ┄        goto #113 if not true
112 ─        goto #114
113 ─        $(Expr(:throw_undef_if_not, :seen, false))::Any
114 ┄ %226 = ($(QuoteNode(Val{Core.Box}())) ∈ ())::Any
└────        goto #116 if not %226
115 ─        goto #149
116 ─        goto #118 if not true
117 ─        goto #119
118 ─        $(Expr(:throw_undef_if_not, :seen, false))::Any
119 ┄ %232 = Core._apply_iterate(Base.iterate, Core.tuple, (Val{Core.Box}(),), ())::Tuple{Val{Core.Box}, Vararg{Any}}
└────        goto #121 if not true
120 ─        goto #122
121 ─        $(Expr(:throw_undef_if_not, :seen, false))::Any
122 ┄ %236 = Core.apply_type(Enzyme.Compiler.Merger, %232, Nothing, false, false)::Type{Enzyme.Compiler.Merger{_A, Nothing, false, false}} where _A
│     %237 = %new(%236, %220)::Enzyme.Compiler.Merger{_A, Nothing, false, false} where _A
│     %238 = (%237)(1)::Val
│     %239 = Enzyme.Compiler.forcefold::typeof(Enzyme.Compiler.forcefold)
│     %240 = (Core._compute_sparams)(forcefold(::Val{ty}, ::Val{sty}, C::Vararg{Any, N}) where {ty, sty, N} @ Enzyme.Compiler ~/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330, %239, $(QuoteNode(Val{Enzyme.Compiler.AnyState}())), %238)::Core.SimpleVector
│     %241 = (Core._svec_ref)(%240, 2)::Any
│     %242 = Enzyme.Compiler.:(==)::typeof(==)
│     %243 = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %244 = (isa)(%241, WeakRef)::Bool
└────        goto #124 if not %244
123 ─ %246 = π (%241, WeakRef)
│     %247 = invoke %242(%246::WeakRef, %243::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #129
124 ─ %249 = (isa)(%241, Missing)::Bool
└────        goto #126 if not %249
125 ─        goto #129
126 ─        goto #128 if not true
127 ─ %253 = (%241 === %243)::Bool
└────        goto #129
128 ─        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
129 ┄ %257 = φ (#123 => %247, #125 => $(QuoteNode(missing)), #127 => %253)::Union{Missing, Bool}
└────        goto #131 if not %257
130 ─        goto #141
131 ─ %260 = (Core._svec_ref)(%240, 2)::Any
│     %261 = Enzyme.Compiler.:(==)::typeof(==)
│     %262 = (isa)(%260, WeakRef)::Bool
└────        goto #133 if not %262
132 ─ %264 = π (%260, WeakRef)
│     %265 = invoke %261(%264::WeakRef, $(QuoteNode(Enzyme.Compiler.AnyState))::Enzyme.Compiler.ActivityState)::Union{Missing, Bool}
└────        goto #138
133 ─ %267 = (isa)(%260, Missing)::Bool
└────        goto #135 if not %267
134 ─        goto #138
135 ─        goto #137 if not true
136 ─ %271 = (%260 === $(QuoteNode(Enzyme.Compiler.AnyState)))::Bool
└────        goto #138
137 ─        Core.throw(ErrorException("fatal error in type inference (type bound)"))::Union{}
└────        unreachable
138 ┄ %275 = φ (#132 => %265, #134 => $(QuoteNode(missing)), #136 => %271)::Union{Missing, Bool}
└────        goto #140 if not %275
139 ─        goto #141
140 ─ %278 = (Core._svec_ref)(%240, 2)::Any
│            Core.apply_type(Base.Val, %278)::Type{Val{_A}} where _A
└────        goto #142
141 ┄        goto #142
142 ┄ %282 = φ (#140 => %278, #141 => $(QuoteNode(Enzyme.Compiler.AnyState)))::Any
│     %283 = (%282 isa Enzyme.Compiler.ActivityState)::Bool
└────        goto #144 if not %283
143 ─        goto #148
144 ─ %286 = (isa)(%282, Enzyme.Compiler.ActivityState)::Bool
└────        goto #146 if not %286
145 ─ %288 = π (%282, Enzyme.Compiler.ActivityState)
└────        goto #147
146 ─ %290 = Base.convert(Enzyme.Compiler.ActivityState, %282)::Enzyme.Compiler.ActivityState
└────        goto #147
147 ┄ %292 = φ (#145 => %288, #146 => %290)::Enzyme.Compiler.ActivityState
148 ┄ %293 = φ (#143 => %282, #147 => %292)::Any
│     %294 = π (%293, Enzyme.Compiler.ActivityState)
└────        goto #149
149 ┄ %296 = φ (#115 => Enzyme.Compiler.MixedState, #148 => %294)::Enzyme.Compiler.ActivityState
└────        goto #150
150 ─        goto #151
151 ─ %299 = Enzyme.Compiler.AnyState::Enzyme.Compiler.ActivityState
│     %300 = (%296 === %299)::Bool
└────        goto #152
152 ─        goto #154 if not %300
153 ─        goto #207
154 ─ %304 = Base.secret_table_token::Symbol
│     %305 = Base.getfield(seen, :ht)::Vector{Any}
│     %306 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%305), :(%219), :(%304)))::Any
│     %307 = (%306 === %304)::Bool
└────        goto #156 if not %307
155 ─        goto #157
156 ─        goto #157
157 ┄ %311 = φ (#155 => %304, #156 => %306)::Any
│     %312 = (%311 === Base.secret_table_token)::Bool
│     %313 = Core.Intrinsics.not_int(%312)::Bool
└────        goto #158
158 ─        goto #159
159 ─        goto #164 if not %313
160 ─ %317 = Base.getfield(seen, :ht)::Vector{Any}
│     %318 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%317), :(%219), :(Base.secret_table_token)))::Any
│     %319 = (%318 === Base.secret_table_token)::Bool
└────        goto #162 if not %319
161 ─ %321 = Base.KeyError(%219)::Any
│            Base.throw(%321)::Union{}
└────        unreachable
162 ─        goto #163
163 ─        goto #207
164 ─ %326 = $(Expr(:foreigncall, :(:jl_new_struct_uninit), Any, svec(Any), 0, :(:ccall), Core.Box))::Any
│            invoke Base.setindex!(seen::IdDict{Any, Any}, %326::Any, %219::Any)::Any
│     %328 = Base.repr::typeof(repr)
│     %329 = (isa)(%326, Base.BinaryPlatforms.Platform)::Bool
└────        goto #166 if not %329
165 ─ %331 = π (%326, Base.BinaryPlatforms.Platform)
│     %332 = invoke Base.BinaryPlatforms.:(var"#repr#12")(Base.BinaryPlatforms.nothing::Nothing, %328::typeof(repr), %331::Base.BinaryPlatforms.Platform)::String
└────        goto #167
166 ─ %334 = Base.repr(%326)::String
└────        goto #167
167 ┄ %336 = φ (#165 => %332, #166 => %334)::String
│            invoke Base.println("y = "::String, %336::String)::Any
└────        goto #206 if not true
168 ─ %339 = Enzyme.Compiler.isdefined(%219, 1)::Bool
└────        goto #205 if not %339
169 ─ %341 = Enzyme.Compiler.getfield(%219, 1)::Any
│     %342 = (%341 isa Core.Type)::Bool
└────        goto #171 if not %342
170 ─ %344 = π (%341, Type)
│     %345 = Core.apply_type(Core.Type, %344)::Type{Type{T}} where T
└────        goto #172
171 ─ %347 = Core.typeof(%341)::DataType
└────        goto #172
172 ┄ %349 = φ (#170 => %345, #171 => %347)::DataType
│     %350 = Core.tuple(%349, seen, %341, $(QuoteNode(Val{false}())))::Tuple{DataType, IdDict{Any, Any}, Any, Val{false}}
│     %351 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Any}, svec(Any, Int64), 0, :(:ccall), Vector{Any}, 4, 4))::Vector{Any}
└────        goto #181 if not true
173 ┄ %353 = φ (#172 => 1, #180 => %372)::Int64
│     %354 = φ (#172 => 1, #180 => %373)::Int64
│     %355 = φ (#172 => 1, #180 => %366)::Int64
│     %356 = Base.getfield(%350, %353, true)::Any
│     %357 = (%356 isa Core.Type)::Bool
└────        goto #175 if not %357
174 ─ %359 = π (%356, Type)
│     %360 = Core.apply_type(Core.Type, %359)::Type{Type{T}} where T
└────        goto #176
175 ─ %362 = Core.typeof(%356)::DataType
└────        goto #176
176 ┄ %364 = φ (#174 => %360, #175 => %362)::DataType
│            Base.arrayset(false, %351, %364, %355)::Vector{Any}
│     %366 = Base.add_int(%355, 1)::Int64
│     %367 = (%354 === 4)::Bool
└────        goto #178 if not %367
177 ─        goto #179
178 ─ %370 = Base.add_int(%354, 1)::Int64
└────        goto #179
179 ┄ %372 = φ (#178 => %370)::Int64
│     %373 = φ (#178 => %370)::Int64
│     %374 = φ (#177 => true, #178 => false)::Bool
│     %375 = Base.not_int(%374)::Bool
└────        goto #181 if not %375
180 ─        goto #173
181 ┄ %378 = Core._apply_iterate(Base.iterate, Core.apply_type, (Tuple,), %351)::Type
└────        goto #182
182 ─ %380 = InteractiveUtils.code_typed::typeof(code_typed)
│     %381 = EnzymeCore.make_zero::typeof(EnzymeCore.make_zero)
│     %382 = invoke Base.:(var"#code_typed#25")($(QuoteNode(Base.Pairs{Symbol, Union{}, Tuple{}, @NamedTuple{}}()))::Base.Pairs{Symbol, Union{}, Tuple{}, @NamedTuple{}}, %380::typeof(code_typed), %381::Any, %378::Any)::Vector{Any}
│     %383 = Base.arraylen(%382)::Int64
│     %384 = (%383 === 1)::Bool
└────        goto #184 if not %384
183 ─ %386 = Base.arrayref(true, %382, 1)::Any
└────        goto #185
184 ─        nothing::Nothing
185 ┄ %389 = φ (#183 => %386, #184 => %382)::Any
│     %390 = Base.repr::typeof(repr)
│     %391 = (isa)(%389, Base.BinaryPlatforms.Platform)::Bool
└────        goto #187 if not %391
186 ─ %393 = π (%389, Base.BinaryPlatforms.Platform)
│     %394 = invoke Base.BinaryPlatforms.:(var"#repr#12")(Base.BinaryPlatforms.nothing::Nothing, %390::typeof(repr), %393::Base.BinaryPlatforms.Platform)::String
└────        goto #188
187 ─ %396 = Base.repr(%389)::String
└────        goto #188
188 ┄ %398 = φ (#186 => %394, #187 => %396)::String
│            invoke Base.println("#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = "::String, %398::String)::Any
│     %400 = (%341 isa Core.Type)::Bool
└────        goto #190 if not %400
189 ─ %402 = π (%341, Type)
│     %403 = Core.apply_type(Core.Type, %402)::Type{Type{T}} where T
└────        goto #191
190 ─ %405 = Core.typeof(%341)::DataType
└────        goto #191
191 ┄ %407 = φ (#189 => %403, #190 => %405)::DataType
│     %408 = Core.tuple(%407, seen, %341, $(QuoteNode(Val{false}())))::Tuple{DataType, IdDict{Any, Any}, Any, Val{false}}
│     %409 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Any}, svec(Any, Int64), 0, :(:ccall), Vector{Any}, 4, 4))::Vector{Any}
└────        goto #200 if not true
192 ┄ %411 = φ (#191 => 1, #199 => %430)::Int64
│     %412 = φ (#191 => 1, #199 => %431)::Int64
│     %413 = φ (#191 => 1, #199 => %424)::Int64
│     %414 = Base.getfield(%408, %411, true)::Any
│     %415 = (%414 isa Core.Type)::Bool
└────        goto #194 if not %415
193 ─ %417 = π (%414, Type)
│     %418 = Core.apply_type(Core.Type, %417)::Type{Type{T}} where T
└────        goto #195
194 ─ %420 = Core.typeof(%414)::DataType
└────        goto #195
195 ┄ %422 = φ (#193 => %418, #194 => %420)::DataType
│            Base.arrayset(false, %409, %422, %413)::Vector{Any}
│     %424 = Base.add_int(%413, 1)::Int64
│     %425 = (%412 === 4)::Bool
└────        goto #197 if not %425
196 ─        goto #198
197 ─ %428 = Base.add_int(%412, 1)::Int64
└────        goto #198
198 ┄ %430 = φ (#197 => %428)::Int64
│     %431 = φ (#197 => %428)::Int64
│     %432 = φ (#196 => true, #197 => false)::Bool
│     %433 = Base.not_int(%432)::Bool
└────        goto #200 if not %433
199 ─        goto #192
200 ┄ %436 = Core._apply_iterate(Base.iterate, Core.apply_type, (Tuple,), %409)::Type
└────        goto #201
201 ─ %438 = InteractiveUtils.code_llvm::typeof(InteractiveUtils.code_llvm)
│     %439 = EnzymeCore.make_zero::typeof(EnzymeCore.make_zero)
│            invoke InteractiveUtils.:(var"#code_llvm#39")(false::Bool, false::Bool, true::Bool, :default::Symbol, %438::typeof(InteractiveUtils.code_llvm), %439::Any, %436::Any)::Nothing
│     %441 = invoke Base.:(var"#sprint#501")(nothing::Nothing, 0::Int64, sprint::typeof(sprint), show::Function, nothing::Nothing)::String
│            invoke Base.println("#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = "::String, %441::String)::Any
│     %443 = (%341 isa Core.Type)::Bool
└────        goto #203 if not %443
202 ─ %445 = π (%341, Type)
│     %446 = Core.apply_type(Core.Type, %445)::Type{Type{T}} where T
└────        goto #204
203 ─ %448 = Core.typeof(%341)::DataType
└────        goto #204
204 ┄ %450 = φ (#202 => %446, #203 => %448)::DataType
│     %451 = EnzymeCore.make_zero(%450, seen, %341, $(QuoteNode(Val{false}())))::Any
└────        $(Expr(:foreigncall, :(:jl_set_nth_field), Nothing, svec(Any, UInt64, Any), 0, :(:ccall), :(%326), 0x0000000000000000, :(%451), 0x0000000000000000))::Nothing
205 ┄        nothing::Nothing
206 ┄ %454 = Core.tuple("end", %326)::Tuple{String, Any}
│     %455 = Base.repr(%454)::String
│            invoke Base.println("(\"end\", y) = "::String, %455::String)::Any
└────        goto #207
207 ┄ %458 = φ (#153 => %219, #163 => %318, #206 => %326)::Any
└────        Base.arrayset(true, %217, %458, 1)::Vector{Any}
208 ┄ %460 = $(Expr(:foreigncall, :(:jl_array_ptr), Ptr{Any}, svec(Any), 0, :(:ccall), :(%217)))::Ptr{Any}
│     %461 = $(Expr(:foreigncall, :(:jl_new_structv), Any, svec(Any, Ptr{Any}, UInt32), 0, :(:ccall), Main.ThreeMassSpring.var"#q_true#35", :(%460), 0x00000001, 0x00000001, :(%217)))::Any
│            invoke Base.setindex!(seen::IdDict{Any, Any}, %461::Any, %112::Any)::Any
└────        goto #209
209 ┄ %464 = φ (#97 => %112, #107 => %209, #208 => %461)::Any
│            Base.arrayset(true, %110, %464, 1)::Vector{Any}
└────        nothing::Nothing
210 ┄ %467 = $(Expr(:foreigncall, :(:jl_array_ptr), Ptr{Any}, svec(Any), 0, :(:ccall), :(%110)))::Ptr{Any}
│     %468 = $(Expr(:foreigncall, :(:jl_new_structv), Any, svec(Any, Ptr{Any}, UInt32), 0, :(:ccall), Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}, :(%467), 0x00000001, 0x00000001, :(%110)))::Any
│            invoke Base.setindex!(seen::IdDict{Any, Any}, %468::Any, prev::Any)::Any
└────        return %468
) => Any
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1218 within `make_zero`
define nonnull {}* @julia_make_zero_7319({}* noundef nonnull align 8 dereferenceable(24) %0, [1 x [1 x {}*]]* nocapture noundef nonnull readonly align 8 dereferenceable(8) %1) #0 {
top:
  %2 = alloca [5 x {}*], align 8
  %gcframe595 = alloca [9 x {}*], align 16
  %gcframe595.sub = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe595, i64 0, i64 0
  %.sub = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 0
  %3 = bitcast [9 x {}*]* %gcframe595 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %3, i8 0, i64 72, i1 true)
  %4 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #3
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    %5 = bitcast [9 x {}*]* %gcframe595 to i64*
    store i64 28, i64* %5, align 16
    %6 = load {}**, {}*** %4, align 8
    %7 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe595, i64 0, i64 1
    %8 = bitcast {}** %7 to {}***
    store {}** %6, {}*** %8, align 8
    %9 = bitcast {}*** %4 to {}***
    store {}** %gcframe595.sub, {}*** %9, align 8
    store {}* inttoptr (i64 10870433304 to {}*), {}** %.sub, align 8
    %10 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 1
    store {}* inttoptr (i64 4765553104 to {}*), {}** %10, align 8
    %11 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4695151264 to {}*), {}** nonnull %.sub, i32 2)
    %12 = bitcast {}* %11 to i64*
    %13 = getelementptr inbounds i64, i64* %12, i64 -1
    %14 = load atomic i64, i64* %13 unordered, align 8
    %15 = and i64 %14, -16
    %16 = inttoptr i64 %15 to {}*
    %exactly_isa = icmp eq {}* %16, inttoptr (i64 192 to {}*)
    br i1 %exactly_isa, label %pass, label %fail

L11:                                              ; preds = %pass
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:519
    store {}* inttoptr (i64 4694782816 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4755589184 to {}*), {}** %10, align 8
    %17 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
    store {}* inttoptr (i64 10870433312 to {}*), {}** %17, align 8
    %18 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 3
    store {}* inttoptr (i64 4765553104 to {}*), {}** %18, align 8
    %19 = call nonnull {}* @jl_f__apply_iterate({}* null, {}** nonnull %.sub, i32 4)
    %20 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe595, i64 0, i64 2
    store {}* %19, {}** %20, align 16
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:521
    store {}* inttoptr (i64 6051398144 to {}*), {}** %.sub, align 8
    store {}* %19, {}** %10, align 8
    store {}* inttoptr (i64 4766712496 to {}*), {}** %17, align 8
    store {}* inttoptr (i64 4834800096 to {}*), {}** %18, align 8
    %21 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 4
    store {}* inttoptr (i64 4834800096 to {}*), {}** %21, align 8
    %22 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 5)
    store {}* %22, {}** %20, align 16
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:287 within `Merger`
     store {}* inttoptr (i64 4306583560 to {}*), {}** %.sub, align 8
     %23 = call nonnull {}* @ijl_new_structv({}* nonnull %22, {}** nonnull %.sub, i32 1)
     store {}* %23, {}** %20, align 16
; ││└
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ ntuple.jl:48 within `ntuple`
     store {}* inttoptr (i64 4306731360 to {}*), {}** %.sub, align 8
     %24 = call nonnull {}* @ijl_apply_generic({}* nonnull %23, {}** nonnull %.sub, i32 1)
     store {}* %24, {}** %20, align 16
; ││└
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330 within `forcefold`
     store {}* inttoptr (i64 6051393936 to {}*), {}** %.sub, align 8
     store {}* inttoptr (i64 6051393440 to {}*), {}** %10, align 8
     store {}* inttoptr (i64 6051396352 to {}*), {}** %17, align 8
     store {}* %24, {}** %18, align 8
     %25 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4741445872 to {}*), {}** nonnull %.sub, i32 4)
     %26 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe595, i64 0, i64 3
     store {}* %25, {}** %26, align 8
; │││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %25, {}** %.sub, align 8
     store {}* inttoptr (i64 4306731648 to {}*), {}** %10, align 8
     %27 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %28 = bitcast {}* %27 to i64*
     %29 = getelementptr inbounds i64, i64* %28, i64 -1
     %30 = load atomic i64, i64* %29 unordered, align 8
     %31 = and i64 %30, -16
     switch i64 %31, label %post_is325 [
    i64 4766708064, label %L25
    i64 4748075488, label %post_box_union282
    i64 6042230432, label %is324
  ]

L25:                                              ; preds = %L11
     store {}* %27, {}** %20, align 16
     %32 = call i8 @"j_==_7327"({}* nonnull %27, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass287

L39:                                              ; preds = %pass287
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %25, {}** %.sub, align 8
     store {}* inttoptr (i64 4306731648 to {}*), {}** %10, align 8
     %33 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %34 = bitcast {}* %33 to i64*
     %35 = getelementptr inbounds i64, i64* %34, i64 -1
     %36 = load atomic i64, i64* %35 unordered, align 8
     %37 = and i64 %36, -16
     switch i64 %37, label %post_is316 [
    i64 4766708064, label %L43
    i64 4748075488, label %post_box_union304
    i64 6042230432, label %is315
  ]

L43:                                              ; preds = %L39
     store {}* %33, {}** %20, align 16
     %38 = call i8 @"j_==_7327"({}* nonnull %33, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass309

L57:                                              ; preds = %pass309
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:335 within `forcefold`
     store {}* %25, {}** %.sub, align 8
     store {}* inttoptr (i64 4306731648 to {}*), {}** %10, align 8
     %39 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     store {}* %39, {}** %20, align 16
; │││┌ @ essentials.jl:869 within `Val`
      store {}* inttoptr (i64 4695625552 to {}*), {}** %.sub, align 8
      store {}* %39, {}** %10, align 8
      %40 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L61

L61:                                              ; preds = %pass309, %pass287, %L57
     %value_phi289 = phi {}* [ %39, %L57 ], [ inttoptr (i64 5869115840 to {}*), %pass309 ], [ inttoptr (i64 5869115840 to {}*), %pass287 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:525
    %41 = bitcast {}* %value_phi289 to i64*
    %42 = getelementptr inbounds i64, i64* %41, i64 -1
    %43 = load atomic i64, i64* %42 unordered, align 8
    %44 = and i64 %43, -16
    %45 = inttoptr i64 %44 to {}*
    %exactly_isa291.not = icmp eq {}* %45, inttoptr (i64 6042230432 to {}*)
    br i1 %exactly_isa291.not, label %L72, label %L72.thread

L72.thread:                                       ; preds = %L61
    store {}* %value_phi289, {}** %20, align 16
    store {}* inttoptr (i64 6042230432 to {}*), {}** %.sub, align 8
    store {}* %value_phi289, {}** %10, align 8
    %46 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
    br label %L78

L72:                                              ; preds = %L61
    %.not473 = icmp eq {}* %value_phi289, null
    br i1 %.not473, label %L82, label %L78

L78:                                              ; preds = %L72, %L72.thread
    %unbox339.in.in = phi {}* [ %46, %L72.thread ], [ %value_phi289, %L72 ]
    %unbox339.in = bitcast {}* %unbox339.in.in to i32*
    %unbox339 = load i32, i32* %unbox339.in, align 4
; │└
; │ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:556 within `guaranteed_const_nongen`
; │┌ @ Base.jl:159 within `==`
    %.not = icmp eq i32 %unbox339, 0
; └└
  br i1 %.not, label %L82, label %L84

common.ret:                                       ; preds = %merge_own._crit_edge, %L97, %L82
  %common.ret.op = phi {}* [ %box, %L82 ], [ %243, %merge_own._crit_edge ], [ %63, %L97 ]
  %47 = load {}*, {}** %7, align 8
  %48 = bitcast {}*** %4 to {}**
  store {}* %47, {}** %48, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L82:                                              ; preds = %L78, %L72
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1221 within `make_zero`
  %ptls_field615 = getelementptr inbounds {}**, {}*** %4, i64 2
  %49 = bitcast {}*** %ptls_field615 to i8**
  %ptls_load616617 = load i8*, i8** %49, align 8
  %box = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load616617, i32 1136, i32 16) #13
  %50 = bitcast {}* %box to i64*
  %51 = getelementptr inbounds i64, i64* %50, i64 -1
  store atomic i64 10967227792, i64* %51 unordered, align 8
  %memcpy_refined_src = getelementptr inbounds [1 x [1 x {}*]], [1 x [1 x {}*]]* %1, i64 0, i64 0, i64 0
  %memcpy_refined_dst = bitcast {}* %box to {}**
  %52 = load {}*, {}** %memcpy_refined_src, align 8
  store {}* %52, {}** %memcpy_refined_dst, align 8
  br label %common.ret

L84:                                              ; preds = %pass, %L78
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1223 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %53 = bitcast {}* %0 to {}**
      %getfield = load atomic {}*, {}** %53 unordered, align 8
      %54 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe595, i64 0, i64 3
      store {}* %getfield, {}** %54, align 8
; │││└
     %ptls_field542596 = getelementptr inbounds {}**, {}*** %4, i64 2
     %55 = bitcast {}*** %ptls_field542596 to i8**
     %ptls_load543597598 = load i8*, i8** %55, align 8
     %box3 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load543597598, i32 1136, i32 16) #13
     %56 = bitcast {}* %box3 to i64*
     %57 = getelementptr inbounds i64, i64* %56, i64 -1
     store atomic i64 10967227792, i64* %57 unordered, align 8
     %memcpy_refined_src4 = getelementptr inbounds [1 x [1 x {}*]], [1 x [1 x {}*]]* %1, i64 0, i64 0, i64 0
     %memcpy_refined_dst5 = bitcast {}* %box3 to {}**
     %58 = load {}*, {}** %memcpy_refined_src4, align 8
     store {}* %58, {}** %memcpy_refined_dst5, align 8
     %59 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe595, i64 0, i64 2
     store {}* %box3, {}** %59, align 16
     %60 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %box3, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not435 = icmp eq {}* %60, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not435, label %L106, label %L97

L97:                                              ; preds = %L84
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1224 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield8 = load atomic {}*, {}** %53 unordered, align 8
    store {}* %getfield8, {}** %54, align 8
; │└
   %ptls_load546599600 = load i8*, i8** %55, align 8
   %box10 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load546599600, i32 1136, i32 16) #13
   %61 = bitcast {}* %box10 to i64*
   %62 = getelementptr inbounds i64, i64* %61, i64 -1
   store atomic i64 10967227792, i64* %62 unordered, align 8
   %memcpy_refined_dst12 = bitcast {}* %box10 to {}**
   store {}* %58, {}** %memcpy_refined_dst12, align 8
   store {}* %box10, {}** %59, align 16
   %63 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield8, {}* nonnull %box10, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not437 = icmp eq {}* %63, inttoptr (i64 4308354632 to {}*)
   br i1 %.not437, label %L101, label %common.ret

L101:                                             ; preds = %L97
   %ptls_load549601602 = load i8*, i8** %55, align 8
   %box14 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load549601602, i32 1136, i32 16) #13
   %64 = bitcast {}* %box14 to i64*
   %65 = getelementptr inbounds i64, i64* %64, i64 -1
   store atomic i64 10967227792, i64* %65 unordered, align 8
   %memcpy_refined_dst16 = bitcast {}* %box14 to {}**
   store {}* %58, {}** %memcpy_refined_dst16, align 8
   store {}* %box14, {}** %59, align 16
   store {}* %box14, {}** %.sub, align 8
   %66 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %66)
   unreachable

L106:                                             ; preds = %L84
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1257 within `make_zero`
; ┌ @ boot.jl:475 within `Array`
   %67 = call nonnull {}* inttoptr (i64 4311340472 to {}* ({}*, i64)*)({}* inttoptr (i64 4766710736 to {}*), i64 1)
   %68 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe595, i64 0, i64 6
   store {}* %67, {}** %68, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    store {}* inttoptr (i64 10870432152 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4765553104 to {}*), {}** %10, align 8
    %69 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4695151264 to {}*), {}** nonnull %.sub, i32 2)
    %70 = bitcast {}* %69 to i64*
    %71 = getelementptr inbounds i64, i64* %70, i64 -1
    %72 = load atomic i64, i64* %71 unordered, align 8
    %73 = and i64 %72, -16
    %74 = inttoptr i64 %73 to {}*
    %exactly_isa18 = icmp eq {}* %74, inttoptr (i64 192 to {}*)
    br i1 %exactly_isa18, label %pass20, label %fail19

L123:                                             ; preds = %pass20
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:519
    store {}* inttoptr (i64 4694782816 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4755589184 to {}*), {}** %10, align 8
    %75 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
    store {}* inttoptr (i64 10870432160 to {}*), {}** %75, align 8
    %76 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 3
    store {}* inttoptr (i64 4765553104 to {}*), {}** %76, align 8
    %77 = call nonnull {}* @jl_f__apply_iterate({}* null, {}** nonnull %.sub, i32 4)
    store {}* %77, {}** %59, align 16
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:521
    store {}* inttoptr (i64 6051398144 to {}*), {}** %.sub, align 8
    store {}* %77, {}** %10, align 8
    store {}* inttoptr (i64 4766712496 to {}*), {}** %75, align 8
    store {}* inttoptr (i64 4834800096 to {}*), {}** %76, align 8
    %78 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 4
    store {}* inttoptr (i64 4834800096 to {}*), {}** %78, align 8
    %79 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 5)
    store {}* %79, {}** %59, align 16
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:287 within `Merger`
     store {}* inttoptr (i64 4306583560 to {}*), {}** %.sub, align 8
     %80 = call nonnull {}* @ijl_new_structv({}* nonnull %79, {}** nonnull %.sub, i32 1)
     store {}* %80, {}** %59, align 16
; ││└
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ ntuple.jl:48 within `ntuple`
     store {}* inttoptr (i64 4306731360 to {}*), {}** %.sub, align 8
     %81 = call nonnull {}* @ijl_apply_generic({}* nonnull %80, {}** nonnull %.sub, i32 1)
     store {}* %81, {}** %59, align 16
; ││└
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330 within `forcefold`
     store {}* inttoptr (i64 6051393936 to {}*), {}** %.sub, align 8
     store {}* inttoptr (i64 6051393440 to {}*), {}** %10, align 8
     store {}* inttoptr (i64 6051396352 to {}*), {}** %75, align 8
     store {}* %81, {}** %76, align 8
     %82 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4741445872 to {}*), {}** nonnull %.sub, i32 4)
     store {}* %82, {}** %54, align 8
; │││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %82, {}** %.sub, align 8
     store {}* inttoptr (i64 4306731648 to {}*), {}** %10, align 8
     %83 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %84 = bitcast {}* %83 to i64*
     %85 = getelementptr inbounds i64, i64* %84, i64 -1
     %86 = load atomic i64, i64* %85 unordered, align 8
     %87 = and i64 %86, -16
     switch i64 %87, label %post_is264 [
    i64 4766708064, label %L137
    i64 4748075488, label %post_box_union221
    i64 6042230432, label %is263
  ]

L137:                                             ; preds = %L123
     store {}* %83, {}** %59, align 16
     %88 = call i8 @"j_==_7327"({}* nonnull %83, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass226

L151:                                             ; preds = %pass226
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %82, {}** %.sub, align 8
     store {}* inttoptr (i64 4306731648 to {}*), {}** %10, align 8
     %89 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %90 = bitcast {}* %89 to i64*
     %91 = getelementptr inbounds i64, i64* %90, i64 -1
     %92 = load atomic i64, i64* %91 unordered, align 8
     %93 = and i64 %92, -16
     switch i64 %93, label %post_is255 [
    i64 4766708064, label %L155
    i64 4748075488, label %post_box_union243
    i64 6042230432, label %is254
  ]

L155:                                             ; preds = %L151
     store {}* %89, {}** %59, align 16
     %94 = call i8 @"j_==_7327"({}* nonnull %89, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass248

L169:                                             ; preds = %pass248
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:335 within `forcefold`
     store {}* %82, {}** %.sub, align 8
     store {}* inttoptr (i64 4306731648 to {}*), {}** %10, align 8
     %95 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     store {}* %95, {}** %59, align 16
; │││┌ @ essentials.jl:869 within `Val`
      store {}* inttoptr (i64 4695625552 to {}*), {}** %.sub, align 8
      store {}* %95, {}** %10, align 8
      %96 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L173

L173:                                             ; preds = %pass248, %pass226, %L169
     %value_phi228 = phi {}* [ %95, %L169 ], [ inttoptr (i64 5869115840 to {}*), %pass248 ], [ inttoptr (i64 5869115840 to {}*), %pass226 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:525
    %97 = bitcast {}* %value_phi228 to i64*
    %98 = getelementptr inbounds i64, i64* %97, i64 -1
    %99 = load atomic i64, i64* %98 unordered, align 8
    %100 = and i64 %99, -16
    %101 = inttoptr i64 %100 to {}*
    %exactly_isa230.not = icmp eq {}* %101, inttoptr (i64 6042230432 to {}*)
    br i1 %exactly_isa230.not, label %L184, label %L184.thread

L184.thread:                                      ; preds = %L173
    store {}* %value_phi228, {}** %59, align 16
    store {}* inttoptr (i64 6042230432 to {}*), {}** %.sub, align 8
    store {}* %value_phi228, {}** %10, align 8
    %102 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
    br label %L190

L184:                                             ; preds = %L173
    %.not466 = icmp eq {}* %value_phi228, null
    br i1 %.not466, label %L194, label %L190

L190:                                             ; preds = %L184, %L184.thread
    %unbox346.in.in = phi {}* [ %102, %L184.thread ], [ %value_phi228, %L184 ]
    %unbox346.in = bitcast {}* %unbox346.in.in to i32*
    %unbox346 = load i32, i32* %unbox346.in, align 4
; │└
; │ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:556 within `guaranteed_const_nongen`
; │┌ @ Base.jl:159 within `==`
    %.not439 = icmp eq i32 %unbox346, 0
; └└
  br i1 %.not439, label %L194, label %L195

L194:                                             ; preds = %L190, %L184
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1218 within `make_zero`
  %ptls_load552613614 = load i8*, i8** %55, align 8
  %box349 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load552613614, i32 1136, i32 16) #13
  %103 = bitcast {}* %box349 to i64*
  %104 = getelementptr inbounds i64, i64* %103, i64 -1
  store atomic i64 10967363344, i64* %104 unordered, align 8
  %memcpy_refined_dst351 = bitcast {}* %box349 to {}**
  store {}* %58, {}** %memcpy_refined_dst351, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1221
  br label %L464

L195:                                             ; preds = %pass20, %L190
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1223
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %getfield30 = load atomic {}*, {}** %53 unordered, align 8
      store {}* %getfield30, {}** %54, align 8
; │││└
     %ptls_load555603604 = load i8*, i8** %55, align 8
     %box32 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load555603604, i32 1136, i32 16) #13
     %105 = bitcast {}* %box32 to i64*
     %106 = getelementptr inbounds i64, i64* %105, i64 -1
     store atomic i64 10967363344, i64* %106 unordered, align 8
     %memcpy_refined_dst34 = bitcast {}* %box32 to {}**
     store {}* %58, {}** %memcpy_refined_dst34, align 8
     store {}* %box32, {}** %59, align 16
     %107 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield30, {}* nonnull %box32, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not443 = icmp eq {}* %107, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not443, label %L217, label %L208

L208:                                             ; preds = %L195
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1224
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield37 = load atomic {}*, {}** %53 unordered, align 8
    store {}* %getfield37, {}** %54, align 8
; │└
   %ptls_load558605606 = load i8*, i8** %55, align 8
   %box39 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load558605606, i32 1136, i32 16) #13
   %108 = bitcast {}* %box39 to i64*
   %109 = getelementptr inbounds i64, i64* %108, i64 -1
   store atomic i64 10967363344, i64* %109 unordered, align 8
   %memcpy_refined_dst41 = bitcast {}* %box39 to {}**
   store {}* %58, {}** %memcpy_refined_dst41, align 8
   store {}* %box39, {}** %59, align 16
   %110 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield37, {}* nonnull %box39, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not445 = icmp eq {}* %110, inttoptr (i64 4308354632 to {}*)
   br i1 %.not445, label %L212, label %L464

L212:                                             ; preds = %L208
   %ptls_load561609610 = load i8*, i8** %55, align 8
   %box43 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load561609610, i32 1136, i32 16) #13
   %111 = bitcast {}* %box43 to i64*
   %112 = getelementptr inbounds i64, i64* %111, i64 -1
   store atomic i64 10967363344, i64* %112 unordered, align 8
   %memcpy_refined_dst45 = bitcast {}* %box43 to {}**
   store {}* %58, {}** %memcpy_refined_dst45, align 8
   store {}* %box43, {}** %59, align 16
   store {}* %box43, {}** %.sub, align 8
   %113 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %113)
   unreachable

L217:                                             ; preds = %L195
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1257
; ┌ @ boot.jl:475 within `Array`
   %114 = call nonnull {}* inttoptr (i64 4311340472 to {}* ({}*, i64)*)({}* inttoptr (i64 4766710736 to {}*), i64 1)
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1260
  %getfield49 = load atomic {}*, {}** %memcpy_refined_src4 unordered, align 8
  %115 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe595, i64 0, i64 5
  store {}* %114, {}** %115, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    store {}* inttoptr (i64 10870432192 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4765553104 to {}*), {}** %10, align 8
    %116 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4695151264 to {}*), {}** nonnull %.sub, i32 2)
    %117 = bitcast {}* %116 to i64*
    %118 = getelementptr inbounds i64, i64* %117, i64 -1
    %119 = load atomic i64, i64* %118 unordered, align 8
    %120 = and i64 %119, -16
    %121 = inttoptr i64 %120 to {}*
    %exactly_isa51 = icmp eq {}* %121, inttoptr (i64 192 to {}*)
    br i1 %exactly_isa51, label %pass53, label %fail52

L232:                                             ; preds = %pass53
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:519
    store {}* inttoptr (i64 4694782816 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4755589184 to {}*), {}** %10, align 8
    %122 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
    store {}* inttoptr (i64 10870432200 to {}*), {}** %122, align 8
    %123 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 3
    store {}* inttoptr (i64 4765553104 to {}*), {}** %123, align 8
    %124 = call nonnull {}* @jl_f__apply_iterate({}* null, {}** nonnull %.sub, i32 4)
    store {}* %124, {}** %59, align 16
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:521
    store {}* inttoptr (i64 6051398144 to {}*), {}** %.sub, align 8
    store {}* %124, {}** %10, align 8
    store {}* inttoptr (i64 4766712496 to {}*), {}** %122, align 8
    store {}* inttoptr (i64 4834800096 to {}*), {}** %123, align 8
    %125 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 4
    store {}* inttoptr (i64 4834800096 to {}*), {}** %125, align 8
    %126 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 5)
    store {}* %126, {}** %59, align 16
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:287 within `Merger`
     store {}* inttoptr (i64 4306583560 to {}*), {}** %.sub, align 8
     %127 = call nonnull {}* @ijl_new_structv({}* nonnull %126, {}** nonnull %.sub, i32 1)
     store {}* %127, {}** %59, align 16
; ││└
; ││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ ntuple.jl:48 within `ntuple`
     store {}* inttoptr (i64 4306731360 to {}*), {}** %.sub, align 8
     %128 = call nonnull {}* @ijl_apply_generic({}* nonnull %127, {}** nonnull %.sub, i32 1)
     store {}* %128, {}** %59, align 16
; ││└
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:330 within `forcefold`
     store {}* inttoptr (i64 6051393936 to {}*), {}** %.sub, align 8
     store {}* inttoptr (i64 6051393440 to {}*), {}** %10, align 8
     store {}* inttoptr (i64 6051396352 to {}*), {}** %122, align 8
     store {}* %128, {}** %123, align 8
     %129 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4741445872 to {}*), {}** nonnull %.sub, i32 4)
     store {}* %129, {}** %54, align 8
; │││ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %129, {}** %.sub, align 8
     store {}* inttoptr (i64 4306731648 to {}*), {}** %10, align 8
     %130 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %131 = bitcast {}* %130 to i64*
     %132 = getelementptr inbounds i64, i64* %131, i64 -1
     %133 = load atomic i64, i64* %132 unordered, align 8
     %134 = and i64 %133, -16
     switch i64 %134, label %post_is205 [
    i64 4766708064, label %L246
    i64 4748075488, label %post_box_union
    i64 6042230432, label %is204
  ]

L246:                                             ; preds = %L232
     store {}* %130, {}** %59, align 16
     %135 = call i8 @"j_==_7327"({}* nonnull %130, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass169

L260:                                             ; preds = %pass169
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     store {}* %129, {}** %.sub, align 8
     store {}* inttoptr (i64 4306731648 to {}*), {}** %10, align 8
     %136 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     %137 = bitcast {}* %136 to i64*
     %138 = getelementptr inbounds i64, i64* %137, i64 -1
     %139 = load atomic i64, i64* %138 unordered, align 8
     %140 = and i64 %139, -16
     switch i64 %140, label %post_is [
    i64 4766708064, label %L264
    i64 4748075488, label %post_box_union186
    i64 6042230432, label %is
  ]

L264:                                             ; preds = %L260
     store {}* %136, {}** %59, align 16
     %141 = call i8 @"j_==_7327"({}* nonnull %136, i32 zeroext 0)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass191

L278:                                             ; preds = %pass191
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:335 within `forcefold`
     store {}* %129, {}** %.sub, align 8
     store {}* inttoptr (i64 4306731648 to {}*), {}** %10, align 8
     %142 = call nonnull {}* @jl_f__svec_ref({}* null, {}** nonnull %.sub, i32 2)
     store {}* %142, {}** %59, align 16
; │││┌ @ essentials.jl:869 within `Val`
      store {}* inttoptr (i64 4695625552 to {}*), {}** %.sub, align 8
      store {}* %142, {}** %10, align 8
      %143 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L282

L282:                                             ; preds = %pass191, %pass169, %L278
     %value_phi171 = phi {}* [ %142, %L278 ], [ inttoptr (i64 5869115840 to {}*), %pass191 ], [ inttoptr (i64 5869115840 to {}*), %pass169 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:525
    %144 = bitcast {}* %value_phi171 to i64*
    %145 = getelementptr inbounds i64, i64* %144, i64 -1
    %146 = load atomic i64, i64* %145 unordered, align 8
    %147 = and i64 %146, -16
    %148 = inttoptr i64 %147 to {}*
    %exactly_isa173.not = icmp eq {}* %148, inttoptr (i64 6042230432 to {}*)
    br i1 %exactly_isa173.not, label %L293, label %L293.thread

L293.thread:                                      ; preds = %L282
    store {}* %value_phi171, {}** %59, align 16
    store {}* inttoptr (i64 6042230432 to {}*), {}** %.sub, align 8
    store {}* %value_phi171, {}** %10, align 8
    %149 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
    br label %L299

L293:                                             ; preds = %L282
    %.not459 = icmp eq {}* %value_phi171, null
    br i1 %.not459, label %L304, label %L299

L299:                                             ; preds = %L293, %L293.thread
    %unbox357.in.in = phi {}* [ %149, %L293.thread ], [ %value_phi171, %L293 ]
    %unbox357.in = bitcast {}* %unbox357.in.in to i32*
    %unbox357 = load i32, i32* %unbox357.in, align 4
; │└
; │ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:556 within `guaranteed_const_nongen`
; │┌ @ Base.jl:159 within `==`
    %.not447 = icmp eq i32 %unbox357, 0
; └└
  br i1 %.not447, label %L458, label %L304

L304:                                             ; preds = %pass53, %L299, %L293
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1223
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %getfield78 = load atomic {}*, {}** %53 unordered, align 8
      store {}* %getfield78, {}** %59, align 16
; │││└
     %150 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield78, {}* nonnull %getfield49, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not449 = icmp eq {}* %150, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not449, label %L326, label %L317

L317:                                             ; preds = %L304
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1224
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield81 = load atomic {}*, {}** %53 unordered, align 8
    store {}* %getfield81, {}** %59, align 16
; │└
   %151 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield81, {}* nonnull %getfield49, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not450 = icmp eq {}* %151, inttoptr (i64 4308354632 to {}*)
   br i1 %.not450, label %L321, label %L458

L321:                                             ; preds = %L317
   store {}* %getfield49, {}** %.sub, align 8
   %152 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %152)
   unreachable

L326:                                             ; preds = %L304
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1231
  %153 = call nonnull {}* inttoptr (i64 4311439236 to {}* ({}*)*)({}* inttoptr (i64 4695403056 to {}*))
  %154 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe595, i64 0, i64 4
  store {}* %153, {}** %154, align 16
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1232
  store {}* %0, {}** %.sub, align 8
  store {}* %153, {}** %10, align 8
  %155 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
  store {}* %getfield49, {}** %155, align 8
  %156 = call nonnull {}* @"j1_setindex!_7321"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1233
  %157 = bitcast {}* %153 to i64*
  %158 = getelementptr inbounds i64, i64* %157, i64 -1
  %159 = load atomic i64, i64* %158 unordered, align 8
  %160 = and i64 %159, -16
  %161 = inttoptr i64 %160 to {}*
  %exactly_isa85.not = icmp eq {}* %161, inttoptr (i64 4694961600 to {}*)
  br i1 %exactly_isa85.not, label %L331, label %L334

L331:                                             ; preds = %L326
; ┌ @ binaryplatforms.jl:173 within `repr`
   %162 = bitcast {}* %153 to [2 x {}*]*
   %163 = call nonnull {}* @"j_#repr#12_7322"([2 x {}*]* nocapture readonly %162)
; └
  br label %L336

L334:                                             ; preds = %L326
  store {}* %153, {}** %.sub, align 8
  %164 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4699339408 to {}*), {}** nonnull %.sub, i32 1)
  br label %L336

L336:                                             ; preds = %L334, %L331
  %value_phi86 = phi {}* [ %163, %L331 ], [ %164, %L334 ]
  store {}* %value_phi86, {}** %59, align 16
  call void @j_println_7323({}* inttoptr (i64 6083832960 to {}*), {}* nonnull %value_phi86)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1235
  %165 = bitcast {}* %getfield49 to {}**
  %166 = load atomic {}*, {}** %165 unordered, align 8
  %isdefined.not = icmp eq {}* %166, null
  br i1 %isdefined.not, label %L454, label %pass90

L344:                                             ; preds = %pass90
  store {}* %166, {}** %54, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ boot.jl:245 within `Typeof`
    store {}* inttoptr (i64 4766713520 to {}*), {}** %.sub, align 8
    store {}* %166, {}** %10, align 8
    %167 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
    br label %L349

L347:                                             ; preds = %pass90
    %168 = icmp ult {}* %278, inttoptr (i64 1024 to {}*)
    br i1 %168, label %guard_pass161, label %L349

L349:                                             ; preds = %guard_pass161, %L347, %L344
    %value_phi92 = phi {}* [ %167, %L344 ], [ %278, %L347 ], [ %488, %guard_pass161 ]
    store {}* %166, {}** %54, align 8
    store {}* %value_phi92, {}** %59, align 16
; │└
; │┌ @ errorshow.jl:185 within `typesof`
    store {}* %value_phi92, {}** %.sub, align 8
    store {}* %0, {}** %10, align 8
    store {}* %166, {}** %155, align 8
    %169 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 3
    store {}* inttoptr (i64 4732369728 to {}*), {}** %169, align 8
    %170 = call nonnull {}* @jl_f_tuple({}* null, {}** nonnull %.sub, i32 4)
    %171 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe595, i64 0, i64 8
    store {}* %170, {}** %171, align 16
; ││┌ @ array.jl:724 within `_array_for` @ array.jl:721
; │││┌ @ abstractarray.jl:873 within `similar` @ abstractarray.jl:874
; ││││┌ @ boot.jl:484 within `Array` @ boot.jl:475
       %172 = call nonnull {}* inttoptr (i64 4311340472 to {}* ({}*, i64)*)({}* inttoptr (i64 4766710736 to {}*), i64 4)
       %173 = bitcast {}* %172 to { i8*, i64, i16, i16, i32 }*
       %arrayflags_ptr99 = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %173, i64 0, i32 2
       %174 = bitcast {}* %172 to {}**
       %175 = getelementptr inbounds {}*, {}** %174, i64 5
       %176 = bitcast {}* %172 to {}***
       %177 = getelementptr inbounds [9 x {}*], [9 x {}*]* %gcframe595, i64 0, i64 7
       store {}* %172, {}** %177, align 8
; ││└└└
; ││┌ @ tuple.jl:31 within `getindex`
     %178 = call {}* @ijl_get_nth_field_checked({}* nonnull %170, i64 0)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %179 = bitcast {}* %178 to i64*
     %180 = getelementptr inbounds i64, i64* %179, i64 -1
     %181 = load atomic i64, i64* %180 unordered, align 8
     %182 = and i64 %181, -16
     %183 = add i64 %182, -16
     %switch = icmp ult i64 %183, 64
     br i1 %switch, label %L359, label %L362

L359:                                             ; preds = %L349
     store {}* %178, {}** %59, align 16
     store {}* inttoptr (i64 4766713520 to {}*), {}** %.sub, align 8
     store {}* %178, {}** %10, align 8
     %184 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
     br label %L364

L362:                                             ; preds = %L349
     %185 = inttoptr i64 %182 to {}*
     %186 = icmp ult {}* %185, inttoptr (i64 1024 to {}*)
     br i1 %186, label %guard_pass158, label %L364

L364:                                             ; preds = %guard_pass158, %L362, %L359
     %value_phi98 = phi {}* [ %184, %L359 ], [ %185, %L362 ], [ %485, %guard_pass158 ]
; ││└
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags100 = load i16, i16* %arrayflags_ptr99, align 2
     %187 = and i16 %arrayflags100, 3
     %has_owner101 = icmp eq i16 %187, 3
     br i1 %has_owner101, label %array_owned102, label %merge_own103

L389:                                             ; preds = %idxend118, %373
     %value_phi123 = phi {}* [ %375, %373 ], [ %arrayref, %idxend118 ]
; └└└
  %188 = bitcast {}* %value_phi123 to i64*
  %189 = getelementptr inbounds i64, i64* %188, i64 -1
  %190 = load atomic i64, i64* %189 unordered, align 8
  %191 = and i64 %190, -16
  %192 = inttoptr i64 %191 to {}*
  %exactly_isa125.not = icmp eq {}* %192, inttoptr (i64 4694961600 to {}*)
  br i1 %exactly_isa125.not, label %L393, label %L396

L393:                                             ; preds = %L389
; ┌ @ binaryplatforms.jl:173 within `repr`
   %193 = bitcast {}* %value_phi123 to [2 x {}*]*
   store {}* %value_phi123, {}** %59, align 16
   %194 = call nonnull {}* @"j_#repr#12_7322"([2 x {}*]* nocapture readonly %193)
; └
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L398

L396:                                             ; preds = %L389
     store {}* %value_phi123, {}** %59, align 16
; └└└
  store {}* %value_phi123, {}** %.sub, align 8
  %195 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4699339408 to {}*), {}** nonnull %.sub, i32 1)
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L398

L398:                                             ; preds = %L396, %L393
     %value_phi126 = phi {}* [ %194, %L393 ], [ %195, %L396 ]
     store {}* %value_phi126, {}** %59, align 16
; └└└
  call void @j_println_7323({}* inttoptr (i64 6083832656 to {}*), {}* nonnull %value_phi126)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ boot.jl:245 within `Typeof`
    br i1 %switch540, label %L402, label %L405

L402:                                             ; preds = %L398
    store {}* inttoptr (i64 4766713520 to {}*), {}** %.sub, align 8
    store {}* %166, {}** %10, align 8
    %196 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L407

L405:                                             ; preds = %L398
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ boot.jl:245 within `Typeof`
    %197 = icmp ult {}* %278, inttoptr (i64 1024 to {}*)
    br i1 %197, label %guard_pass155, label %L407

L407:                                             ; preds = %guard_pass155, %L405, %L402
    %value_phi129 = phi {}* [ %196, %L402 ], [ %278, %L405 ], [ %482, %guard_pass155 ]
    store {}* %value_phi129, {}** %59, align 16
; │└
; │┌ @ errorshow.jl:185 within `typesof`
    store {}* %value_phi129, {}** %.sub, align 8
    store {}* %0, {}** %10, align 8
    store {}* %166, {}** %155, align 8
    store {}* inttoptr (i64 4732369728 to {}*), {}** %169, align 8
    %198 = call nonnull {}* @jl_f_tuple({}* null, {}** nonnull %.sub, i32 4)
    store {}* %198, {}** %171, align 16
; ││┌ @ array.jl:724 within `_array_for` @ array.jl:721
; │││┌ @ abstractarray.jl:873 within `similar` @ abstractarray.jl:874
; ││││┌ @ boot.jl:484 within `Array` @ boot.jl:475
       %199 = call nonnull {}* inttoptr (i64 4311340472 to {}* ({}*, i64)*)({}* inttoptr (i64 4766710736 to {}*), i64 4)
       %200 = bitcast {}* %199 to { i8*, i64, i16, i16, i32 }*
       %arrayflags_ptr136 = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %200, i64 0, i32 2
       %201 = bitcast {}* %199 to {}**
       %202 = getelementptr inbounds {}*, {}** %201, i64 5
       %203 = bitcast {}* %199 to {}***
       store {}* %199, {}** %177, align 8
; ││└└└
; ││┌ @ tuple.jl:31 within `getindex`
     %204 = call {}* @ijl_get_nth_field_checked({}* nonnull %198, i64 0)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %205 = bitcast {}* %204 to i64*
     %206 = getelementptr inbounds i64, i64* %205, i64 -1
     %207 = load atomic i64, i64* %206 unordered, align 8
     %208 = and i64 %207, -16
     %209 = add i64 %208, -16
     %switch538 = icmp ult i64 %209, 64
     br i1 %switch538, label %L417, label %L420

L417:                                             ; preds = %L407
     store {}* %204, {}** %59, align 16
     store {}* inttoptr (i64 4766713520 to {}*), {}** %.sub, align 8
     store {}* %204, {}** %10, align 8
     %210 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L422

L420:                                             ; preds = %L407
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ boot.jl:245 within `Typeof`
     %211 = inttoptr i64 %208 to {}*
     %212 = icmp ult {}* %211, inttoptr (i64 1024 to {}*)
     br i1 %212, label %guard_pass152, label %L422

L422:                                             ; preds = %guard_pass152, %L420, %L417
     %value_phi135 = phi {}* [ %210, %L417 ], [ %211, %L420 ], [ %479, %guard_pass152 ]
; ││└
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags137 = load i16, i16* %arrayflags_ptr136, align 2
     %213 = and i16 %arrayflags137, 3
     %has_owner138 = icmp eq i16 %213, 3
     br i1 %has_owner138, label %array_owned139, label %merge_own140

L445:                                             ; preds = %471
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1242
; ┌ @ boot.jl:245 within `Typeof`
   store {}* inttoptr (i64 4766713520 to {}*), {}** %.sub, align 8
   store {}* %166, {}** %10, align 8
   %214 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L450

L448:                                             ; preds = %471
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1242
; ┌ @ boot.jl:245 within `Typeof`
   %215 = icmp ult {}* %278, inttoptr (i64 1024 to {}*)
   br i1 %215, label %guard_pass, label %L450

L450:                                             ; preds = %guard_pass, %L448, %L445
   %value_phi150 = phi {}* [ %214, %L445 ], [ %278, %L448 ], [ %476, %guard_pass ]
   store {}* %value_phi150, {}** %59, align 16
; └
  store {}* %value_phi150, {}** %.sub, align 8
  store {}* %0, {}** %10, align 8
  store {}* %166, {}** %155, align 8
  store {}* inttoptr (i64 4732369728 to {}*), {}** %169, align 8
  %216 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 5389776832 to {}*), {}** nonnull %.sub, i32 4)
  store {}* %216, {}** %59, align 16
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1246
  call void inttoptr (i64 4311674072 to void ({}*, i64, {}*)*)({}* nonnull %153, i64 0, {}* nonnull %216)
  br label %L454

L454:                                             ; preds = %L450, %L336
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1249
; ┌ @ show.jl:1181 within `macro expansion`
   store {}* inttoptr (i64 6083832288 to {}*), {}** %.sub, align 8
   store {}* %153, {}** %10, align 8
   %217 = call nonnull {}* @jl_f_tuple({}* null, {}** nonnull %.sub, i32 2)
   store {}* %217, {}** %59, align 16
; └
  store {}* %217, {}** %.sub, align 8
  %218 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4699339408 to {}*), {}** nonnull %.sub, i32 1)
  store {}* %218, {}** %59, align 16
  call void @j_println_7323({}* inttoptr (i64 6083832256 to {}*), {}* nonnull %218)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1250
  br label %L458

L458:                                             ; preds = %L454, %L317, %L299
  %value_phi55 = phi {}* [ %153, %L454 ], [ %getfield49, %L299 ], [ %151, %L317 ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1262
; ┌ @ essentials.jl:645 within `setindex!`
   %219 = bitcast {}* %114 to { i8*, i64, i16, i16, i32 }*
   %arraylen_ptr56 = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %219, i64 0, i32 1
   %arraylen57 = load i64, i64* %arraylen_ptr56, align 8
   %inbounds58.not = icmp eq i64 %arraylen57, 0
   br i1 %inbounds58.not, label %oob59, label %idxend61

L464:                                             ; preds = %merge_own66._crit_edge, %L208, %L194
   %value_phi22 = phi {}* [ %box349, %L194 ], [ %269, %merge_own66._crit_edge ], [ %110, %L208 ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1262 within `make_zero`
; ┌ @ essentials.jl:645 within `setindex!`
   %220 = bitcast {}* %67 to { i8*, i64, i16, i16, i32 }*
   %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %220, i64 0, i32 1
   %arraylen = load i64, i64* %arraylen_ptr, align 8
   %inbounds.not = icmp eq i64 %arraylen, 0
   br i1 %inbounds.not, label %oob, label %idxend

fail:                                             ; preds = %top
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4766708480 to {}*), {}* %11)
    unreachable

pass:                                             ; preds = %top
    %221 = icmp eq {}* %11, inttoptr (i64 4834800096 to {}*)
    br i1 %221, label %L11, label %L84

fail19:                                           ; preds = %L106
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4766708480 to {}*), {}* %69)
    unreachable

pass20:                                           ; preds = %L106
    %222 = icmp eq {}* %69, inttoptr (i64 4834800096 to {}*)
    br i1 %222, label %L123, label %L195

oob:                                              ; preds = %L464
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1262 within `make_zero`
; ┌ @ essentials.jl:645 within `setindex!`
   %errorbox = alloca i64, align 8
   store i64 1, i64* %errorbox, align 8
   call void @ijl_bounds_error_ints({}* %67, i64* nonnull %errorbox, i64 1)
   unreachable

idxend:                                           ; preds = %L464
   %arrayflags_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %220, i64 0, i32 2
   %arrayflags = load i16, i16* %arrayflags_ptr, align 2
   %223 = and i16 %arrayflags, 3
   %has_owner = icmp eq i16 %223, 3
   br i1 %has_owner, label %array_owned, label %merge_own

array_owned:                                      ; preds = %idxend
   %224 = bitcast {}* %67 to {}**
   %225 = getelementptr inbounds {}*, {}** %224, i64 5
   %external_owner = load {}*, {}** %225, align 8
   br label %merge_own

merge_own:                                        ; preds = %array_owned, %idxend
   %data_owner = phi {}* [ %67, %idxend ], [ %external_owner, %array_owned ]
   %226 = bitcast {}* %67 to {}***
   %arrayptr = load {}**, {}*** %226, align 8
   store atomic {}* %value_phi22, {}** %arrayptr release, align 8
   %227 = bitcast {}* %data_owner to i64*
   %228 = getelementptr inbounds i64, i64* %227, i64 -1
   %229 = load atomic i64, i64* %228 unordered, align 8
   %230 = and i64 %229, 3
   %231 = icmp eq i64 %230, 3
   %232 = ptrtoint {}** %arrayptr to i64
   %233 = inttoptr i64 %232 to i8*
   br i1 %231, label %234, label %merge_own._crit_edge

234:                                              ; preds = %merge_own
   %235 = bitcast {}* %value_phi22 to i64*
   %236 = getelementptr inbounds i64, i64* %235, i64 -1
   %237 = load atomic i64, i64* %236 unordered, align 8
   %238 = and i64 %237, 1
   %239 = icmp eq i64 %238, 0
   br i1 %239, label %240, label %merge_own._crit_edge

240:                                              ; preds = %234
   call void @ijl_gc_queue_root({}* nonnull %data_owner)
   %241 = bitcast {}* %67 to i8**
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1268 within `make_zero`
; ┌ @ pointer.jl:65 within `unsafe_convert`
   %arrayptr24.pre.pre = load i8*, i8** %241, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1262 within `make_zero`
; ┌ @ essentials.jl:645 within `setindex!`
   br label %merge_own._crit_edge

merge_own._crit_edge:                             ; preds = %240, %234, %merge_own
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1268 within `make_zero`
; ┌ @ pointer.jl:65 within `unsafe_convert`
   %arrayptr24 = phi i8* [ %233, %merge_own ], [ %arrayptr24.pre.pre, %240 ], [ %233, %234 ]
   %242 = ptrtoint i8* %arrayptr24 to i64
; └
  %243 = call nonnull {}* inttoptr (i64 4311447040 to {}* ({}*, i64, i32)*)({}* inttoptr (i64 10967227792 to {}*), i64 %242, i32 1)
  store {}* %243, {}** %54, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1269 within `make_zero`
  %ptls_load564607608 = load i8*, i8** %55, align 8
  %box26 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load564607608, i32 1136, i32 16) #13
  %244 = bitcast {}* %box26 to i64*
  %245 = getelementptr inbounds i64, i64* %244, i64 -1
  store atomic i64 10967227792, i64* %245 unordered, align 8
  %memcpy_refined_dst28 = bitcast {}* %box26 to {}**
  store {}* %58, {}** %memcpy_refined_dst28, align 8
  store {}* %box26, {}** %59, align 16
  store {}* %0, {}** %.sub, align 8
  store {}* %243, {}** %10, align 8
  %246 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
  store {}* %box26, {}** %246, align 8
  %247 = call nonnull {}* @"j1_setindex!_7321"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
  br label %common.ret

fail52:                                           ; preds = %L217
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:515
    call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4766708480 to {}*), {}* %116)
    unreachable

pass53:                                           ; preds = %L217
    %248 = icmp eq {}* %116, inttoptr (i64 4834800096 to {}*)
    br i1 %248, label %L232, label %L304

oob59:                                            ; preds = %L458
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1262
; ┌ @ essentials.jl:645 within `setindex!`
   %errorbox60 = alloca i64, align 8
   store i64 1, i64* %errorbox60, align 8
   call void @ijl_bounds_error_ints({}* %114, i64* nonnull %errorbox60, i64 1)
   unreachable

idxend61:                                         ; preds = %L458
   %arrayflags_ptr62 = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %219, i64 0, i32 2
   %arrayflags63 = load i16, i16* %arrayflags_ptr62, align 2
   %249 = and i16 %arrayflags63, 3
   %has_owner64 = icmp eq i16 %249, 3
   br i1 %has_owner64, label %array_owned65, label %merge_own66

array_owned65:                                    ; preds = %idxend61
   %250 = bitcast {}* %114 to {}**
   %251 = getelementptr inbounds {}*, {}** %250, i64 5
   %external_owner67 = load {}*, {}** %251, align 8
   br label %merge_own66

merge_own66:                                      ; preds = %array_owned65, %idxend61
   %data_owner68 = phi {}* [ %114, %idxend61 ], [ %external_owner67, %array_owned65 ]
   %252 = bitcast {}* %114 to {}***
   %arrayptr70 = load {}**, {}*** %252, align 8
   store atomic {}* %value_phi55, {}** %arrayptr70 release, align 8
   %253 = bitcast {}* %data_owner68 to i64*
   %254 = getelementptr inbounds i64, i64* %253, i64 -1
   %255 = load atomic i64, i64* %254 unordered, align 8
   %256 = and i64 %255, 3
   %257 = icmp eq i64 %256, 3
   %258 = ptrtoint {}** %arrayptr70 to i64
   %259 = inttoptr i64 %258 to i8*
   br i1 %257, label %260, label %merge_own66._crit_edge

260:                                              ; preds = %merge_own66
   %261 = bitcast {}* %value_phi55 to i64*
   %262 = getelementptr inbounds i64, i64* %261, i64 -1
   %263 = load atomic i64, i64* %262 unordered, align 8
   %264 = and i64 %263, 1
   %265 = icmp eq i64 %264, 0
   br i1 %265, label %266, label %merge_own66._crit_edge

266:                                              ; preds = %260
   call void @ijl_gc_queue_root({}* nonnull %data_owner68)
   %267 = bitcast {}* %114 to i8**
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1268
; ┌ @ pointer.jl:65 within `unsafe_convert`
   %arrayptr72.pre.pre = load i8*, i8** %267, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1262
; ┌ @ essentials.jl:645 within `setindex!`
   br label %merge_own66._crit_edge

merge_own66._crit_edge:                           ; preds = %266, %260, %merge_own66
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1268
; ┌ @ pointer.jl:65 within `unsafe_convert`
   %arrayptr72 = phi i8* [ %259, %merge_own66 ], [ %arrayptr72.pre.pre, %266 ], [ %259, %260 ]
   %268 = ptrtoint i8* %arrayptr72 to i64
; └
  %269 = call nonnull {}* inttoptr (i64 4311447040 to {}* ({}*, i64, i32)*)({}* inttoptr (i64 10967363344 to {}*), i64 %268, i32 1)
  store {}* %269, {}** %54, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1269
  %ptls_load567611612 = load i8*, i8** %55, align 8
  %box74 = call noalias nonnull dereferenceable(16) {}* @ijl_gc_pool_alloc(i8* %ptls_load567611612, i32 1136, i32 16) #13
  %270 = bitcast {}* %box74 to i64*
  %271 = getelementptr inbounds i64, i64* %270, i64 -1
  store atomic i64 10967363344, i64* %271 unordered, align 8
  %memcpy_refined_dst76 = bitcast {}* %box74 to {}**
  store {}* %getfield49, {}** %memcpy_refined_dst76, align 8
  store {}* %box74, {}** %59, align 16
  store {}* %0, {}** %.sub, align 8
  store {}* %269, {}** %10, align 8
  %272 = getelementptr inbounds [5 x {}*], [5 x {}*]* %2, i64 0, i64 2
  store {}* %box74, {}** %272, align 8
  %273 = call nonnull {}* @"j1_setindex!_7321"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1270
  br label %L464

pass90:                                           ; preds = %L336
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ boot.jl:245 within `Typeof`
    %274 = bitcast {}* %166 to i64*
    %275 = getelementptr inbounds i64, i64* %274, i64 -1
    %276 = load atomic i64, i64* %275 unordered, align 8
    %277 = and i64 %276, -16
    %278 = inttoptr i64 %277 to {}*
    %279 = add i64 %277, -16
    %switch540 = icmp ult i64 %279, 64
    br i1 %switch540, label %L344, label %L347

array_owned102:                                   ; preds = %L364
; │└
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ essentials.jl:645 within `setindex!`
     %external_owner104 = load {}*, {}** %175, align 8
     br label %merge_own103

merge_own103:                                     ; preds = %array_owned102, %L364
     %data_owner105 = phi {}* [ %172, %L364 ], [ %external_owner104, %array_owned102 ]
     %arrayptr107 = load {}**, {}*** %176, align 8
     store atomic {}* %value_phi98, {}** %arrayptr107 release, align 8
     %280 = bitcast {}* %data_owner105 to i64*
     %281 = getelementptr inbounds i64, i64* %280, i64 -1
     %282 = load atomic i64, i64* %281 unordered, align 8
     %283 = and i64 %282, 3
     %284 = icmp eq i64 %283, 3
     br i1 %284, label %285, label %292

285:                                              ; preds = %merge_own103
     %286 = bitcast {}* %value_phi98 to i64*
     %287 = getelementptr inbounds i64, i64* %286, i64 -1
     %288 = load atomic i64, i64* %287 unordered, align 8
     %289 = and i64 %288, 1
     %290 = icmp eq i64 %289, 0
     br i1 %290, label %291, label %292

291:                                              ; preds = %285
     call void @ijl_gc_queue_root({}* nonnull %data_owner105)
     br label %292

292:                                              ; preds = %291, %285, %merge_own103
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %293 = call {}* @ijl_get_nth_field_checked({}* nonnull %170, i64 1)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %294 = bitcast {}* %293 to i64*
     %295 = getelementptr inbounds i64, i64* %294, i64 -1
     %296 = load atomic i64, i64* %295 unordered, align 8
     %297 = and i64 %296, -16
     %298 = add i64 %297, -16
     %switch.1 = icmp ult i64 %298, 64
     br i1 %switch.1, label %L359.1, label %L362.1

L362.1:                                           ; preds = %292
     %299 = inttoptr i64 %297 to {}*
     %300 = icmp ult {}* %299, inttoptr (i64 1024 to {}*)
     br i1 %300, label %guard_pass158.1, label %L364.1

guard_pass158.1:                                  ; preds = %L362.1
     %301 = getelementptr inbounds i8, i8* @small_typeof, i64 %297
     %302 = bitcast i8* %301 to {}**
     %303 = load {}*, {}** %302, align 8
     br label %L364.1

L359.1:                                           ; preds = %292
     store {}* %293, {}** %59, align 16
     store {}* inttoptr (i64 4766713520 to {}*), {}** %.sub, align 8
     store {}* %293, {}** %10, align 8
     %304 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
     br label %L364.1

L364.1:                                           ; preds = %L359.1, %guard_pass158.1, %L362.1
     %value_phi98.1 = phi {}* [ %304, %L359.1 ], [ %299, %L362.1 ], [ %303, %guard_pass158.1 ]
; ││└
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags100.1 = load i16, i16* %arrayflags_ptr99, align 2
     %305 = and i16 %arrayflags100.1, 3
     %has_owner101.1 = icmp eq i16 %305, 3
     br i1 %has_owner101.1, label %array_owned102.1, label %merge_own103.1

array_owned102.1:                                 ; preds = %L364.1
     %external_owner104.1 = load {}*, {}** %175, align 8
     br label %merge_own103.1

merge_own103.1:                                   ; preds = %array_owned102.1, %L364.1
     %data_owner105.1 = phi {}* [ %172, %L364.1 ], [ %external_owner104.1, %array_owned102.1 ]
     %arrayptr107.1 = load {}**, {}*** %176, align 8
     %306 = getelementptr inbounds {}*, {}** %arrayptr107.1, i64 1
     store atomic {}* %value_phi98.1, {}** %306 release, align 8
     %307 = bitcast {}* %data_owner105.1 to i64*
     %308 = getelementptr inbounds i64, i64* %307, i64 -1
     %309 = load atomic i64, i64* %308 unordered, align 8
     %310 = and i64 %309, 3
     %311 = icmp eq i64 %310, 3
     br i1 %311, label %312, label %319

312:                                              ; preds = %merge_own103.1
     %313 = bitcast {}* %value_phi98.1 to i64*
     %314 = getelementptr inbounds i64, i64* %313, i64 -1
     %315 = load atomic i64, i64* %314 unordered, align 8
     %316 = and i64 %315, 1
     %317 = icmp eq i64 %316, 0
     br i1 %317, label %318, label %319

318:                                              ; preds = %312
     call void @ijl_gc_queue_root({}* nonnull %data_owner105.1)
     br label %319

319:                                              ; preds = %318, %312, %merge_own103.1
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %320 = call {}* @ijl_get_nth_field_checked({}* nonnull %170, i64 2)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %321 = bitcast {}* %320 to i64*
     %322 = getelementptr inbounds i64, i64* %321, i64 -1
     %323 = load atomic i64, i64* %322 unordered, align 8
     %324 = and i64 %323, -16
     %325 = add i64 %324, -16
     %switch.2 = icmp ult i64 %325, 64
     br i1 %switch.2, label %L359.2, label %L362.2

L362.2:                                           ; preds = %319
     %326 = inttoptr i64 %324 to {}*
     %327 = icmp ult {}* %326, inttoptr (i64 1024 to {}*)
     br i1 %327, label %guard_pass158.2, label %L364.2

guard_pass158.2:                                  ; preds = %L362.2
     %328 = getelementptr inbounds i8, i8* @small_typeof, i64 %324
     %329 = bitcast i8* %328 to {}**
     %330 = load {}*, {}** %329, align 8
     br label %L364.2

L359.2:                                           ; preds = %319
     store {}* %320, {}** %59, align 16
     store {}* inttoptr (i64 4766713520 to {}*), {}** %.sub, align 8
     store {}* %320, {}** %10, align 8
     %331 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
     br label %L364.2

L364.2:                                           ; preds = %L359.2, %guard_pass158.2, %L362.2
     %value_phi98.2 = phi {}* [ %331, %L359.2 ], [ %326, %L362.2 ], [ %330, %guard_pass158.2 ]
; ││└
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags100.2 = load i16, i16* %arrayflags_ptr99, align 2
     %332 = and i16 %arrayflags100.2, 3
     %has_owner101.2 = icmp eq i16 %332, 3
     br i1 %has_owner101.2, label %array_owned102.2, label %merge_own103.2

array_owned102.2:                                 ; preds = %L364.2
     %external_owner104.2 = load {}*, {}** %175, align 8
     br label %merge_own103.2

merge_own103.2:                                   ; preds = %array_owned102.2, %L364.2
     %data_owner105.2 = phi {}* [ %172, %L364.2 ], [ %external_owner104.2, %array_owned102.2 ]
     %arrayptr107.2 = load {}**, {}*** %176, align 8
     %333 = getelementptr inbounds {}*, {}** %arrayptr107.2, i64 2
     store atomic {}* %value_phi98.2, {}** %333 release, align 8
     %334 = bitcast {}* %data_owner105.2 to i64*
     %335 = getelementptr inbounds i64, i64* %334, i64 -1
     %336 = load atomic i64, i64* %335 unordered, align 8
     %337 = and i64 %336, 3
     %338 = icmp eq i64 %337, 3
     br i1 %338, label %339, label %346

339:                                              ; preds = %merge_own103.2
     %340 = bitcast {}* %value_phi98.2 to i64*
     %341 = getelementptr inbounds i64, i64* %340, i64 -1
     %342 = load atomic i64, i64* %341 unordered, align 8
     %343 = and i64 %342, 1
     %344 = icmp eq i64 %343, 0
     br i1 %344, label %345, label %346

345:                                              ; preds = %339
     call void @ijl_gc_queue_root({}* nonnull %data_owner105.2)
     br label %346

346:                                              ; preds = %345, %339, %merge_own103.2
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %347 = call {}* @ijl_get_nth_field_checked({}* nonnull %170, i64 3)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %348 = bitcast {}* %347 to i64*
     %349 = getelementptr inbounds i64, i64* %348, i64 -1
     %350 = load atomic i64, i64* %349 unordered, align 8
     %351 = and i64 %350, -16
     %352 = add i64 %351, -16
     %switch.3 = icmp ult i64 %352, 64
     br i1 %switch.3, label %L359.3, label %L362.3

L362.3:                                           ; preds = %346
     %353 = inttoptr i64 %351 to {}*
     %354 = icmp ult {}* %353, inttoptr (i64 1024 to {}*)
     br i1 %354, label %guard_pass158.3, label %L364.3

guard_pass158.3:                                  ; preds = %L362.3
     %355 = getelementptr inbounds i8, i8* @small_typeof, i64 %351
     %356 = bitcast i8* %355 to {}**
     %357 = load {}*, {}** %356, align 8
     br label %L364.3

L359.3:                                           ; preds = %346
     store {}* %347, {}** %59, align 16
     store {}* inttoptr (i64 4766713520 to {}*), {}** %.sub, align 8
     store {}* %347, {}** %10, align 8
     %358 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
     br label %L364.3

L364.3:                                           ; preds = %L359.3, %guard_pass158.3, %L362.3
     %value_phi98.3 = phi {}* [ %358, %L359.3 ], [ %353, %L362.3 ], [ %357, %guard_pass158.3 ]
; ││└
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags100.3 = load i16, i16* %arrayflags_ptr99, align 2
     %359 = and i16 %arrayflags100.3, 3
     %has_owner101.3 = icmp eq i16 %359, 3
     br i1 %has_owner101.3, label %array_owned102.3, label %merge_own103.3

array_owned102.3:                                 ; preds = %L364.3
     %external_owner104.3 = load {}*, {}** %175, align 8
     br label %merge_own103.3

merge_own103.3:                                   ; preds = %array_owned102.3, %L364.3
     %data_owner105.3 = phi {}* [ %172, %L364.3 ], [ %external_owner104.3, %array_owned102.3 ]
     %arrayptr107.3 = load {}**, {}*** %176, align 8
     %360 = getelementptr inbounds {}*, {}** %arrayptr107.3, i64 3
     store atomic {}* %value_phi98.3, {}** %360 release, align 8
     %361 = bitcast {}* %data_owner105.3 to i64*
     %362 = getelementptr inbounds i64, i64* %361, i64 -1
     %363 = load atomic i64, i64* %362 unordered, align 8
     %364 = and i64 %363, 3
     %365 = icmp eq i64 %364, 3
     br i1 %365, label %366, label %373

366:                                              ; preds = %merge_own103.3
     %367 = bitcast {}* %value_phi98.3 to i64*
     %368 = getelementptr inbounds i64, i64* %367, i64 -1
     %369 = load atomic i64, i64* %368 unordered, align 8
     %370 = and i64 %369, 1
     %371 = icmp eq i64 %370, 0
     br i1 %371, label %372, label %373

372:                                              ; preds = %366
     call void @ijl_gc_queue_root({}* nonnull %data_owner105.3)
     br label %373

373:                                              ; preds = %372, %366, %merge_own103.3
; ││└
    store {}* inttoptr (i64 4694782816 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4755586496 to {}*), {}** %10, align 8
    store {}* inttoptr (i64 4704443072 to {}*), {}** %155, align 8
    store {}* %172, {}** %169, align 8
    %374 = call nonnull {}* @jl_f__apply_iterate({}* null, {}** nonnull %.sub, i32 4)
    store {}* %374, {}** %59, align 16
; │└
; │┌ @ reflection.jl:1353 within `code_typed`
    store {}* inttoptr (i64 4704453792 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4696380016 to {}*), {}** %10, align 8
    store {}* inttoptr (i64 5389776832 to {}*), {}** %155, align 8
    store {}* %374, {}** %169, align 8
    %375 = call nonnull {}* @"j1_#code_typed#25_7324"({}* inttoptr (i64 4696381584 to {}*), {}** nonnull %.sub, i32 4)
; │└
; │ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:227
; │┌ @ essentials.jl:10 within `length`
    %376 = bitcast {}* %375 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr111 = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %376, i64 0, i32 1
    %arraylen112 = load i64, i64* %arraylen_ptr111, align 8
; │└
; │┌ @ promotion.jl:521 within `==`
    %.not453 = icmp eq i64 %arraylen112, 1
; │└
   br i1 %.not453, label %idxend118, label %L389

idxend118:                                        ; preds = %373
; │┌ @ essentials.jl:13 within `getindex`
    %377 = bitcast {}* %375 to {}***
    %arrayptr120454 = load {}**, {}*** %377, align 8
    %arrayref = load {}*, {}** %arrayptr120454, align 8
    %.not455 = icmp eq {}* %arrayref, null
    br i1 %.not455, label %fail121, label %L389

fail121:                                          ; preds = %idxend118
    call void @ijl_throw({}* inttoptr (i64 4765553248 to {}*))
    unreachable

array_owned139:                                   ; preds = %L422
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ essentials.jl:645 within `setindex!`
     %external_owner141 = load {}*, {}** %202, align 8
     br label %merge_own140

merge_own140:                                     ; preds = %array_owned139, %L422
     %data_owner142 = phi {}* [ %199, %L422 ], [ %external_owner141, %array_owned139 ]
     %arrayptr144 = load {}**, {}*** %203, align 8
     store atomic {}* %value_phi135, {}** %arrayptr144 release, align 8
     %378 = bitcast {}* %data_owner142 to i64*
     %379 = getelementptr inbounds i64, i64* %378, i64 -1
     %380 = load atomic i64, i64* %379 unordered, align 8
     %381 = and i64 %380, 3
     %382 = icmp eq i64 %381, 3
     br i1 %382, label %383, label %390

383:                                              ; preds = %merge_own140
     %384 = bitcast {}* %value_phi135 to i64*
     %385 = getelementptr inbounds i64, i64* %384, i64 -1
     %386 = load atomic i64, i64* %385 unordered, align 8
     %387 = and i64 %386, 1
     %388 = icmp eq i64 %387, 0
     br i1 %388, label %389, label %390

389:                                              ; preds = %383
     call void @ijl_gc_queue_root({}* nonnull %data_owner142)
     br label %390

390:                                              ; preds = %389, %383, %merge_own140
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %391 = call {}* @ijl_get_nth_field_checked({}* nonnull %198, i64 1)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %392 = bitcast {}* %391 to i64*
     %393 = getelementptr inbounds i64, i64* %392, i64 -1
     %394 = load atomic i64, i64* %393 unordered, align 8
     %395 = and i64 %394, -16
     %396 = add i64 %395, -16
     %switch538.1 = icmp ult i64 %396, 64
     br i1 %switch538.1, label %L417.1, label %L420.1

L420.1:                                           ; preds = %390
     %397 = inttoptr i64 %395 to {}*
     %398 = icmp ult {}* %397, inttoptr (i64 1024 to {}*)
     br i1 %398, label %guard_pass152.1, label %L422.1

guard_pass152.1:                                  ; preds = %L420.1
     %399 = getelementptr inbounds i8, i8* @small_typeof, i64 %395
     %400 = bitcast i8* %399 to {}**
     %401 = load {}*, {}** %400, align 8
     br label %L422.1

L417.1:                                           ; preds = %390
     store {}* %391, {}** %59, align 16
     store {}* inttoptr (i64 4766713520 to {}*), {}** %.sub, align 8
     store {}* %391, {}** %10, align 8
     %402 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L422.1

L422.1:                                           ; preds = %L417.1, %guard_pass152.1, %L420.1
     %value_phi135.1 = phi {}* [ %402, %L417.1 ], [ %397, %L420.1 ], [ %401, %guard_pass152.1 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags137.1 = load i16, i16* %arrayflags_ptr136, align 2
     %403 = and i16 %arrayflags137.1, 3
     %has_owner138.1 = icmp eq i16 %403, 3
     br i1 %has_owner138.1, label %array_owned139.1, label %merge_own140.1

array_owned139.1:                                 ; preds = %L422.1
     %external_owner141.1 = load {}*, {}** %202, align 8
     br label %merge_own140.1

merge_own140.1:                                   ; preds = %array_owned139.1, %L422.1
     %data_owner142.1 = phi {}* [ %199, %L422.1 ], [ %external_owner141.1, %array_owned139.1 ]
     %arrayptr144.1 = load {}**, {}*** %203, align 8
     %404 = getelementptr inbounds {}*, {}** %arrayptr144.1, i64 1
     store atomic {}* %value_phi135.1, {}** %404 release, align 8
     %405 = bitcast {}* %data_owner142.1 to i64*
     %406 = getelementptr inbounds i64, i64* %405, i64 -1
     %407 = load atomic i64, i64* %406 unordered, align 8
     %408 = and i64 %407, 3
     %409 = icmp eq i64 %408, 3
     br i1 %409, label %410, label %417

410:                                              ; preds = %merge_own140.1
     %411 = bitcast {}* %value_phi135.1 to i64*
     %412 = getelementptr inbounds i64, i64* %411, i64 -1
     %413 = load atomic i64, i64* %412 unordered, align 8
     %414 = and i64 %413, 1
     %415 = icmp eq i64 %414, 0
     br i1 %415, label %416, label %417

416:                                              ; preds = %410
     call void @ijl_gc_queue_root({}* nonnull %data_owner142.1)
     br label %417

417:                                              ; preds = %416, %410, %merge_own140.1
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %418 = call {}* @ijl_get_nth_field_checked({}* nonnull %198, i64 2)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %419 = bitcast {}* %418 to i64*
     %420 = getelementptr inbounds i64, i64* %419, i64 -1
     %421 = load atomic i64, i64* %420 unordered, align 8
     %422 = and i64 %421, -16
     %423 = add i64 %422, -16
     %switch538.2 = icmp ult i64 %423, 64
     br i1 %switch538.2, label %L417.2, label %L420.2

L420.2:                                           ; preds = %417
     %424 = inttoptr i64 %422 to {}*
     %425 = icmp ult {}* %424, inttoptr (i64 1024 to {}*)
     br i1 %425, label %guard_pass152.2, label %L422.2

guard_pass152.2:                                  ; preds = %L420.2
     %426 = getelementptr inbounds i8, i8* @small_typeof, i64 %422
     %427 = bitcast i8* %426 to {}**
     %428 = load {}*, {}** %427, align 8
     br label %L422.2

L417.2:                                           ; preds = %417
     store {}* %418, {}** %59, align 16
     store {}* inttoptr (i64 4766713520 to {}*), {}** %.sub, align 8
     store {}* %418, {}** %10, align 8
     %429 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L422.2

L422.2:                                           ; preds = %L417.2, %guard_pass152.2, %L420.2
     %value_phi135.2 = phi {}* [ %429, %L417.2 ], [ %424, %L420.2 ], [ %428, %guard_pass152.2 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags137.2 = load i16, i16* %arrayflags_ptr136, align 2
     %430 = and i16 %arrayflags137.2, 3
     %has_owner138.2 = icmp eq i16 %430, 3
     br i1 %has_owner138.2, label %array_owned139.2, label %merge_own140.2

array_owned139.2:                                 ; preds = %L422.2
     %external_owner141.2 = load {}*, {}** %202, align 8
     br label %merge_own140.2

merge_own140.2:                                   ; preds = %array_owned139.2, %L422.2
     %data_owner142.2 = phi {}* [ %199, %L422.2 ], [ %external_owner141.2, %array_owned139.2 ]
     %arrayptr144.2 = load {}**, {}*** %203, align 8
     %431 = getelementptr inbounds {}*, {}** %arrayptr144.2, i64 2
     store atomic {}* %value_phi135.2, {}** %431 release, align 8
     %432 = bitcast {}* %data_owner142.2 to i64*
     %433 = getelementptr inbounds i64, i64* %432, i64 -1
     %434 = load atomic i64, i64* %433 unordered, align 8
     %435 = and i64 %434, 3
     %436 = icmp eq i64 %435, 3
     br i1 %436, label %437, label %444

437:                                              ; preds = %merge_own140.2
     %438 = bitcast {}* %value_phi135.2 to i64*
     %439 = getelementptr inbounds i64, i64* %438, i64 -1
     %440 = load atomic i64, i64* %439 unordered, align 8
     %441 = and i64 %440, 1
     %442 = icmp eq i64 %441, 0
     br i1 %442, label %443, label %444

443:                                              ; preds = %437
     call void @ijl_gc_queue_root({}* nonnull %data_owner142.2)
     br label %444

444:                                              ; preds = %443, %437, %merge_own140.2
; ││└
; ││┌ @ tuple.jl:31 within `getindex`
     %445 = call {}* @ijl_get_nth_field_checked({}* nonnull %198, i64 3)
; ││└
; ││┌ @ boot.jl:245 within `Typeof`
     %446 = bitcast {}* %445 to i64*
     %447 = getelementptr inbounds i64, i64* %446, i64 -1
     %448 = load atomic i64, i64* %447 unordered, align 8
     %449 = and i64 %448, -16
     %450 = add i64 %449, -16
     %switch538.3 = icmp ult i64 %450, 64
     br i1 %switch538.3, label %L417.3, label %L420.3

L420.3:                                           ; preds = %444
     %451 = inttoptr i64 %449 to {}*
     %452 = icmp ult {}* %451, inttoptr (i64 1024 to {}*)
     br i1 %452, label %guard_pass152.3, label %L422.3

guard_pass152.3:                                  ; preds = %L420.3
     %453 = getelementptr inbounds i8, i8* @small_typeof, i64 %449
     %454 = bitcast i8* %453 to {}**
     %455 = load {}*, {}** %454, align 8
     br label %L422.3

L417.3:                                           ; preds = %444
     store {}* %445, {}** %59, align 16
     store {}* inttoptr (i64 4766713520 to {}*), {}** %.sub, align 8
     store {}* %445, {}** %10, align 8
     %456 = call nonnull {}* @jl_f_apply_type({}* null, {}** nonnull %.sub, i32 2)
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %L422.3

L422.3:                                           ; preds = %L417.3, %guard_pass152.3, %L420.3
     %value_phi135.3 = phi {}* [ %456, %L417.3 ], [ %451, %L420.3 ], [ %455, %guard_pass152.3 ]
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ essentials.jl:645 within `setindex!`
     %arrayflags137.3 = load i16, i16* %arrayflags_ptr136, align 2
     %457 = and i16 %arrayflags137.3, 3
     %has_owner138.3 = icmp eq i16 %457, 3
     br i1 %has_owner138.3, label %array_owned139.3, label %merge_own140.3

array_owned139.3:                                 ; preds = %L422.3
     %external_owner141.3 = load {}*, {}** %202, align 8
     br label %merge_own140.3

merge_own140.3:                                   ; preds = %array_owned139.3, %L422.3
     %data_owner142.3 = phi {}* [ %199, %L422.3 ], [ %external_owner141.3, %array_owned139.3 ]
     %arrayptr144.3 = load {}**, {}*** %203, align 8
     %458 = getelementptr inbounds {}*, {}** %arrayptr144.3, i64 3
     store atomic {}* %value_phi135.3, {}** %458 release, align 8
     %459 = bitcast {}* %data_owner142.3 to i64*
     %460 = getelementptr inbounds i64, i64* %459, i64 -1
     %461 = load atomic i64, i64* %460 unordered, align 8
     %462 = and i64 %461, 3
     %463 = icmp eq i64 %462, 3
     br i1 %463, label %464, label %471

464:                                              ; preds = %merge_own140.3
     %465 = bitcast {}* %value_phi135.3 to i64*
     %466 = getelementptr inbounds i64, i64* %465, i64 -1
     %467 = load atomic i64, i64* %466 unordered, align 8
     %468 = and i64 %467, 1
     %469 = icmp eq i64 %468, 0
     br i1 %469, label %470, label %471

470:                                              ; preds = %464
     call void @ijl_gc_queue_root({}* nonnull %data_owner142.3)
     br label %471

471:                                              ; preds = %470, %464, %merge_own140.3
; ││└
    store {}* inttoptr (i64 4694782816 to {}*), {}** %.sub, align 8
    store {}* inttoptr (i64 4755586496 to {}*), {}** %10, align 8
    store {}* inttoptr (i64 4704443072 to {}*), {}** %155, align 8
    store {}* %199, {}** %169, align 8
    %472 = call nonnull {}* @jl_f__apply_iterate({}* null, {}** nonnull %.sub, i32 4)
    store {}* %472, {}** %59, align 16
; │└
; │┌ @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/codeview.jl:295 within `code_llvm`
    call void @"j_#code_llvm#39_7325"(i8 zeroext 0, i8 zeroext 0, i8 zeroext 1, {}* inttoptr (i64 4307272216 to {}*), {}* readonly inttoptr (i64 5389776832 to {}*), {}* nonnull readonly %472)
; └└
; ┌ @ strings/io.jl:286 within `repr`
; │┌ @ strings/io.jl:286 within `#repr#504`
; ││┌ @ strings/io.jl:107 within `sprint`
     %473 = call nonnull {}* @"j_#sprint#501_7326"(i64 signext 0, {}* readonly inttoptr (i64 4713633216 to {}*))
     store {}* %473, {}** %59, align 16
; └└└
  call void @j_println_7323({}* inttoptr (i64 6083832416 to {}*), {}* nonnull %473)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1242
; ┌ @ boot.jl:245 within `Typeof`
   br i1 %switch540, label %L445, label %L448

guard_pass:                                       ; preds = %L448
   %474 = getelementptr inbounds i8, i8* @small_typeof, i64 %277
   %475 = bitcast i8* %474 to {}**
   %476 = load {}*, {}** %475, align 8
   br label %L450

guard_pass152:                                    ; preds = %L420
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ boot.jl:245 within `Typeof`
     %477 = getelementptr inbounds i8, i8* @small_typeof, i64 %208
     %478 = bitcast i8* %477 to {}**
     %479 = load {}*, {}** %478, align 8
     br label %L422

guard_pass155:                                    ; preds = %L405
; │└└
; │┌ @ boot.jl:245 within `Typeof`
    %480 = getelementptr inbounds i8, i8* @small_typeof, i64 %277
    %481 = bitcast i8* %480 to {}**
    %482 = load {}*, {}** %481, align 8
    br label %L407

guard_pass158:                                    ; preds = %L362
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240
; ┌ @ show.jl:1181 within `macro expansion` @ /Users/julia/.julia/scratchspaces/a66863c6-20e8-4ff4-8a62-49f30b1f605e/agent-cache/default-honeycrisp-R17H3W25T9.0/build/default-honeycrisp-R17H3W25T9-0/julialang/julia-release-1-dot-10/usr/share/julia/stdlib/v1.10/InteractiveUtils/src/macros.jl:226
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ boot.jl:245 within `Typeof`
     %483 = getelementptr inbounds i8, i8* @small_typeof, i64 %182
     %484 = bitcast i8* %483 to {}**
     %485 = load {}*, {}** %484, align 8
     br label %L364

guard_pass161:                                    ; preds = %L347
; │└└
; │┌ @ boot.jl:245 within `Typeof`
    %486 = getelementptr inbounds i8, i8* @small_typeof, i64 %277
    %487 = bitcast i8* %486 to {}**
    %488 = load {}*, {}** %487, align 8
    br label %L349

post_box_union:                                   ; preds = %L232
; └└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4766708480 to {}*), {}* inttoptr (i64 4715683296 to {}*))
     unreachable

pass169:                                          ; preds = %post_is205, %L246
     %unionalloca.sroa.0.0.ph = phi i8 [ %135, %L246 ], [ %496, %post_is205 ]
     %.not458 = icmp eq i8 %unionalloca.sroa.0.0.ph, 0
     br i1 %.not458, label %L260, label %L282

post_box_union186:                                ; preds = %L260
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4766708480 to {}*), {}* inttoptr (i64 4715683296 to {}*))
     unreachable

pass191:                                          ; preds = %post_is, %L264
     %unionalloca180.sroa.0.0.ph = phi i8 [ %141, %L264 ], [ %492, %post_is ]
     %.not463 = icmp eq i8 %unionalloca180.sroa.0.0.ph, 0
     br i1 %.not463, label %L278, label %L282

is:                                               ; preds = %L260
; │││┌ @ Base.jl:159 within `==`
      %489 = bitcast {}* %136 to i32*
      %unbox197 = load i32, i32* %489, align 4
      %490 = icmp eq i32 %unbox197, 0
      br label %post_is

post_is:                                          ; preds = %is, %L260
      %491 = phi i1 [ %490, %is ], [ false, %L260 ]
      %492 = zext i1 %491 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass191

is204:                                            ; preds = %L232
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
; │││┌ @ Base.jl:159 within `==`
      %493 = bitcast {}* %130 to i32*
      %unbox206 = load i32, i32* %493, align 4
      %494 = icmp eq i32 %unbox206, 0
      br label %post_is205

post_is205:                                       ; preds = %is204, %L232
      %495 = phi i1 [ %494, %is204 ], [ false, %L232 ]
      %496 = zext i1 %495 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass169

post_box_union221:                                ; preds = %L123
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4766708480 to {}*), {}* inttoptr (i64 4715683296 to {}*))
     unreachable

pass226:                                          ; preds = %post_is264, %L137
     %unionalloca215.sroa.0.0.ph = phi i8 [ %88, %L137 ], [ %504, %post_is264 ]
     %.not465 = icmp eq i8 %unionalloca215.sroa.0.0.ph, 0
     br i1 %.not465, label %L151, label %L173

post_box_union243:                                ; preds = %L151
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4766708480 to {}*), {}* inttoptr (i64 4715683296 to {}*))
     unreachable

pass248:                                          ; preds = %post_is255, %L155
     %unionalloca237.sroa.0.0.ph = phi i8 [ %94, %L155 ], [ %500, %post_is255 ]
     %.not470 = icmp eq i8 %unionalloca237.sroa.0.0.ph, 0
     br i1 %.not470, label %L169, label %L173

is254:                                            ; preds = %L151
; │││┌ @ Base.jl:159 within `==`
      %497 = bitcast {}* %89 to i32*
      %unbox256 = load i32, i32* %497, align 4
      %498 = icmp eq i32 %unbox256, 0
      br label %post_is255

post_is255:                                       ; preds = %is254, %L151
      %499 = phi i1 [ %498, %is254 ], [ false, %L151 ]
      %500 = zext i1 %499 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass248

is263:                                            ; preds = %L123
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
; │││┌ @ Base.jl:159 within `==`
      %501 = bitcast {}* %83 to i32*
      %unbox265 = load i32, i32* %501, align 4
      %502 = icmp eq i32 %unbox265, 0
      br label %post_is264

post_is264:                                       ; preds = %is263, %L123
      %503 = phi i1 [ %502, %is263 ], [ false, %L123 ]
      %504 = zext i1 %503 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass226

post_box_union282:                                ; preds = %L11
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4766708480 to {}*), {}* inttoptr (i64 4715683296 to {}*))
     unreachable

pass287:                                          ; preds = %post_is325, %L25
     %unionalloca276.sroa.0.0.ph = phi i8 [ %32, %L25 ], [ %512, %post_is325 ]
     %.not472 = icmp eq i8 %unionalloca276.sroa.0.0.ph, 0
     br i1 %.not472, label %L39, label %L61

post_box_union304:                                ; preds = %L39
     call void @ijl_type_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4766708480 to {}*), {}* inttoptr (i64 4715683296 to {}*))
     unreachable

pass309:                                          ; preds = %post_is316, %L43
     %unionalloca298.sroa.0.0.ph = phi i8 [ %38, %L43 ], [ %508, %post_is316 ]
     %.not477 = icmp eq i8 %unionalloca298.sroa.0.0.ph, 0
     br i1 %.not477, label %L57, label %L61

is315:                                            ; preds = %L39
; │││┌ @ Base.jl:159 within `==`
      %505 = bitcast {}* %33 to i32*
      %unbox317 = load i32, i32* %505, align 4
      %506 = icmp eq i32 %unbox317, 0
      br label %post_is316

post_is316:                                       ; preds = %is315, %L39
      %507 = phi i1 [ %506, %is315 ], [ false, %L39 ]
      %508 = zext i1 %507 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass309

is324:                                            ; preds = %L11
; └└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1220 within `make_zero`
; ┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:555 within `guaranteed_const_nongen`
; │┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 within `active_reg_inner` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:401 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:523
; ││┌ @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:331 within `forcefold`
; │││┌ @ Base.jl:159 within `==`
      %509 = bitcast {}* %27 to i32*
      %unbox326 = load i32, i32* %509, align 4
      %510 = icmp eq i32 %unbox326, 0
      br label %post_is325

post_is325:                                       ; preds = %is324, %L11
      %511 = phi i1 [ %510, %is324 ], [ false, %L11 ]
      %512 = zext i1 %511 to i8
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 within `make_zero` @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1261 @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241
; ┌ @ show.jl:1181 within `macro expansion`
; │┌ @ errorshow.jl:185 within `typesof`
; ││┌ @ range.jl:901 within `iterate`
     br label %pass287
; └└└
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
y = Core.Box(#undef)
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1273 within `make_zero`
define double @julia_make_zero_7328({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
  ret double 0xC19321B1E3AE3D7A
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
("end", y) = ("end", Core.Box(-8.024383292015639e7))
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1273 within `make_zero`
define double @julia_make_zero_7330({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
  ret double 0xC19321B1E3AE3D7A
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Vector{Int64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Vector{Int64}, %15)::Vector{Int64}
13 ┄ %26 = φ (#11 => %15, #12 => %25)::Any
│    %27 = π (%26, Vector{Int64})
└───       return %27
14 ─ %29 = Base.arraysize(prev, 1)::Int64
│    %30 = $(Expr(:foreigncall, :(:jl_alloc_array_1d), Vector{Int64}, svec(Any, Int64), 0, :(:ccall), Vector{Int64}, :(%29), :(%29)))::Vector{Int64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %30::Any, prev::Any)::Any
│    %32 = Base.arraysize(prev, 1)::Int64
│    %33 = Base.slt_int(%32, 0)::Bool
│    %34 = Core.ifelse(%33, 0, %32)::Int64
│    %35 = Base.slt_int(%34, 1)::Bool
└───       goto #16 if not %35
15 ─       goto #17
16 ─       goto #17
17 ┄ %39 = φ (#15 => true, #16 => false)::Bool
│    %40 = φ (#16 => 1)::Int64
│    %41 = φ (#16 => 1)::Int64
│    %42 = Base.not_int(%39)::Bool
└───       goto #30 if not %42
18 ┄ %44 = φ (#17 => %40, #29 => %75)::Int64
│    %45 = φ (#17 => %41, #29 => %76)::Int64
└───       goto #22 if not true
19 ─ %47 = Base.arraysize(prev, 1)::Int64
│    %48 = Base.slt_int(%47, 0)::Bool
│    %49 = Core.ifelse(%48, 0, %47)::Int64
│    %50 = Base.sub_int(%44, 1)::Int64
│    %51 = Base.bitcast(UInt64, %50)::UInt64
│    %52 = Base.bitcast(UInt64, %49)::UInt64
│    %53 = Base.ult_int(%51, %52)::Bool
└───       goto #21 if not %53
20 ─       goto #22
21 ─       goto #23
22 ┄ %57 = Base.sub_int(%44, 1)::Int64
│    %58 = Base.mul_int(%57, 1)::Int64
│    %59 = Base.add_int(1, %58)::Int64
│    %60 = Base.bitcast(UInt64, %59)::UInt64
│    %61 = Base.sub_int(%60, 0x0000000000000001)::UInt64
│    %62 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%61), :(%61)))::Int32
│    %63 = Core.sext_int(Core.Int64, %62)::Int64
│    %64 = (%63 === 1)::Bool
└───       goto #23
23 ┄ %66 = φ (#21 => false, #22 => %64)::Bool
└───       goto #25 if not %66
24 ─ %68 = Base.arrayref(true, prev, %44)::Int64
└───       Base.arrayset(false, %30, %68, %44)::Vector{Int64}
25 ┄ %70 = (%45 === %34)::Bool
└───       goto #27 if not %70
26 ─       goto #28
27 ─ %73 = Base.add_int(%45, 1)::Int64
└───       goto #28
28 ┄ %75 = φ (#27 => %73)::Int64
│    %76 = φ (#27 => %73)::Int64
│    %77 = φ (#26 => true, #27 => false)::Bool
│    %78 = Base.not_int(%77)::Bool
└───       goto #30 if not %78
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %30
) => Vector{Int64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_7332({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe32 = alloca [3 x {}*], align 16
  %gcframe32.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe32, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe32 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe32, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe32.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe32, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L29, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not24 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not24, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4694989648 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4694989648 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  br label %common.ret

common.ret:                                       ; preds = %L70, %L29, %L25, %L22
  %common.ret.op = phi {}* [ %23, %L25 ], [ %15, %L22 ], [ %27, %L29 ], [ %27, %L70 ]
  %24 = load {}*, {}** %5, align 8
  %25 = bitcast {}*** %2 to {}**
  store {}* %24, {}** %25, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L29:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:191 within `size`
   %26 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
   %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %26, i64 0, i32 1
   %arraylen = load i64, i64* %arraylen_ptr, align 8
; └
; ┌ @ boot.jl:484 within `Array` @ boot.jl:475
   %27 = call nonnull {}* inttoptr (i64 4311340472 to {}* ({}*, i64)*)({}* inttoptr (i64 4694989648 to {}*), i64 %arraylen)
   store {}* %27, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %28 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %27, {}** %28, align 8
  %29 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %29, align 8
  %30 = call nonnull {}* @"j1_setindex!_7333"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:318 within `eachindex`
; │┌ @ abstractarray.jl:134 within `axes1`
; ││┌ @ abstractarray.jl:98 within `axes`
; │││┌ @ array.jl:191 within `size`
      %arraylen5 = load i64, i64* %arraylen_ptr, align 8
; └└└└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not25.not = icmp eq i64 %arraylen5, 0
; └└└└
  br i1 %.not25.not, label %common.ret, label %L44.preheader

L44.preheader:                                    ; preds = %L29
  %31 = bitcast {}* %11 to i64**
  %arrayptr27 = load i64*, i64** %31, align 8
  %32 = bitcast {}* %27 to i64**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L44

L44:                                              ; preds = %L70, %L44.preheader
  %value_phi9 = phi i64 [ %34, %L70 ], [ 1, %L44.preheader ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %33 = add nsw i64 %value_phi9, -1
; │││└
; │││┌ @ int.jl:513 within `<`
      %.not26.not = icmp ult i64 %33, %arraylen5
; └└└└
  br i1 %.not26.not, label %idxend, label %L70

L70:                                              ; preds = %idxend, %L44
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not29.not = icmp eq i64 %value_phi9, %arraylen5
; │└
   %34 = add nuw nsw i64 %value_phi9, 1
; └
  br i1 %.not29.not, label %common.ret, label %L44

idxend:                                           ; preds = %L44
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1289 within `make_zero`
; ┌ @ essentials.jl:13 within `getindex`
   %35 = getelementptr inbounds i64, i64* %arrayptr27, i64 %33
   %arrayref = load i64, i64* %35, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr1828 = load i64*, i64** %32, align 8
   %36 = getelementptr inbounds i64, i64* %arrayptr1828, i64 %33
   store i64 %arrayref, i64* %36, align 8
   br label %L70
; └
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_7334({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7335"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_7336({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7337"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_7338({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7339"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_7340({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7341"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_7342({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7343"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_7344({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7345"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_7346({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7347"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_7348({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7349"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ─     nothing::Nothing
└──     return 0.0
) => Float64
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1273 within `make_zero`
define double @julia_make_zero_7350({}* noundef nonnull align 8 dereferenceable(24) %0, double %1) #0 {
top:
  ret double 0xC19321B1E3AE3D7A
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_7352({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7353"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_7354({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7355"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_7356({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7357"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1240 =# InteractiveUtils.@code_typed(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = CodeInfo(
1 ── %1  = Base.secret_table_token::Symbol
│    %2  = Base.getfield(seen, :ht)::Vector{Any}
│    %3  = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%2), Core.Argument(4), :(%1)))::Any
│    %4  = (%3 === %1)::Bool
└───       goto #3 if not %4
2 ──       goto #4
3 ──       goto #4
4 ┄─ %8  = φ (#2 => %1, #3 => %3)::Any
│    %9  = (%8 === Base.secret_table_token)::Bool
│    %10 = Core.Intrinsics.not_int(%9)::Bool
└───       goto #5
5 ──       goto #6
6 ──       goto #14 if not %10
7 ── %14 = Base.getfield(seen, :ht)::Vector{Any}
│    %15 = $(Expr(:foreigncall, :(:jl_eqtable_get), Any, svec(Any, Any, Any), 0, :(:ccall), :(%14), Core.Argument(4), :(Base.secret_table_token)))::Any
│    %16 = (%15 === Base.secret_table_token)::Bool
└───       goto #9 if not %16
8 ── %18 = Base.KeyError(prev)::Any
│          Base.throw(%18)::Union{}
└───       unreachable
9 ──       goto #10
10 ─ %22 = (%15 isa Matrix{Float64})::Bool
└───       goto #12 if not %22
11 ─       goto #13
12 ─ %25 = Base.convert(Matrix{Float64}, %15)::Any
│          Core.typeassert(%25, Matrix{Float64})::Matrix{Float64}
└─── %27 = π (%25, Matrix{Float64})
13 ┄ %28 = φ (#11 => %15, #12 => %27)::Any
│    %29 = π (%28, Matrix{Float64})
└───       return %29
14 ─ %31 = Base.arraysize(prev, 1)::Int64
│    %32 = Base.arraysize(prev, 2)::Int64
│    %33 = $(Expr(:foreigncall, :(:jl_alloc_array_2d), Matrix{Float64}, svec(Any, Int64, Int64), 0, :(:ccall), Matrix{Float64}, :(%31), :(%32), :(%32), :(%31)))::Matrix{Float64}
│          invoke Base.setindex!(seen::IdDict{Any, Any}, %33::Any, prev::Any)::Any
│    %35 = Base.arraylen(prev)::Int64
│    %36 = Base.slt_int(%35, 0)::Bool
│    %37 = Core.ifelse(%36, 0, %35)::Int64
│    %38 = Base.slt_int(%37, 1)::Bool
└───       goto #16 if not %38
15 ─       goto #17
16 ─       goto #17
17 ┄ %42 = φ (#15 => true, #16 => false)::Bool
│    %43 = φ (#16 => 1)::Int64
│    %44 = φ (#16 => 1)::Int64
│    %45 = Base.not_int(%42)::Bool
└───       goto #30 if not %45
18 ┄ %47 = φ (#17 => %43, #29 => %78)::Int64
│    %48 = φ (#17 => %44, #29 => %79)::Int64
└───       goto #22 if not true
19 ─ %50 = Base.arraylen(prev)::Int64
│    %51 = Base.slt_int(%50, 0)::Bool
│    %52 = Core.ifelse(%51, 0, %50)::Int64
│    %53 = Base.sub_int(%47, 1)::Int64
│    %54 = Base.bitcast(UInt64, %53)::UInt64
│    %55 = Base.bitcast(UInt64, %52)::UInt64
│    %56 = Base.ult_int(%54, %55)::Bool
└───       goto #21 if not %56
20 ─       goto #22
21 ─       goto #23
22 ┄ %60 = Base.sub_int(%47, 1)::Int64
│    %61 = Base.mul_int(%60, 1)::Int64
│    %62 = Base.add_int(1, %61)::Int64
│    %63 = Base.bitcast(UInt64, %62)::UInt64
│    %64 = Base.sub_int(%63, 0x0000000000000001)::UInt64
│    %65 = $(Expr(:foreigncall, :(:jl_array_isassigned), Int32, svec(Any, UInt64), 0, :(:ccall), Core.Argument(4), :(%64), :(%64)))::Int32
│    %66 = Core.sext_int(Core.Int64, %65)::Int64
│    %67 = (%66 === 1)::Bool
└───       goto #23
23 ┄ %69 = φ (#21 => false, #22 => %67)::Bool
└───       goto #25 if not %69
24 ─       Base.arrayref(true, prev, %47)::Float64
└───       Base.arrayset(false, %33, -8.024383292015639e7, %47)::Matrix{Float64}
25 ┄ %73 = (%48 === %37)::Bool
└───       goto #27 if not %73
26 ─       goto #28
27 ─ %76 = Base.add_int(%48, 1)::Int64
└───       goto #28
28 ┄ %78 = φ (#27 => %76)::Int64
│    %79 = φ (#27 => %76)::Int64
│    %80 = φ (#26 => true, #27 => false)::Bool
│    %81 = Base.not_int(%80)::Bool
└───       goto #30 if not %81
29 ─       goto #18
30 ┄       nothing::Nothing
└───       return %33
) => Matrix{Float64}
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1281 within `make_zero`
define nonnull {}* @japi1_make_zero_7358({}* %function, {}** noalias nocapture noundef readonly %args, i32 %nargs) #0 {
top:
  %0 = alloca [3 x {}*], align 8
  %gcframe35 = alloca [3 x {}*], align 16
  %gcframe35.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 0
  %.sub = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 0
  %1 = bitcast [3 x {}*]* %gcframe35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 true)
  %stackargs = alloca {}**, align 8
  store volatile {}** %args, {}*** %stackargs, align 8
  %2 = call {}*** inttoptr (i64 7105932816 to {}*** (i64)*)(i64 261) #4
  %3 = bitcast [3 x {}*]* %gcframe35 to i64*
  store i64 4, i64* %3, align 16
  %4 = load {}**, {}*** %2, align 8
  %5 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 1
  %6 = bitcast {}** %5 to {}***
  store {}** %4, {}*** %6, align 8
  %7 = bitcast {}*** %2 to {}***
  store {}** %gcframe35.sub, {}*** %7, align 8
  %8 = getelementptr inbounds {}*, {}** %args, i64 1
  %9 = load {}*, {}** %8, align 8
  %10 = getelementptr inbounds {}*, {}** %args, i64 2
  %11 = load {}*, {}** %10, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1282 within `make_zero`
; ┌ @ abstractdict.jl:17 within `haskey`
; │┌ @ iddict.jl:192 within `in`
; ││┌ @ iddict.jl:102 within `get`
; │││┌ @ Base.jl:37 within `getproperty`
      %12 = bitcast {}* %9 to {}**
      %getfield = load atomic {}*, {}** %12 unordered, align 8
      %13 = getelementptr inbounds [3 x {}*], [3 x {}*]* %gcframe35, i64 0, i64 2
      store {}* %getfield, {}** %13, align 16
; │││└
     %14 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │││ @ iddict.jl:103 within `get`
     %.not = icmp eq {}* %14, inttoptr (i64 4308354632 to {}*)
; └└└
  br i1 %.not, label %L31, label %L14

L14:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
; ┌ @ iddict.jl:107 within `getindex`
; │┌ @ Base.jl:37 within `getproperty`
    %getfield2 = load atomic {}*, {}** %12 unordered, align 8
    store {}* %getfield2, {}** %13, align 16
; │└
   %15 = call nonnull {}* inttoptr (i64 4311264240 to {}* ({}*, {}*, {}*)*)({}* nonnull %getfield2, {}* nonnull %11, {}* inttoptr (i64 4308354632 to {}*))
; │ @ iddict.jl:108 within `getindex`
   %.not26 = icmp eq {}* %15, inttoptr (i64 4308354632 to {}*)
   br i1 %.not26, label %L18, label %L22

L18:                                              ; preds = %L14
   store {}* %11, {}** %.sub, align 8
   %16 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4747319568 to {}*), {}** nonnull %.sub, i32 1)
   call void @ijl_throw({}* %16)
   unreachable

L22:                                              ; preds = %L14
; └
  %17 = bitcast {}* %15 to i64*
  %18 = getelementptr inbounds i64, i64* %17, i64 -1
  %19 = load atomic i64, i64* %18 unordered, align 8
  %20 = and i64 %19, -16
  %21 = inttoptr i64 %20 to {}*
  %exactly_isa.not = icmp eq {}* %21, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa.not, label %common.ret, label %L25

L25:                                              ; preds = %L22
  store {}* %15, {}** %13, align 16
  store {}* inttoptr (i64 4359983056 to {}*), {}** %.sub, align 8
  %22 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %15, {}** %22, align 8
  %23 = call nonnull {}* @ijl_apply_generic({}* inttoptr (i64 4713632704 to {}*), {}** nonnull %.sub, i32 2)
  %24 = bitcast {}* %23 to i64*
  %25 = getelementptr inbounds i64, i64* %24, i64 -1
  %26 = load atomic i64, i64* %25 unordered, align 8
  %27 = and i64 %26, -16
  %28 = inttoptr i64 %27 to {}*
  %exactly_isa5 = icmp eq {}* %28, inttoptr (i64 4359983056 to {}*)
  br i1 %exactly_isa5, label %common.ret, label %fail

common.ret:                                       ; preds = %L73, %middle.block, %L31, %L25, %L22
  %common.ret.op = phi {}* [ %15, %L22 ], [ %34, %L31 ], [ %23, %L25 ], [ %34, %middle.block ], [ %34, %L73 ]
  %29 = load {}*, {}** %5, align 8
  %30 = bitcast {}*** %2 to {}**
  store {}* %29, {}** %30, align 8
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl within `make_zero`
  ret {}* %common.ret.op

L31:                                              ; preds = %top
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1285 within `make_zero`
; ┌ @ array.jl:192 within `size`
   %31 = bitcast {}* %11 to {}**
   %arraysize_ptr = getelementptr inbounds {}*, {}** %31, i64 3
   %32 = bitcast {}** %arraysize_ptr to i64*
   %arraysize = load i64, i64* %32, align 8
   %arraysize_ptr6 = getelementptr inbounds {}*, {}** %31, i64 4
   %33 = bitcast {}** %arraysize_ptr6 to i64*
   %arraysize7 = load i64, i64* %33, align 8
; └
; ┌ @ boot.jl:485 within `Array` @ boot.jl:477
   %34 = call nonnull {}* inttoptr (i64 4311340512 to {}* ({}*, i64, i64)*)({}* inttoptr (i64 4359983056 to {}*), i64 %arraysize, i64 %arraysize7)
   store {}* %34, {}** %13, align 16
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1286 within `make_zero`
  store {}* %9, {}** %.sub, align 8
  %35 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 1
  store {}* %34, {}** %35, align 8
  %36 = getelementptr inbounds [3 x {}*], [3 x {}*]* %0, i64 0, i64 2
  store {}* %11, {}** %36, align 8
  %37 = call nonnull {}* @"j1_setindex!_7359"({}* inttoptr (i64 4694638864 to {}*), {}** nonnull %.sub, i32 3)
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1287 within `make_zero`
; ┌ @ abstractarray.jl:375 within `eachindex` @ abstractarray.jl:385
; │┌ @ essentials.jl:10 within `length`
    %38 = bitcast {}* %11 to { i8*, i64, i16, i16, i32 }*
    %arraylen_ptr = getelementptr inbounds { i8*, i64, i16, i16, i32 }, { i8*, i64, i16, i16, i32 }* %38, i64 0, i32 1
    %arraylen = load i64, i64* %arraylen_ptr, align 8
; └└
; ┌ @ range.jl:897 within `iterate`
; │┌ @ range.jl:672 within `isempty`
; ││┌ @ operators.jl:376 within `>`
; │││┌ @ int.jl:83 within `<`
      %.not27.not = icmp eq i64 %arraylen, 0
; └└└└
  br i1 %.not27.not, label %common.ret, label %L47.preheader

L47.preheader:                                    ; preds = %L31
  %39 = bitcast {}* %34 to double**
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  %min.iters.check = icmp eq i64 %arraylen, 1
  br i1 %min.iters.check, label %L47.preheader.scalar.ph_crit_edge, label %vector.ph

L47.preheader.scalar.ph_crit_edge:                ; preds = %L47.preheader
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %scalar.ph

vector.ph:                                        ; preds = %L47.preheader
  %n.vec = and i64 %arraylen, 9223372036854775806
  %ind.end = or i64 %arraylen, 1
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %.pre = load double*, double** %39, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %40 = getelementptr inbounds double, double* %.pre, i64 %index
   %41 = bitcast double* %40 to <2 x double>*
   store <2 x double> zeroinitializer, <2 x double>* %41, align 8
   %index.next = add nuw i64 %index, 2
   %42 = icmp eq i64 %index.next, %n.vec
   br i1 %42, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
  %cmp.n = icmp eq i64 %arraylen, %n.vec
  br i1 %cmp.n, label %common.ret, label %scalar.ph

scalar.ph:                                        ; preds = %middle.block, %L47.preheader.scalar.ph_crit_edge
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %arrayptr2029.pre = phi double* [ %.pre, %middle.block ], [ %arrayptr2029.pre.pre, %L47.preheader.scalar.ph_crit_edge ]
   %bc.resume.val = phi i64 [ %ind.end, %middle.block ], [ 1, %L47.preheader.scalar.ph_crit_edge ]
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1288 within `make_zero`
  br label %L73

L73:                                              ; preds = %L73, %scalar.ph
  %value_phi11 = phi i64 [ %44, %L73 ], [ %bc.resume.val, %scalar.ph ]
; ┌ @ array.jl:268 within `isassigned`
; │┌ @ abstractarray.jl:684 within `checkbounds`
; ││┌ @ abstractarray.jl:760 within `checkindex`
; │││┌ @ int.jl:86 within `-`
      %43 = add nsw i64 %value_phi11, -1
; └└└└
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1290 within `make_zero`
; ┌ @ array.jl:1019 within `setindex!`
   %memcpy_refined_dst = getelementptr inbounds double, double* %arrayptr2029.pre, i64 %43
   store double 0.000000e+00, double* %memcpy_refined_dst, align 8
; └
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1292 within `make_zero`
; ┌ @ range.jl:901 within `iterate`
; │┌ @ promotion.jl:521 within `==`
    %.not30.not = icmp eq i64 %value_phi11, %arraylen
; │└
   %44 = add nuw nsw i64 %value_phi11, 1
; └
  br i1 %.not30.not, label %common.ret, label %L73

fail:                                             ; preds = %L25
;  @ /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1283 within `make_zero`
  call void @ijl_type_error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_j_str1, i64 0, i64 0), {}* inttoptr (i64 4359983056 to {}*), {}* %23)
  unreachable
}
#= /Users/swilliamson/Documents/GitHub/data_assimilation_2/three_mass_spring/Enzyme.jl/src/compiler.jl:1241 =# InteractiveUtils.@code_llvm(EnzymeCore.make_zero(Core.Typeof(xi), seen, xi, Val(copy_if_inactive))) = nothing
("end", y) = ("end", Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 -8.024383292015639e7
  x: Array{Float64}((6,)) [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
  u: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  n: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  k: Float64 -8.024383292015639e7
  r: Float64 -8.024383292015639e7
  q: q_kf (function of type Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
  J: Float64 -8.024383292015639e7
  data_steps: Array{Int64}((21,)) [3000, 3200, 3400, 3600, 3800, 4000, 4200, 4400, 4600, 4800  …  5200, 5400, 5600, 5800, 6000, 6200, 6400, 6600, 6800, 7000]
  data: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  states: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  energy: Array{Float64}((3, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  A: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  B: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Gamma: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  E: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q_inv: Float64 -8.024383292015639e7
  R: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  R_inv: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  K: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Kc: Array{Float64}((3, 3)) [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]
)
dparams_adjoint2 = Main.ThreeMassSpring.mso_params_ops{Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"}}
  T: Int64 10000
  t: Int64 0
  dt: Float64 -8.024383292015639e7
  x: Array{Float64}((6,)) [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
  u: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  n: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  k: Float64 -8.024383292015639e7
  r: Float64 -8.024383292015639e7
  q: q_kf (function of type Main.ThreeMassSpring.var"#q_kf#36"{Main.ThreeMassSpring.var"#q_true#35"})
  J: Float64 -8.024383292015639e7
  data_steps: Array{Int64}((21,)) [3000, 3200, 3400, 3600, 3800, 4000, 4200, 4400, 4600, 4800  …  5200, 5400, 5600, 5800, 6000, 6200, 6400, 6600, 6800, 7000]
  data: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  states: Array{Float64}((6, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  energy: Array{Float64}((3, 10001)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  A: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  B: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Gamma: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  E: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Q_inv: Float64 -8.024383292015639e7
  R: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  R_inv: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  K: Array{Float64}((6, 6)) [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]
  Kc: Array{Float64}((3, 3)) [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]

total_cost = 8.089526008233672e9
total_cost = 8.09305243851048e7
total_cost = 809125.2431171616
total_cost = 8190.154598154145
total_cost = 208.3665231671202
total_cost = 131.30417620367544
total_cost = 130.80910533675768
total_cost = 130.83170986348932
total_cost = 130.8346914249844
total_cost = 130.83499680906013
diffs = Any[8.08952587739864e10, 8.093039355007402e9, 8.089944080863773e8, 8.059319567369953e7, 7.753149238292817e6, 469145.41948342504, -259254.47434332228, -332092.070269141, -339359.20760086447, -339751.3188474477]
dparams_adjoint2.k = -8.058402127520761e7
